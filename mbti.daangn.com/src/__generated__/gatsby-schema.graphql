# Add date formatting options.
directive @dateformat(formatString: String, locale: String, fromNow: Boolean, difference: String) on FIELD_DEFINITION

# Link to node by foreign-key relation.
directive @link(by: String! = "id", from: String, on: String) on FIELD_DEFINITION

# Link to File node by relative path.
directive @fileByRelativePath(from: String) on FIELD_DEFINITION

# Proxy resolver from another field.
directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

# Infer field types from field values.
directive @infer on OBJECT

# Do not infer field types from field values.
directive @dontInfer on OBJECT

# Define the mime-types handled by this type.
directive @mimeTypes(
  # The mime-types handled by this type.
  types: [String!]! = []
) on OBJECT

# Define parent-child relations between types. This is used to add `child*` and `children*` convenience fields like `childImageSharp`.
directive @childOf(
  # A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin.
  mimeTypes: [String!]! = []

  # A list of types this type is a child of. Usually these are the types handled by a transformer plugin.
  types: [String!]! = []
) on OBJECT

# DEPRECATED: Use interface inheritance instead, i.e. "interface Foo implements Node".
#
# Adds root query fields for an interface. All implementing types must also implement the Node interface.
directive @nodeInterface on INTERFACE

type File implements Node {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  accessTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  changeTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  ctime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  url: String

  # Copy file to static directory and return public url to it
  publicURL: String

  # Returns all children nodes filtered by type ImageSharp
  childrenImageSharp: [ImageSharp]

  # Returns the first child node of type ImageSharp or null if there are no children of given type on this node
  childImageSharp: ImageSharp
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# Node Interface
interface Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

# A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
scalar Date

type Directory implements Node {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  accessTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  changeTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  ctime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type Site implements Node {
  buildTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  siteMetadata: SiteMetadata!
  port: Int
  host: String
  flags: SiteFlags
  polyfill: Boolean
  pathPrefix: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SiteFlags {
  FAST_DEV: Boolean
  QUERY_ON_DEMAND: Boolean
  LAZY_IMAGES: Boolean
  PARALLEL_SOURCING: Boolean
  DEV_SSR: Boolean
}

type SiteSiteMetadata {
  title: String
  description: String
}

type SiteFunction implements Node {
  functionRoute: String!
  pluginName: String!
  originalAbsoluteFilePath: String!
  originalRelativeFilePath: String!
  relativeCompiledFilePath: String!
  absoluteCompiledFilePath: String!
  matchPath: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SitePage implements Node {
  path: String!
  component: String!
  internalComponentName: String!
  componentChunkName: String!
  matchPath: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  isCreatedByStatefulCreatePages: Boolean
  context: SitePageContext
  pluginCreator: SitePlugin
  pluginCreatorId: String
}

type SitePageContext {
  id: String
  uid: String
  _xparams: SitePageContext_xparams
}

type SitePageContext_xparams {
  uid: String
}

enum ImageFormat {
  NO_CHANGE
  AUTO
  JPG
  PNG
  WEBP
  AVIF
}

enum ImageFit {
  COVER
  CONTAIN
  FILL
  INSIDE
  OUTSIDE
}

enum ImageLayout {
  FIXED
  FULL_WIDTH
  CONSTRAINED
}

enum ImageCropFocus {
  CENTER
  NORTH
  NORTHEAST
  EAST
  SOUTHEAST
  SOUTH
  SOUTHWEST
  WEST
  NORTHWEST
  ENTROPY
  ATTENTION
}

input DuotoneGradient {
  highlight: String!
  shadow: String!
  opacity: Int
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_WHITE
  TURNPOLICY_LEFT
  TURNPOLICY_RIGHT
  TURNPOLICY_MINORITY
  TURNPOLICY_MAJORITY
}

input Potrace {
  turnPolicy: PotraceTurnPolicy
  turdSize: Float
  alphaMax: Float
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  blackOnWhite: Boolean
  color: String
  background: String
}

type ImageSharp implements Node {
  fixed(width: Int, height: Int, base64Width: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, traceSVG: Potrace, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpFixed
  fluid(
    maxWidth: Int
    maxHeight: Int
    base64Width: Int
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    jpegQuality: Int
    pngQuality: Int
    webpQuality: Int
    toFormat: ImageFormat = AUTO
    toFormatBase64: ImageFormat = AUTO
    cropFocus: ImageCropFocus = ATTENTION
    fit: ImageFit = COVER
    background: String = "rgba(0,0,0,1)"
    rotate: Int = 0
    trim: Float = 0
    sizes: String = ""

    # A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]
    srcSetBreakpoints: [Int] = []
  ): ImageSharpFluid
  gatsbyImageData(
    # The layout for the image.
    # FIXED: A static image sized, that does not resize according to the screen width
    # FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
    # CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    layout: ImageLayout = CONSTRAINED

    # The display width of the generated image for layout = FIXED, and the maximum display width of the largest image for layout = CONSTRAINED.
    # Ignored if layout = FLUID.
    width: Int

    # The display height of the generated image for layout = FIXED, and the maximum display height of the largest image for layout = CONSTRAINED.
    # The image will be cropped if the aspect ratio does not match the source image. If omitted, it is calculated from the supplied width,
    # matching the aspect ratio of the source image.
    height: Int

    # If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
    # If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    aspectRatio: Float

    # Format of generated placeholder image, displayed while the main image loads.
    # BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
    # DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
    # TRACED_SVG: a low-resolution traced SVG of the image.
    # NONE: no placeholder. Set "background" to use a fixed background color.
    placeholder: ImagePlaceholder

    # Options for the low-resolution placeholder image. Set placeholder to "BLURRED" to use this
    blurredOptions: BlurredOptions

    # Options for traced placeholder SVGs. You also should set placeholder to "TRACED_SVG".
    tracedSVGOptions: Potrace

    # The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
    # The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
    # not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
    # both PNG and JPG is not supported and will be ignored.
    formats: [ImageFormat]

    # A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
    # Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1, 2] for CONSTRAINED. In this case, an image with a constrained layout
    # and width = 400 would generate images at 100, 200, 400 and 800px wide. Ignored for FULL_WIDTH images, which use breakpoints instead
    outputPixelDensities: [Float]

    # Specifies the image widths to generate. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
    # based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
    # It will never generate any images larger than the source.
    breakpoints: [Int]

    # The "sizes" property, passed to the img tag. This describes the display size of the image.
    # This does not affect the generated images, but is used by the browser to decide which images to download.
    # You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
    # does not actually span the full width of the screen, in which case you should pass the correct size here.
    sizes: String

    # The default quality. This is overridden by any format-specific options
    quality: Int

    # Options to pass to sharp when generating JPG images.
    jpgOptions: JPGOptions

    # Options to pass to sharp when generating PNG images.
    pngOptions: PNGOptions

    # Options to pass to sharp when generating WebP images.
    webpOptions: WebPOptions

    # Options to pass to sharp when generating AVIF images.
    avifOptions: AVIFOptions

    # Options to pass to sharp to control cropping and other image manipulations.
    transformOptions: TransformOptions

    # Background color applied to the wrapper. Also passed to sharp to use as a background when "letterboxing" an image to another aspect ratio.
    backgroundColor: String
  ): JSON!
  original: ImageSharpOriginal
  resize(width: Int, height: Int, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, jpegProgressive: Boolean = true, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, base64: Boolean = false, traceSVG: Potrace, toFormat: ImageFormat = AUTO, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpResize
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type ImageSharpFixed {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  width: Float!
  height: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  originalName: String
}

type ImageSharpFluid {
  base64: String
  tracedSVG: String
  aspectRatio: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  sizes: String!
  originalImg: String
  originalName: String
  presentationWidth: Int!
  presentationHeight: Int!
}

# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

enum ImagePlaceholder {
  DOMINANT_COLOR
  TRACED_SVG
  BLURRED
  NONE
}

input BlurredOptions {
  # Width of the generated low-res preview. Default is 20px
  width: Int

  # Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this
  toFormat: ImageFormat
}

input JPGOptions {
  quality: Int
  progressive: Boolean = true
}

input PNGOptions {
  quality: Int
  compressionSpeed: Int = 4
}

input WebPOptions {
  quality: Int
}

input AVIFOptions {
  quality: Int
  lossless: Boolean
  speed: Int
}

input TransformOptions {
  grayscale: Boolean = false
  duotone: DuotoneGradient
  rotate: Int = 0
  trim: Float = 0
  cropFocus: ImageCropFocus = ATTENTION
  fit: ImageFit = COVER
}

type ImageSharpOriginal {
  width: Float
  height: Float
  src: String
}

type ImageSharpResize {
  src: String
  tracedSVG: String
  width: Int
  height: Int
  aspectRatio: Float
  originalName: String
}

type PrismicMbtiTestQuestionBodyIePrimaryType {
  question: String
  answer_i: PrismicStructuredTextType
  answer_e: PrismicStructuredTextType
}

type PrismicMbtiTestQuestionBodyIe implements PrismicSliceType & Node {
  slice_type: String!
  slice_label: String
  primary: PrismicMbtiTestQuestionBodyIePrimaryType
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

interface PrismicSliceType {
  # The slice type API ID.
  slice_type: String!

  # The slice label.
  slice_label: String
}

type PrismicMbtiTestQuestionBodyNsPrimaryType {
  question: String
  answer_n: PrismicStructuredTextType
  answer_s: PrismicStructuredTextType
}

type PrismicMbtiTestQuestionBodyNs implements PrismicSliceType & Node {
  slice_type: String!
  slice_label: String
  primary: PrismicMbtiTestQuestionBodyNsPrimaryType
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type PrismicMbtiTestQuestionBodyFtPrimaryType {
  question: String
  answer_f: PrismicStructuredTextType
  answer_t: PrismicStructuredTextType
}

type PrismicMbtiTestQuestionBodyFt implements PrismicSliceType & Node {
  slice_type: String!
  slice_label: String
  primary: PrismicMbtiTestQuestionBodyFtPrimaryType
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type PrismicMbtiTestQuestionBodyPjPrimaryType {
  question: String
  answer_p: PrismicStructuredTextType
  answer_j: PrismicStructuredTextType
}

type PrismicMbtiTestQuestionBodyPj implements PrismicSliceType & Node {
  slice_type: String!
  slice_label: String
  primary: PrismicMbtiTestQuestionBodyPjPrimaryType
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

union PrismicMbtiTestQuestionBodySlicesType = PrismicMbtiTestQuestionBodyIe | PrismicMbtiTestQuestionBodyNs | PrismicMbtiTestQuestionBodyFt | PrismicMbtiTestQuestionBodyPj

type PrismicMbtiTestQuestionDataType {
  body: [PrismicMbtiTestQuestionBodySlicesType!]!
}

type PrismicMbtiTestQuestion implements PrismicDocument & Node {
  data: PrismicMbtiTestQuestionDataType
  dataRaw: JSON!
  dataString: String!
  first_publication_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  href: String!
  url: String
  lang: String!
  last_publication_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  tags: [String!]!
  alternate_languages: [PrismicLinkType!]!
  type: String!
  prismicId: ID!
  _previewable: ID!
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

interface PrismicDocument {
  # The document's data object without transformations exactly as it comes from the Prismic API.
  dataRaw: JSON!

  # The document's data object without transformations. The object is stringified via `JSON.stringify` to eliminate the need to declare subfields.
  dataString: String @deprecated(reason: "Use `dataRaw` instead which returns JSON.")

  # The document's initial publication date.
  first_publication_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # The document's Prismic API URL.
  href: String

  # The document's URL derived via the link resolver.
  url: String

  # Globally unique identifier. Note that this differs from the `prismicID` field.
  id: ID!

  # The document's language.
  lang: String!

  # The document's most recent publication date
  last_publication_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # The document's list of tags.
  tags: [String!]!

  # Alternate languages for the document.
  alternate_languages: [PrismicLinkType!]!

  # The document's Prismic API ID type.
  type: String!

  # The document's Prismic ID.
  prismicId: ID!

  # Marks the document as previewable using Prismic's preview system. Include this field if updates to the document should be previewable by content editors before publishing. **Note: the value of this field is not stable and should not be used directly**.
  _previewable: ID!
}

type PrismicMbtiTestResultCommentsGroupType {
  text: String
}

type PrismicMbtiTestResultTagsGroupType {
  tag_name: String
}

type PrismicMbtiTestResultRemarksGroupType {
  remark_name: String!
  remark_description: PrismicStructuredTextType
}

type PrismicMbtiTestResultRelationsGroupType {
  relation_type: String
  relation_color: String
  relation_entry: PrismicLinkType
}

type PrismicMbtiTestResultDataType {
  summary: String
  og_description: String
  opengraph_image: PrismicImageType
  comments: [PrismicMbtiTestResultCommentsGroupType]
  thumbnail: PrismicImageType!
  avatar: PrismicImageType
  tags: [PrismicMbtiTestResultTagsGroupType]
  remarks: [PrismicMbtiTestResultRemarksGroupType]
  relations: [PrismicMbtiTestResultRelationsGroupType!]!
}

type PrismicMbtiTestResult implements PrismicDocument & Node {
  data: PrismicMbtiTestResultDataType
  dataRaw: JSON!
  dataString: String!
  first_publication_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  href: String!
  url: String
  lang: String!
  last_publication_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  tags: [String!]!
  alternate_languages: [PrismicLinkType!]!
  type: String!
  prismicId: ID!
  _previewable: ID!
  uid: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type PrismicMbtiIntroDataType {
  title: String
  description: String
  opengraph_image: PrismicImageType
}

type PrismicMbtiIntro implements PrismicDocument & Node {
  data: PrismicMbtiIntroDataType
  dataRaw: JSON!
  dataString: String!
  first_publication_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  href: String!
  url: String
  lang: String!
  last_publication_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  tags: [String!]!
  alternate_languages: [PrismicLinkType!]!
  type: String!
  prismicId: ID!
  _previewable: ID!
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

union PrismicAllDocumentTypes = PrismicMbtiTestQuestion | PrismicMbtiTestResult | PrismicMbtiIntro

scalar PrismicImageThumbnailsType

type PrismicImageFixedType {
  base64: String!
  src: String!
  srcSet: String!
  srcWebp: String!
  srcSetWebp: String!
  sizes: String!
  width: Int!
  height: Int!
}

type PrismicImageFluidType {
  base64: String!
  src: String!
  srcSet: String!
  srcWebp: String!
  srcSetWebp: String!
  sizes: String!
  aspectRatio: Float!
}

# An image field with optional constrained thumbnails.
type PrismicImageType implements PrismicImageInterface {
  alt: String
  copyright: String
  dimensions: PrismicImageDimensionsType
  url(imgixParams: ImgixUrlParamsInput = {}): String
  fixed(width: Int = 400, height: Int, imgixParams: ImgixUrlParamsInput = {}, placeholderImgixParams: ImgixUrlParamsInput = {}): PrismicImageFixedType
  fluid(maxWidth: Int = 800, maxHeight: Int, srcSetBreakpoints: [Int], imgixParams: ImgixUrlParamsInput = {}, placeholderImgixParams: ImgixUrlParamsInput = {}): PrismicImageFluidType
  localFile: File
  thumbnails: PrismicImageThumbnailsType
}

interface PrismicImageInterface {
  # The image's alternative text.
  alt: String

  # The image's copyright text.
  copyright: String

  # The image's dimensions.
  dimensions: PrismicImageDimensionsType

  # The image's URL on Prismic's CDN.
  url: String

  # The locally downloaded image if `shouldNormalizeImage` returns true.
  localFile: File
  fixed: PrismicImageFixedType
  fluid: PrismicImageFluidType
}

input ImgixUrlParamsInput {
  # Specifies an aspect ratio to maintain when resizing and cropping the image. [See docs](https://docs.imgix.com/apis/url/size/ar).
  ar: String

  # Applies automatic enhancements to images. [See docs](https://docs.imgix.com/apis/url/auto).
  auto: String

  # Colors the background of padded and partially-transparent images. Default: `fff`. [See docs](https://docs.imgix.com/apis/url/bg).
  bg: String

  # Changes the blend alignment relative to the parent image. [See docs](https://docs.imgix.com/apis/url/blending/blend-align).
  blendAlign: String

  # Alias for `blendAlign`.
  blendalign: String

  # Alias for `blendAlign`.
  ba: String

  # Changes the alpha of the blend image. Default: `100`. [See docs](https://docs.imgix.com/apis/url/blending/blend-alpha).
  blendAlpha: Int

  # Alias for `blendAlpha`.
  blendalpha: Int

  # Alias for `blendAlpha`.
  balph: Int

  # Specifies a color to use when applying the blend. [See docs](https://docs.imgix.com/apis/url/blending/blend-color).
  blendColor: String

  # Alias for `blendColor`.
  blendcolor: String

  # Alias for `blendColor`.
  blendClr: String

  # Alias for `blendColor`.
  blendclr: String

  # Specifies the type of crop for blend images. [See docs](https://docs.imgix.com/apis/url/blending/blend-crop).
  blendCrop: String

  # Alias for `blendCrop`.
  blendcrop: String

  # Alias for `blendCrop`.
  bc: String

  # Specifies the fit mode for blend images. Default: `clip`. [See docs](https://docs.imgix.com/apis/url/blending/blend-fit).
  blendFit: String

  # Alias for `blendFit`.
  blendfit: String

  # Alias for `blendFit`.
  bf: String

  # Adjusts the height of the blend image. [See docs](https://docs.imgix.com/apis/url/blending/blend-h).
  blendH: Int

  # Alias for `blendH`.
  blendh: Int

  # Alias for `blendH`.
  bh: Int

  # Sets the blend mode for a blend image. Default: `overlay`. [See docs](https://docs.imgix.com/apis/url/blending/blend-mode).
  blendMode: String

  # Alias for `blendMode`.
  blendmode: String

  # Alias for `blendMode`.
  bm: String

  # Applies padding to the blend image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/blending/blend-pad).
  blendPad: Int

  # Alias for `blendPad`.
  blendpad: Int

  # Alias for `blendPad`.
  bp: Int

  # Adjusts the size of the blend image. [See docs](https://docs.imgix.com/apis/url/blending/blend-size).
  blendSize: String

  # Alias for `blendSize`.
  blendsize: String

  # Alias for `blendSize`.
  bs: String

  # Adjusts the width of the blend image. [See docs](https://docs.imgix.com/apis/url/blending/blend-w).
  blendW: Int

  # Alias for `blendW`.
  blendw: Int

  # Alias for `blendW`.
  bw: Int

  # Adjusts the x-offset of the blend image relative to its parent. Default: `0`. [See docs](https://docs.imgix.com/apis/url/blending/blend-x).
  blendX: Int

  # Alias for `blendX`.
  blendx: Int

  # Alias for `blendX`.
  bx: Int

  # Adjusts the y-offset of the blend image relative to its parent. Default: `0`. [See docs](https://docs.imgix.com/apis/url/blending/blend-y).
  blendY: Int

  # Alias for `blendY`.
  blendy: Int

  # Alias for `blendY`.
  by: Int

  # Specifies the location of the blend image. [See docs](https://docs.imgix.com/apis/url/blending/blend).
  blend: String

  # Alias for `blend`.
  b: String

  # Applies a gaussian blur to an image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/stylize/blur).
  blur: Int

  # Sets bottom border of an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/border-bottom).
  borderBottom: Int

  # Sets left border of an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/border-left).
  borderLeft: Int

  # Sets the inner radius of the image's border in pixels. [See docs](https://docs.imgix.com/apis/url/border-and-padding/border-radius-inner).
  borderRadiusInner: String

  # Sets the outer radius of the image's border in pixels. [See docs](https://docs.imgix.com/apis/url/border-and-padding/border-radius).
  borderRadius: String

  # Sets right border of an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/border-right).
  borderRight: Int

  # Sets top border of an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/border-top).
  borderTop: Int

  # Applies a border to an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/border).
  border: String

  # Adjusts the brightness of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/bri).
  bri: Int

  # Sets one or more Client-Hints headers. [See docs](https://docs.imgix.com/apis/url/format/ch).
  ch: String

  # Specifies the output chroma subsampling rate. Default: `420`. [See docs](https://docs.imgix.com/apis/url/format/chromasub).
  chromasub: Int

  # Limits the number of unique colors in an image. [See docs](https://docs.imgix.com/apis/url/format/colorquant).
  colorquant: Int

  # Specifies how many colors to include in a palette-extraction response. Default: `6`. [See docs](https://docs.imgix.com/apis/url/color-palette/colors).
  colors: Int

  # Adjusts the contrast of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/con).
  con: Int

  # Specifies the radius value for a rounded corner mask. [See docs](https://docs.imgix.com/apis/url/mask/corner-radius).
  cornerRadius: String

  # Specifies how to crop an image. [See docs](https://docs.imgix.com/apis/url/size/crop).
  crop: String

  # Specifies the color space of the output image. [See docs](https://docs.imgix.com/apis/url/format/cs).
  cs: String

  # Forces a URL to use send-file in its response. [See docs](https://docs.imgix.com/apis/url/format/dl).
  dl: String

  # Sets the DPI value in the EXIF header. [See docs](https://docs.imgix.com/apis/url/format/dpi).
  dpi: Int

  # Adjusts the device-pixel ratio of the output image. Default: `1`. [See docs](https://docs.imgix.com/apis/url/dpr).
  dpr: Float

  # Changes the alpha of the duotone effect atop the source image. Default: `100`. [See docs](https://docs.imgix.com/apis/url/stylize/duotone-alpha).
  duotoneAlpha: Int

  # Applies a duotone effect to the source image. [See docs](https://docs.imgix.com/apis/url/stylize/duotone).
  duotone: String

  # Adjusts the exposure of the output image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/exp).
  exp: Int

  # A Unix timestamp specifying a UTC time. Requests made to this URL after that time will output a 404 status code. [See docs](https://docs.imgix.com/apis/url/expires).
  expires: String

  # Selects a face to crop to. [See docs](https://docs.imgix.com/apis/url/face-detection/faceindex).
  faceindex: Int

  # Adjusts padding around a selected face. Default: `1`. [See docs](https://docs.imgix.com/apis/url/face-detection/facepad).
  facepad: Float

  # Specifies that face data should be included in output when combined with `fm=json`. [See docs](https://docs.imgix.com/apis/url/face-detection/faces).
  faces: Int

  # Sets the fill color for images with additional space created by the fit setting. Default: `fff`. [See docs](https://docs.imgix.com/apis/url/fill/fill-color).
  fillColor: String

  # Alias for `fillColor`.
  fillcolor: String

  # Determines how to fill in additional space created by the fit setting. [See docs](https://docs.imgix.com/apis/url/fill/fill).
  fill: String

  # Specifies how to map the source image to the output image dimensions. Default: `clip`. [See docs](https://docs.imgix.com/apis/url/size/fit).
  fit: String

  # Alias for `fit`.
  f: String

  # Flips an image on a specified axis. [See docs](https://docs.imgix.com/apis/url/rotation/flip).
  flip: String

  # Changes the format of the output image. [See docs](https://docs.imgix.com/apis/url/format/fm).
  fm: String

  # Displays crosshairs identifying the location of the set focal point. Default: `false`. [See docs](https://docs.imgix.com/apis/url/focalpoint-crop/fp-debug).
  fpDebug: Boolean

  # Sets the relative horizontal value for the focal point of an image. [See docs](https://docs.imgix.com/apis/url/focalpoint-crop/fp-x).
  fpX: Int

  # Sets the relative vertical value for the focal point of an image. [See docs](https://docs.imgix.com/apis/url/focalpoint-crop/fp-y).
  fpY: Int

  # Sets the relative zoom value for the focal point of an image. [See docs](https://docs.imgix.com/apis/url/focalpoint-crop/fp-z).
  fpZ: Float

  # Adjusts the gamma of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/gam).
  gam: Int

  # Sets grid colors for the transparency checkerboard grid.
  gridColors: String

  # Sets grid size for the transparency checkerboard grid.
  gridSize: Int

  # Adjusts the height of the output image. [See docs](https://docs.imgix.com/apis/url/size/h).
  h: Int

  # Alias for `h`.
  height: Int

  # Adjusts the highlights of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/high).
  high: Int

  # Applies a half-tone effect to the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/stylize/htn).
  htn: Int

  # Adjusts the hue of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/hue).
  hue: Int

  # Inverts the colors on the source image. Default: `false`. [See docs](https://docs.imgix.com/apis/url/adjustment/invert).
  invert: Boolean

  # Alias for `invert`.
  inv: Boolean

  # Specifies that the output image should be a lossless variant. Default: `false`. [See docs](https://docs.imgix.com/apis/url/format/lossless).
  lossless: Boolean

  # Changes the watermark alignment relative to the parent image. [See docs](https://docs.imgix.com/apis/url/watermark/mark-align).
  markAlign: String

  # Alias for `markAlign`.
  ma: String

  # Alias for `markAlign`.
  markalign: String

  # Changes the alpha of the watermark image. Default: `100`. [See docs](https://docs.imgix.com/apis/url/watermark/mark-alpha).
  markAlpha: Int

  # Alias for `markAlpha`.
  markalpha: Int

  # Alias for `markAlpha`.
  malph: Int

  # Changes base URL of the watermark image. [See docs](https://docs.imgix.com/apis/url/watermark/mark-base).
  markBase: String

  # Alias for `markBase`.
  mb: String

  # Alias for `markBase`.
  markbase: String

  # Specifies the fit mode for watermark images. Default: `clip`. [See docs](https://docs.imgix.com/apis/url/watermark/mark-fit).
  markFit: String

  # Alias for `markFit`.
  mf: String

  # Alias for `markFit`.
  markfit: String

  # Adjusts the height of the watermark image. [See docs](https://docs.imgix.com/apis/url/watermark/mark-h).
  markH: Int

  # Alias for `markH`.
  mh: Int

  # Alias for `markH`.
  markh: Int

  # Applies padding to the watermark image. Default: `5`. [See docs](https://docs.imgix.com/apis/url/watermark/mark-pad).
  markPad: Int

  # Alias for `markPad`.
  mp: Int

  # Alias for `markPad`.
  markpad: Int

  # Rotates a watermark or tiled watermarks by a specified number of degrees. Default: `0`. [See docs](https://docs.imgix.com/apis/url/watermark/mark-rot).
  markRot: Float

  # Adjusts the scale of the watermark image. [See docs](https://docs.imgix.com/apis/url/watermark/mark-scale).
  markScale: Int

  # Alias for `markScale`.
  ms: Int

  # Alias for `markScale`.
  markscale: Int

  # Adds tiled watermark. [See docs](https://docs.imgix.com/apis/url/watermark/mark-tile).
  markTile: String

  # Alias for `markTile`.
  mtile: String

  # Alias for `markTile`.
  marktile: String

  # Adjusts the width of the watermark image. [See docs](https://docs.imgix.com/apis/url/watermark/mark-w).
  markW: Int

  # Alias for `markW`.
  mw: Int

  # Alias for `markW`.
  markw: Int

  # Adjusts the x-offset of the watermark image relative to its parent. [See docs](https://docs.imgix.com/apis/url/watermark/mark-x).
  markX: Int

  # Alias for `markX`.
  mx: Int

  # Alias for `markX`.
  markx: Int

  # Adjusts the y-offset of the watermark image relative to its parent. [See docs](https://docs.imgix.com/apis/url/watermark/mark-y).
  markY: Int

  # Alias for `markY`.
  my: Int

  # Alias for `markY`.
  marky: Int

  # Specifies the location of the watermark image. [See docs](https://docs.imgix.com/apis/url/watermark/mark).
  mark: String

  # Alias for `mark`.
  m: String

  # Colors the background of the transparent mask area of images. Default: `fff`. [See docs](https://docs.imgix.com/apis/url/mask/mask-bg).
  maskBg: String

  # Alias for `maskBg`.
  maskbg: String

  # Defines the type of mask and specifies the URL if that type is selected. [See docs](https://docs.imgix.com/apis/url/mask).
  mask: String

  # Specifies the maximum height of the output image in pixels. [See docs](https://docs.imgix.com/apis/url/size/max-height).
  maxH: Int

  # Alias for `maxH`.
  maxHeight: Int

  # Specifies the maximum width of the output image in pixels. [See docs](https://docs.imgix.com/apis/url/size/max-width).
  maxW: Int

  # Alias for `maxW`.
  maxWidth: Int

  # Specifies the minimum height of the output image in pixels. [See docs](https://docs.imgix.com/apis/url/size/min-height).
  minH: Int

  # Alias for `minH`.
  minHeight: Int

  # Specifies the minimum width of the output image in pixels. [See docs](https://docs.imgix.com/apis/url/size/min-width).
  minW: Int

  # Alias for `minW`.
  minWidth: Int

  # Applies a monochrome effect to the source image. [See docs](https://docs.imgix.com/apis/url/stylize/monochrome).
  monochrome: String

  # Alias for `monochrome`.
  mono: String

  # Reduces the noise in an image. Default: `20`. [See docs](https://docs.imgix.com/apis/url/noise-reduction/nr).
  nr: Int

  # Provides a threshold by which to sharpen an image. Default: `20`. [See docs](https://docs.imgix.com/apis/url/noise-reduction/nrs).
  nrs: Int

  # Changes the image orientation. [See docs](https://docs.imgix.com/apis/url/rotation/orient).
  orient: Int

  # Alias for `orient`.
  or: Int

  # Sets bottom padding of an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/pad-bottom).
  padBottom: Int

  # Sets left padding of an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/pad-left).
  padLeft: Int

  # Sets right padding of an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/pad-right).
  padRight: Int

  # Sets top padding of an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/pad-top).
  padTop: Int

  # Pads an image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/border-and-padding/pad).
  pad: Int

  # Selects a page from a PDF for display. Default: `1`. [See docs](https://docs.imgix.com/apis/url/pdf/page).
  page: Int

  # Specifies an output format for palette-extraction. [See docs](https://docs.imgix.com/apis/url/color-palette/palette).
  palette: String

  # Enables or disables PDF annotation. Default: `true`. [See docs](https://docs.imgix.com/apis/url/pdf/pdf-annotation).
  pdfAnnotation: Boolean

  # Alias for `pdfAnnotation`.
  annotation: Boolean

  # Specifies a CSS prefix for all classes in palette-extraction. Default: `image`. [See docs](https://docs.imgix.com/apis/url/color-palette/prefix).
  prefix: String

  # Applies a pixelation effect to an image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/stylize/px).
  px: Int

  # Adjusts the quality of an output image. Default: `75`. [See docs](https://docs.imgix.com/apis/url/format/q).
  q: Int

  # Crops an image to a specified rectangle. [See docs](https://docs.imgix.com/apis/url/size/rect).
  rect: String

  # Rotates an image by a specified number of degrees. Default: `0`. [See docs](https://docs.imgix.com/apis/url/rotation/rot).
  rot: Float

  # Adjusts the saturation of an image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/sat).
  sat: Int

  # Applies a sepia effect to an image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/stylize/sepia).
  sepia: Int

  # Adjusts the highlights of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/shad).
  shad: Float

  # Adjusts the sharpness of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/sharp).
  sharp: Float

  # Adds checkerboard behind images which support transparency. [See docs](https://docs.imgix.com/apis/url/fill/transparency).
  transparency: String

  # Specifies a trim color on a trim operation. [See docs](https://docs.imgix.com/apis/url/trim/trim-color).
  trimColor: String

  # Alias for `trimColor`.
  trimcolor: String

  # Specifies the mean difference on a trim operation. Default: `11`. [See docs](https://docs.imgix.com/apis/url/trim/trim-md).
  trimMd: Float

  # Alias for `trimMd`.
  trimmd: Float

  # Pads the area of the source image before trimming. Default: `0`. [See docs](https://docs.imgix.com/apis/url/trim/trim-pad).
  trimPad: Int

  # Alias for `trimPad`.
  trimpad: Int

  # Specifies the standard deviation on a trim operation. Default: `10`. [See docs](https://docs.imgix.com/apis/url/trim/trim-sd).
  trimSd: Float

  # Alias for `trimSd`.
  trimsd: Float

  # Specifies the tolerance on a trim operation. Default: `0`. [See docs](https://docs.imgix.com/apis/url/trim/trim-tol).
  trimTol: Float

  # Alias for `trimTol`.
  trimtol: Float

  # Trims the source image. [See docs](https://docs.imgix.com/apis/url/trim/trim).
  trim: String

  # Sets the vertical and horizontal alignment of rendered text relative to the base image. [See docs](https://docs.imgix.com/apis/url/text/txt-align).
  txtAlign: String

  # Alias for `txtAlign`.
  txtalign: String

  # Alias for `txtAlign`.
  ta: String

  # Sets the clipping properties of rendered text. Default: `end`. [See docs](https://docs.imgix.com/apis/url/text/txt-clip).
  txtClip: String

  # Alias for `txtClip`.
  txtclip: String

  # Alias for `txtClip`.
  tcl: String

  # Specifies the color of rendered text. [See docs](https://docs.imgix.com/apis/url/text/txt-color).
  txtColor: String

  # Alias for `txtColor`.
  txtcolor: String

  # Alias for `txtColor`.
  txtClr: String

  # Alias for `txtColor`.
  txtclr: String

  # Alias for `txtColor`.
  tc: String

  # Specifies the fit approach for rendered text. [See docs](https://docs.imgix.com/apis/url/text/txt-fit).
  txtFit: String

  # Alias for `txtFit`.
  txtfit: String

  # Selects a font for rendered text. [See docs](https://docs.imgix.com/apis/url/text/txt-font).
  txtFont: String

  # Alias for `txtFont`.
  tf: String

  # Alias for `txtFont`.
  txtfont: String

  # Sets the leading (line spacing) for rendered text. Only works on the multi-line text endpoint. Default: `0`. [See docs](https://docs.imgix.com/apis/url/typesetting/txt-lead).
  txtLead: Int

  # Alias for `txtLead`.
  txtlead: Int

  # Controls the level of ligature substitution. [See docs](https://docs.imgix.com/apis/url/text/txt-lig).
  txtLig: Int

  # Alias for `txtLig`.
  txtlig: Int

  # Specifies a text outline color. Default: `fff`. [See docs](https://docs.imgix.com/apis/url/text/txt-line-color).
  txtLineColor: String

  # Alias for `txtLineColor`.
  txtlinecolor: String

  # Alias for `txtLineColor`.
  txtLineClr: String

  # Alias for `txtLineColor`.
  txtlineclr: String

  # Outlines the rendered text with a specified color. Default: `0`. [See docs](https://docs.imgix.com/apis/url/text/txt-line).
  txtLine: Int

  # Alias for `txtLine`.
  txtline: Int

  # Alias for `txtLine`.
  tl: Int

  # Specifies the padding (in device-independent pixels) between a textbox and the edges of the base image. [See docs](https://docs.imgix.com/apis/url/text/txt-pad).
  txtPad: Int

  # Alias for `txtPad`.
  txtpad: Int

  # Alias for `txtPad`.
  tp: Int

  # Applies a shadow to rendered text. Default: `0`. [See docs](https://docs.imgix.com/apis/url/text/txt-shad).
  txtShad: Float

  # Alias for `txtShad`.
  txtshad: Float

  # Alias for `txtShad`.
  tsh: Float

  # Sets the font size of rendered text. Default: `12`. [See docs](https://docs.imgix.com/apis/url/text/txt-size).
  txtSize: Int

  # Alias for `txtSize`.
  tsz: Int

  # Alias for `txtSize`.
  txtsize: Int

  # Sets the tracking (letter spacing) for rendered text. Only works on the multi-line text endpoint. Default: `0`. [See docs](https://docs.imgix.com/apis/url/typesetting/txt-track).
  txtTrack: Int

  # Alias for `txtTrack`.
  txttrack: Int

  # Alias for `txtTrack`.
  tt: Int

  # Sets the width of rendered text. [See docs](https://docs.imgix.com/apis/url/text/txt-width).
  txtWidth: Int

  # Alias for `txtWidth`.
  txtwidth: Int

  # Sets the text string to render. [See docs](https://docs.imgix.com/apis/url/text/txt).
  txt: String

  # Alias for `txt`.
  t: String

  # Sharpens the source image using an unsharp mask. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/usm).
  usm: Int

  # Specifies the radius for an unsharp mask operation. Default: `2.5`. [See docs](https://docs.imgix.com/apis/url/adjustment/usmrad).
  usmrad: Float

  # Adjusts the vibrance of an image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/vib).
  vib: Int

  # Adjusts the width of the output image. [See docs](https://docs.imgix.com/apis/url/size/w).
  w: Int

  # Alias for `w`.
  width: Int
}

# An image thumbnail with constraints.
type PrismicImageThumbnailType implements PrismicImageInterface {
  alt: String
  copyright: String
  dimensions: PrismicImageDimensionsType
  url(imgixParams: ImgixUrlParamsInput = {}): String
  fixed(width: Int = 400, height: Int, imgixParams: ImgixUrlParamsInput = {}, placeholderImgixParams: ImgixUrlParamsInput = {}): PrismicImageFixedType
  fluid(maxWidth: Int = 800, maxHeight: Int, srcSetBreakpoints: [Int], imgixParams: ImgixUrlParamsInput = {}, placeholderImgixParams: ImgixUrlParamsInput = {}): PrismicImageFluidType
  localFile: File
}

# A text field with formatting options.
type PrismicStructuredTextType {
  html: String!
  text: String!
  raw: JSON!
}

# A field for storing geo-coordinates.
type PrismicGeoPointType {
  latitude: Float!
  longitude: Float!
}

# Embed videos, songs, tweets, slices, etc.
type PrismicEmbedType {
  # The ID of the resource author. Fetched via oEmbed data.
  author_id: ID

  # The name of the author/owner of the resource. Fetched via oEmbed data.
  author_name: String

  # A URL for the author/owner of the resource. Fetched via oEmbed data.
  author_url: String

  # The suggested cache lifetime for this resource, in seconds. Consumers may choose to use this value or not. Fetched via oEmbed data.
  cache_age: String

  # The URL of the resource.
  embed_url: String

  # The HTML required to display the resource. The HTML should have no padding or margins. Consumers may wish to load the HTML in an off-domain iframe to avoid XSS vulnerabilities. Fetched via oEmbed data.
  html: String

  # The name of the resource.
  name: String

  # The name of the resource provider. Fetched via oEmbed data.
  provider_name: String

  # The URL of the resource provider. Fetched via oEmbed data.
  provider_url: String

  # The width of the resource's thumbnail. Fetched via oEmbed data.
  thumbnail_height: Int

  # A URL to a thumbnail image representing the resource. Fetched via oEmbed data.
  thumbnail_url: String

  # The width of the resource's thumbnail. Fetched via oEmbed data.
  thumbnail_width: Int

  # A text title, describing the resource. Fetched via oEmbed data.
  title: String

  # The resource type. Fetched via oEmbed data.
  type: String

  # The oEmbed version number.
  version: String

  # The source URL of the resource. Fetched via oEmbed data.
  url: String

  # The width in pixel of the resource. Fetched via oEmbed data.
  width: Int

  # The height in pixel of the resource. Fetched via oEmbed data.
  height: Int

  # The ID of the resource media. Fetched via oEmbed data.
  media_id: ID

  # A description for the resource.
  description: String

  # The ID of a video.
  video_id: ID
}

# Dimensions for images.
type PrismicImageDimensionsType {
  width: Int!
  height: Int!
}

# Types of links.
enum PrismicLinkTypes {
  # Any of the other types
  Any

  # Internal content
  Document

  # Internal media content
  Media

  # URL
  Web
}

# Link to web, media, and internal content.
type PrismicLinkType {
  # The type of link.
  link_type: PrismicLinkTypes!
  isBroken: Boolean!

  # The document's URL derived via the link resolver.
  url: String

  # The link's target.
  target: String

  # If a Media link, the size of the file.
  size: Int

  # If a Document link, the linked document's Prismic ID.
  id: ID

  # If a Document link, the linked document's Prismic custom type API ID
  type: String

  # If a Document link, the linked document's list of tags.
  tags: [String]

  # If a Document link, the linked document's language.
  lang: String

  # If a Document link, the linked document's slug.
  slug: String

  # If a Document link, the linked document's UID.
  uid: String

  # If a Document link, the linked document.
  document: PrismicAllDocumentTypes

  # The field's value without transformations exactly as it comes from the Prismic API.
  raw: JSON
}

type SiteMetadata {
  siteUrl: String!
  siteName: String!
  shortName: String
}

type PrismicTermsAndConditions implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  uid: String
  type: String
  href: String
  tags: [String]
  first_publication_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  last_publication_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  slugs: [String]
  lang: String
  data: PrismicTermsAndConditionsData
  prismicId: String
  dataString: String
  dataRaw: PrismicTermsAndConditionsDataRaw
  _previewable: String
}

type PrismicTermsAndConditionsData {
  description: String
  revision_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  content: [PrismicTermsAndConditionsDataContent]
}

type PrismicTermsAndConditionsDataContent {
  type: String
  text: String
  spans: [PrismicTermsAndConditionsDataContentSpans]
}

type PrismicTermsAndConditionsDataContentSpans {
  start: Int
  end: Int
  type: String
  data: PrismicTermsAndConditionsDataContentSpansData
}

type PrismicTermsAndConditionsDataContentSpansData {
  link_type: String
  url: String
}

type PrismicTermsAndConditionsDataRaw {
  description: String
  revision_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  content: [PrismicTermsAndConditionsDataRawContent]
}

type PrismicTermsAndConditionsDataRawContent {
  type: String
  text: String
  spans: [PrismicTermsAndConditionsDataRawContentSpans]
}

type PrismicTermsAndConditionsDataRawContentSpans {
  start: Int
  end: Int
  type: String
  data: PrismicTermsAndConditionsDataRawContentSpansData
}

type PrismicTermsAndConditionsDataRawContentSpansData {
  link_type: String
  url: String
}

type PrismicFaq implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  uid: String
  type: String
  href: String
  tags: [String]
  first_publication_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  last_publication_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  slugs: [String]
  lang: String
  data: PrismicFaqData
  prismicId: String
  dataString: String
  dataRaw: PrismicFaqDataRaw
  _previewable: String
}

type PrismicFaqData {
  entries: [PrismicFaqDataEntries]
}

type PrismicFaqDataEntries {
  question: String
  answer: [PrismicFaqDataEntriesAnswer]
}

type PrismicFaqDataEntriesAnswer {
  type: String
  text: String
  spans: [PrismicFaqDataEntriesAnswerSpans]
}

type PrismicFaqDataEntriesAnswerSpans {
  start: Int
  end: Int
  type: String
  data: PrismicFaqDataEntriesAnswerSpansData
}

type PrismicFaqDataEntriesAnswerSpansData {
  link_type: String
  url: String
}

type PrismicFaqDataRaw {
  entries: [PrismicFaqDataRawEntries]
}

type PrismicFaqDataRawEntries {
  question: String
  answer: [PrismicFaqDataRawEntriesAnswer]
}

type PrismicFaqDataRawEntriesAnswer {
  type: String
  text: String
  spans: [PrismicFaqDataRawEntriesAnswerSpans]
}

type PrismicFaqDataRawEntriesAnswerSpans {
  start: Int
  end: Int
  type: String
  data: PrismicFaqDataRawEntriesAnswerSpansData
}

type PrismicFaqDataRawEntriesAnswerSpansData {
  link_type: String
  url: String
}

type PrismicSiteNavigation implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  uid: String
  type: String
  href: String
  tags: [String]
  first_publication_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  last_publication_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  slugs: [String]
  lang: String
  data: PrismicSiteNavigationData
  prismicId: String
  dataString: String
  dataRaw: PrismicSiteNavigationDataRaw
  _previewable: String
}

type PrismicSiteNavigationData {
  header_entries: [PrismicSiteNavigationDataHeader_entries]
  sns_profiles: [PrismicSiteNavigationDataSns_profiles]
}

type PrismicSiteNavigationDataHeader_entries {
  display_text: String
  link: PrismicSiteNavigationDataHeader_entriesLink
}

type PrismicSiteNavigationDataHeader_entriesLink {
  link_type: String
  url: String
}

type PrismicSiteNavigationDataSns_profiles {
  service: String
  link: PrismicSiteNavigationDataSns_profilesLink
}

type PrismicSiteNavigationDataSns_profilesLink {
  link_type: String
  url: String
}

type PrismicSiteNavigationDataRaw {
  header_entries: [PrismicSiteNavigationDataRawHeader_entries]
  sns_profiles: [PrismicSiteNavigationDataRawSns_profiles]
}

type PrismicSiteNavigationDataRawHeader_entries {
  display_text: String
  link: PrismicSiteNavigationDataRawHeader_entriesLink
}

type PrismicSiteNavigationDataRawHeader_entriesLink {
  link_type: String
  url: String
}

type PrismicSiteNavigationDataRawSns_profiles {
  service: String
  link: PrismicSiteNavigationDataRawSns_profilesLink
}

type PrismicSiteNavigationDataRawSns_profilesLink {
  link_type: String
  url: String
}

type PrismicGlobalContents implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  type: String
  href: String
  tags: [String]
  first_publication_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  last_publication_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  slugs: [String]
  lang: String
  alternate_languages: [PrismicGlobalContentsAlternate_languages]
  data: PrismicGlobalContentsData
  prismicId: String
  dataString: String
  dataRaw: PrismicGlobalContentsDataRaw
  _previewable: String
}

type PrismicGlobalContentsAlternate_languages {
  id: String
  type: String
  lang: String
}

type PrismicGlobalContentsData {
  main_page_title: String
  main_page_description: String
  main_opengraph_image_link: String
  google_play_link: String
  app_store_link: String
  popular_items_api: String
  body: [PrismicGlobalContentsDataBody]
  about_page_title: String
  about_page_description: String
  about_opengraph_image_link: String
  about_title: [PrismicGlobalContentsDataAbout_title]
  about_background_image: PrismicGlobalContentsDataAbout_background_image
  body1: [PrismicGlobalContentsDataBody1]
}

type PrismicGlobalContentsDataBody {
  slice_type: String
  items: [PrismicGlobalContentsDataBodyItems]
  primary: PrismicGlobalContentsDataBodyPrimary
}

type PrismicGlobalContentsDataBodyItems {
  icon: String
  text: String
  user_name: String
  user_region: String
  content: [PrismicGlobalContentsDataBodyItemsContent]
  text_highlight_color: String
}

type PrismicGlobalContentsDataBodyItemsContent {
  type: String
  text: String
  spans: [PrismicGlobalContentsDataBodyItemsContentSpans]
}

type PrismicGlobalContentsDataBodyItemsContentSpans {
  start: Int
  end: Int
  type: String
}

type PrismicGlobalContentsDataBodyPrimary {
  title: [PrismicGlobalContentsDataBodyPrimaryTitle]
  background_image: PrismicGlobalContentsDataBodyPrimaryBackground_image
  side_image: PrismicGlobalContentsDataBodyPrimarySide_image
  more_button: String
  top_icon: String
  top_text: [PrismicGlobalContentsDataBodyPrimaryTop_text]
  text: [PrismicGlobalContentsDataBodyPrimaryText]
  background_color: String
  text_highlight_color: String
  phone_mockup_component: String
  text_on_right: Boolean
  image: PrismicGlobalContentsDataBodyPrimaryImage
}

type PrismicGlobalContentsDataBodyPrimaryTitle {
  type: String
  text: String
}

type PrismicGlobalContentsDataBodyPrimaryBackground_image {
  dimensions: PrismicGlobalContentsDataBodyPrimaryBackground_imageDimensions
  alt: String
  url: String
}

type PrismicGlobalContentsDataBodyPrimaryBackground_imageDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataBodyPrimarySide_image {
  dimensions: PrismicGlobalContentsDataBodyPrimarySide_imageDimensions
  alt: String
  url: String
  mobile: PrismicGlobalContentsDataBodyPrimarySide_imageMobile
}

type PrismicGlobalContentsDataBodyPrimarySide_imageDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataBodyPrimarySide_imageMobile {
  dimensions: PrismicGlobalContentsDataBodyPrimarySide_imageMobileDimensions
  url: String
}

type PrismicGlobalContentsDataBodyPrimarySide_imageMobileDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataBodyPrimaryTop_text {
  type: String
  text: String
}

type PrismicGlobalContentsDataBodyPrimaryText {
  type: String
  text: String
  spans: [PrismicGlobalContentsDataBodyPrimaryTextSpans]
}

type PrismicGlobalContentsDataBodyPrimaryTextSpans {
  start: Int
  end: Int
  type: String
}

type PrismicGlobalContentsDataBodyPrimaryImage {
  dimensions: PrismicGlobalContentsDataBodyPrimaryImageDimensions
  alt: String
  url: String
  mobile: PrismicGlobalContentsDataBodyPrimaryImageMobile
  test: PrismicGlobalContentsDataBodyPrimaryImageTest
}

type PrismicGlobalContentsDataBodyPrimaryImageDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataBodyPrimaryImageMobile {
  dimensions: PrismicGlobalContentsDataBodyPrimaryImageMobileDimensions
  url: String
}

type PrismicGlobalContentsDataBodyPrimaryImageMobileDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataBodyPrimaryImageTest {
  dimensions: PrismicGlobalContentsDataBodyPrimaryImageTestDimensions
  url: String
}

type PrismicGlobalContentsDataBodyPrimaryImageTestDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataAbout_title {
  type: String
  text: String
}

type PrismicGlobalContentsDataAbout_background_image {
  dimensions: PrismicGlobalContentsDataAbout_background_imageDimensions
  alt: String
  url: String
}

type PrismicGlobalContentsDataAbout_background_imageDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataBody1 {
  slice_type: String
  items: [PrismicGlobalContentsDataBody1Items]
  primary: PrismicGlobalContentsDataBody1Primary
}

type PrismicGlobalContentsDataBody1Items {
  image: PrismicGlobalContentsDataBody1ItemsImage
  text: String
  link: PrismicGlobalContentsDataBody1ItemsLink
  date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
}

type PrismicGlobalContentsDataBody1ItemsImage {
  dimensions: PrismicGlobalContentsDataBody1ItemsImageDimensions
  alt: String
  url: String
  media: PrismicGlobalContentsDataBody1ItemsImageMedia
  mobile: PrismicGlobalContentsDataBody1ItemsImageMobile
}

type PrismicGlobalContentsDataBody1ItemsImageDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataBody1ItemsImageMedia {
  dimensions: PrismicGlobalContentsDataBody1ItemsImageMediaDimensions
  url: String
}

type PrismicGlobalContentsDataBody1ItemsImageMediaDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataBody1ItemsImageMobile {
  dimensions: PrismicGlobalContentsDataBody1ItemsImageMobileDimensions
  url: String
}

type PrismicGlobalContentsDataBody1ItemsImageMobileDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataBody1ItemsLink {
  link_type: String
  url: String
}

type PrismicGlobalContentsDataBody1Primary {
  subtitle: [PrismicGlobalContentsDataBody1PrimarySubtitle]
  text: [PrismicGlobalContentsDataBody1PrimaryText]
}

type PrismicGlobalContentsDataBody1PrimarySubtitle {
  type: String
  text: String
}

type PrismicGlobalContentsDataBody1PrimaryText {
  type: String
  text: String
  spans: [PrismicGlobalContentsDataBody1PrimaryTextSpans]
}

type PrismicGlobalContentsDataBody1PrimaryTextSpans {
  start: Int
  end: Int
  type: String
  data: PrismicGlobalContentsDataBody1PrimaryTextSpansData
}

type PrismicGlobalContentsDataBody1PrimaryTextSpansData {
  link_type: String
  url: String
}

type PrismicGlobalContentsDataRaw {
  main_page_title: String
  main_page_description: String
  main_opengraph_image_link: String
  google_play_link: String
  app_store_link: String
  popular_items_api: String
  body: [PrismicGlobalContentsDataRawBody]
  about_page_title: String
  about_page_description: String
  about_opengraph_image_link: String
  about_title: [PrismicGlobalContentsDataRawAbout_title]
  about_background_image: PrismicGlobalContentsDataRawAbout_background_image
  body1: [PrismicGlobalContentsDataRawBody1]
}

type PrismicGlobalContentsDataRawBody {
  slice_type: String
  items: [PrismicGlobalContentsDataRawBodyItems]
  primary: PrismicGlobalContentsDataRawBodyPrimary
}

type PrismicGlobalContentsDataRawBodyItems {
  icon: String
  text: String
  user_name: String
  user_region: String
  content: [PrismicGlobalContentsDataRawBodyItemsContent]
  text_highlight_color: String
}

type PrismicGlobalContentsDataRawBodyItemsContent {
  type: String
  text: String
  spans: [PrismicGlobalContentsDataRawBodyItemsContentSpans]
}

type PrismicGlobalContentsDataRawBodyItemsContentSpans {
  start: Int
  end: Int
  type: String
}

type PrismicGlobalContentsDataRawBodyPrimary {
  title: [PrismicGlobalContentsDataRawBodyPrimaryTitle]
  background_image: PrismicGlobalContentsDataRawBodyPrimaryBackground_image
  side_image: PrismicGlobalContentsDataRawBodyPrimarySide_image
  more_button: String
  top_icon: String
  top_text: [PrismicGlobalContentsDataRawBodyPrimaryTop_text]
  text: [PrismicGlobalContentsDataRawBodyPrimaryText]
  background_color: String
  text_highlight_color: String
  phone_mockup_component: String
  text_on_right: Boolean
  image: PrismicGlobalContentsDataRawBodyPrimaryImage
}

type PrismicGlobalContentsDataRawBodyPrimaryTitle {
  type: String
  text: String
}

type PrismicGlobalContentsDataRawBodyPrimaryBackground_image {
  dimensions: PrismicGlobalContentsDataRawBodyPrimaryBackground_imageDimensions
  alt: String
  url: String
}

type PrismicGlobalContentsDataRawBodyPrimaryBackground_imageDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataRawBodyPrimarySide_image {
  dimensions: PrismicGlobalContentsDataRawBodyPrimarySide_imageDimensions
  alt: String
  url: String
  mobile: PrismicGlobalContentsDataRawBodyPrimarySide_imageMobile
}

type PrismicGlobalContentsDataRawBodyPrimarySide_imageDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataRawBodyPrimarySide_imageMobile {
  dimensions: PrismicGlobalContentsDataRawBodyPrimarySide_imageMobileDimensions
  url: String
}

type PrismicGlobalContentsDataRawBodyPrimarySide_imageMobileDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataRawBodyPrimaryTop_text {
  type: String
  text: String
}

type PrismicGlobalContentsDataRawBodyPrimaryText {
  type: String
  text: String
  spans: [PrismicGlobalContentsDataRawBodyPrimaryTextSpans]
}

type PrismicGlobalContentsDataRawBodyPrimaryTextSpans {
  start: Int
  end: Int
  type: String
}

type PrismicGlobalContentsDataRawBodyPrimaryImage {
  dimensions: PrismicGlobalContentsDataRawBodyPrimaryImageDimensions
  alt: String
  url: String
  mobile: PrismicGlobalContentsDataRawBodyPrimaryImageMobile
  test: PrismicGlobalContentsDataRawBodyPrimaryImageTest
}

type PrismicGlobalContentsDataRawBodyPrimaryImageDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataRawBodyPrimaryImageMobile {
  dimensions: PrismicGlobalContentsDataRawBodyPrimaryImageMobileDimensions
  url: String
}

type PrismicGlobalContentsDataRawBodyPrimaryImageMobileDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataRawBodyPrimaryImageTest {
  dimensions: PrismicGlobalContentsDataRawBodyPrimaryImageTestDimensions
  url: String
}

type PrismicGlobalContentsDataRawBodyPrimaryImageTestDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataRawAbout_title {
  type: String
  text: String
}

type PrismicGlobalContentsDataRawAbout_background_image {
  dimensions: PrismicGlobalContentsDataRawAbout_background_imageDimensions
  alt: String
  url: String
}

type PrismicGlobalContentsDataRawAbout_background_imageDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataRawBody1 {
  slice_type: String
  items: [PrismicGlobalContentsDataRawBody1Items]
  primary: PrismicGlobalContentsDataRawBody1Primary
}

type PrismicGlobalContentsDataRawBody1Items {
  image: PrismicGlobalContentsDataRawBody1ItemsImage
  text: String
  link: PrismicGlobalContentsDataRawBody1ItemsLink
  date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
}

type PrismicGlobalContentsDataRawBody1ItemsImage {
  dimensions: PrismicGlobalContentsDataRawBody1ItemsImageDimensions
  alt: String
  url: String
  media: PrismicGlobalContentsDataRawBody1ItemsImageMedia
  mobile: PrismicGlobalContentsDataRawBody1ItemsImageMobile
}

type PrismicGlobalContentsDataRawBody1ItemsImageDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataRawBody1ItemsImageMedia {
  dimensions: PrismicGlobalContentsDataRawBody1ItemsImageMediaDimensions
  url: String
}

type PrismicGlobalContentsDataRawBody1ItemsImageMediaDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataRawBody1ItemsImageMobile {
  dimensions: PrismicGlobalContentsDataRawBody1ItemsImageMobileDimensions
  url: String
}

type PrismicGlobalContentsDataRawBody1ItemsImageMobileDimensions {
  width: Int
  height: Int
}

type PrismicGlobalContentsDataRawBody1ItemsLink {
  link_type: String
  url: String
}

type PrismicGlobalContentsDataRawBody1Primary {
  subtitle: [PrismicGlobalContentsDataRawBody1PrimarySubtitle]
  text: [PrismicGlobalContentsDataRawBody1PrimaryText]
}

type PrismicGlobalContentsDataRawBody1PrimarySubtitle {
  type: String
  text: String
}

type PrismicGlobalContentsDataRawBody1PrimaryText {
  type: String
  text: String
  spans: [PrismicGlobalContentsDataRawBody1PrimaryTextSpans]
}

type PrismicGlobalContentsDataRawBody1PrimaryTextSpans {
  start: Int
  end: Int
  type: String
  data: PrismicGlobalContentsDataRawBody1PrimaryTextSpansData
}

type PrismicGlobalContentsDataRawBody1PrimaryTextSpansData {
  link_type: String
  url: String
}

type PrismicTeamContents implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  type: String
  href: String
  tags: [String]
  first_publication_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  last_publication_date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  slugs: [String]
  lang: String
  data: PrismicTeamContentsData
  prismicId: String
  dataString: String
  dataRaw: PrismicTeamContentsDataRaw
  _previewable: String
}

type PrismicTeamContentsData {
  main_page_title: [PrismicTeamContentsDataMain_page_title]
  main_body: [PrismicTeamContentsDataMain_body]
  culture_page_title: [PrismicTeamContentsDataCulture_page_title]
  culture_body: [PrismicTeamContentsDataCulture_body]
  life_page_title: [PrismicTeamContentsDataLife_page_title]
  life_body: [PrismicTeamContentsDataLife_body]
}

type PrismicTeamContentsDataMain_page_title {
  type: String
  text: String
}

type PrismicTeamContentsDataMain_body {
  slice_type: String
  items: [PrismicTeamContentsDataMain_bodyItems]
  primary: PrismicTeamContentsDataMain_bodyPrimary
}

type PrismicTeamContentsDataMain_bodyItems {
  image: PrismicTeamContentsDataMain_bodyItemsImage
  quote: String
  who: String
}

type PrismicTeamContentsDataMain_bodyItemsImage {
  dimensions: PrismicTeamContentsDataMain_bodyItemsImageDimensions
  url: String
}

type PrismicTeamContentsDataMain_bodyItemsImageDimensions {
  width: Int
  height: Int
}

type PrismicTeamContentsDataMain_bodyPrimary {
  key_visual_image: PrismicTeamContentsDataMain_bodyPrimaryKey_visual_image
  expanded: Boolean
  description: [PrismicTeamContentsDataMain_bodyPrimaryDescription]
  key_text: String
  title: [PrismicTeamContentsDataMain_bodyPrimaryTitle]
  inverted: Boolean
  link: PrismicTeamContentsDataMain_bodyPrimaryLink
  link_text: String
  illustration: PrismicTeamContentsDataMain_bodyPrimaryIllustration
  thumbnail: PrismicTeamContentsDataMain_bodyPrimaryThumbnail
  background_color: String
}

type PrismicTeamContentsDataMain_bodyPrimaryKey_visual_image {
  dimensions: PrismicTeamContentsDataMain_bodyPrimaryKey_visual_imageDimensions
  url: String
}

type PrismicTeamContentsDataMain_bodyPrimaryKey_visual_imageDimensions {
  width: Int
  height: Int
}

type PrismicTeamContentsDataMain_bodyPrimaryDescription {
  type: String
  text: String
}

type PrismicTeamContentsDataMain_bodyPrimaryTitle {
  type: String
  text: String
}

type PrismicTeamContentsDataMain_bodyPrimaryLink {
  link_type: String
  url: String
}

type PrismicTeamContentsDataMain_bodyPrimaryIllustration {
  dimensions: PrismicTeamContentsDataMain_bodyPrimaryIllustrationDimensions
  url: String
}

type PrismicTeamContentsDataMain_bodyPrimaryIllustrationDimensions {
  width: Int
  height: Int
}

type PrismicTeamContentsDataMain_bodyPrimaryThumbnail {
  dimensions: PrismicTeamContentsDataMain_bodyPrimaryThumbnailDimensions
  url: String
}

type PrismicTeamContentsDataMain_bodyPrimaryThumbnailDimensions {
  width: Int
  height: Int
}

type PrismicTeamContentsDataCulture_page_title {
  type: String
  text: String
}

type PrismicTeamContentsDataCulture_body {
  slice_type: String
  items: [PrismicTeamContentsDataCulture_bodyItems]
  primary: PrismicTeamContentsDataCulture_bodyPrimary
}

type PrismicTeamContentsDataCulture_bodyItems {
  group: String
  key_text: String
  description: [PrismicTeamContentsDataCulture_bodyItemsDescription]
  subtitle: String
}

type PrismicTeamContentsDataCulture_bodyItemsDescription {
  type: String
  text: String
}

type PrismicTeamContentsDataCulture_bodyPrimary {
  key_visual_image: PrismicTeamContentsDataCulture_bodyPrimaryKey_visual_image
  expanded: Boolean
  description: [PrismicTeamContentsDataCulture_bodyPrimaryDescription]
  title: [PrismicTeamContentsDataCulture_bodyPrimaryTitle]
  illustration: PrismicTeamContentsDataCulture_bodyPrimaryIllustration
  inverted: Boolean
  link: PrismicTeamContentsDataCulture_bodyPrimaryLink
  link_text: String
}

type PrismicTeamContentsDataCulture_bodyPrimaryKey_visual_image {
  dimensions: PrismicTeamContentsDataCulture_bodyPrimaryKey_visual_imageDimensions
  url: String
}

type PrismicTeamContentsDataCulture_bodyPrimaryKey_visual_imageDimensions {
  width: Int
  height: Int
}

type PrismicTeamContentsDataCulture_bodyPrimaryDescription {
  type: String
  text: String
}

type PrismicTeamContentsDataCulture_bodyPrimaryTitle {
  type: String
  text: String
}

type PrismicTeamContentsDataCulture_bodyPrimaryIllustration {
  dimensions: PrismicTeamContentsDataCulture_bodyPrimaryIllustrationDimensions
  url: String
}

type PrismicTeamContentsDataCulture_bodyPrimaryIllustrationDimensions {
  width: Int
  height: Int
}

type PrismicTeamContentsDataCulture_bodyPrimaryLink {
  link_type: String
  url: String
}

type PrismicTeamContentsDataLife_page_title {
  type: String
  text: String
}

type PrismicTeamContentsDataLife_body {
  slice_type: String
  items: [PrismicTeamContentsDataLife_bodyItems]
  primary: PrismicTeamContentsDataLife_bodyPrimary
}

type PrismicTeamContentsDataLife_bodyItems {
  thumbnail_image: PrismicTeamContentsDataLife_bodyItemsThumbnail_image
  thumbnail_description: [PrismicTeamContentsDataLife_bodyItemsThumbnail_description]
}

type PrismicTeamContentsDataLife_bodyItemsThumbnail_image {
  dimensions: PrismicTeamContentsDataLife_bodyItemsThumbnail_imageDimensions
  url: String
}

type PrismicTeamContentsDataLife_bodyItemsThumbnail_imageDimensions {
  width: Int
  height: Int
}

type PrismicTeamContentsDataLife_bodyItemsThumbnail_description {
  type: String
  text: String
}

type PrismicTeamContentsDataLife_bodyPrimary {
  title: [PrismicTeamContentsDataLife_bodyPrimaryTitle]
  body_text: [PrismicTeamContentsDataLife_bodyPrimaryBody_text]
}

type PrismicTeamContentsDataLife_bodyPrimaryTitle {
  type: String
  text: String
}

type PrismicTeamContentsDataLife_bodyPrimaryBody_text {
  type: String
  text: String
}

type PrismicTeamContentsDataRaw {
  main_page_title: [PrismicTeamContentsDataRawMain_page_title]
  main_body: [PrismicTeamContentsDataRawMain_body]
  culture_page_title: [PrismicTeamContentsDataRawCulture_page_title]
  culture_body: [PrismicTeamContentsDataRawCulture_body]
  life_page_title: [PrismicTeamContentsDataRawLife_page_title]
  life_body: [PrismicTeamContentsDataRawLife_body]
}

type PrismicTeamContentsDataRawMain_page_title {
  type: String
  text: String
}

type PrismicTeamContentsDataRawMain_body {
  slice_type: String
  items: [PrismicTeamContentsDataRawMain_bodyItems]
  primary: PrismicTeamContentsDataRawMain_bodyPrimary
}

type PrismicTeamContentsDataRawMain_bodyItems {
  image: PrismicTeamContentsDataRawMain_bodyItemsImage
  quote: String
  who: String
}

type PrismicTeamContentsDataRawMain_bodyItemsImage {
  dimensions: PrismicTeamContentsDataRawMain_bodyItemsImageDimensions
  url: String
}

type PrismicTeamContentsDataRawMain_bodyItemsImageDimensions {
  width: Int
  height: Int
}

type PrismicTeamContentsDataRawMain_bodyPrimary {
  key_visual_image: PrismicTeamContentsDataRawMain_bodyPrimaryKey_visual_image
  expanded: Boolean
  description: [PrismicTeamContentsDataRawMain_bodyPrimaryDescription]
  key_text: String
  title: [PrismicTeamContentsDataRawMain_bodyPrimaryTitle]
  inverted: Boolean
  link: PrismicTeamContentsDataRawMain_bodyPrimaryLink
  link_text: String
  illustration: PrismicTeamContentsDataRawMain_bodyPrimaryIllustration
  thumbnail: PrismicTeamContentsDataRawMain_bodyPrimaryThumbnail
  background_color: String
}

type PrismicTeamContentsDataRawMain_bodyPrimaryKey_visual_image {
  dimensions: PrismicTeamContentsDataRawMain_bodyPrimaryKey_visual_imageDimensions
  url: String
}

type PrismicTeamContentsDataRawMain_bodyPrimaryKey_visual_imageDimensions {
  width: Int
  height: Int
}

type PrismicTeamContentsDataRawMain_bodyPrimaryDescription {
  type: String
  text: String
}

type PrismicTeamContentsDataRawMain_bodyPrimaryTitle {
  type: String
  text: String
}

type PrismicTeamContentsDataRawMain_bodyPrimaryLink {
  link_type: String
  url: String
}

type PrismicTeamContentsDataRawMain_bodyPrimaryIllustration {
  dimensions: PrismicTeamContentsDataRawMain_bodyPrimaryIllustrationDimensions
  url: String
}

type PrismicTeamContentsDataRawMain_bodyPrimaryIllustrationDimensions {
  width: Int
  height: Int
}

type PrismicTeamContentsDataRawMain_bodyPrimaryThumbnail {
  dimensions: PrismicTeamContentsDataRawMain_bodyPrimaryThumbnailDimensions
  url: String
}

type PrismicTeamContentsDataRawMain_bodyPrimaryThumbnailDimensions {
  width: Int
  height: Int
}

type PrismicTeamContentsDataRawCulture_page_title {
  type: String
  text: String
}

type PrismicTeamContentsDataRawCulture_body {
  slice_type: String
  items: [PrismicTeamContentsDataRawCulture_bodyItems]
  primary: PrismicTeamContentsDataRawCulture_bodyPrimary
}

type PrismicTeamContentsDataRawCulture_bodyItems {
  group: String
  key_text: String
  description: [PrismicTeamContentsDataRawCulture_bodyItemsDescription]
  subtitle: String
}

type PrismicTeamContentsDataRawCulture_bodyItemsDescription {
  type: String
  text: String
}

type PrismicTeamContentsDataRawCulture_bodyPrimary {
  key_visual_image: PrismicTeamContentsDataRawCulture_bodyPrimaryKey_visual_image
  expanded: Boolean
  description: [PrismicTeamContentsDataRawCulture_bodyPrimaryDescription]
  title: [PrismicTeamContentsDataRawCulture_bodyPrimaryTitle]
  illustration: PrismicTeamContentsDataRawCulture_bodyPrimaryIllustration
  inverted: Boolean
  link: PrismicTeamContentsDataRawCulture_bodyPrimaryLink
  link_text: String
}

type PrismicTeamContentsDataRawCulture_bodyPrimaryKey_visual_image {
  dimensions: PrismicTeamContentsDataRawCulture_bodyPrimaryKey_visual_imageDimensions
  url: String
}

type PrismicTeamContentsDataRawCulture_bodyPrimaryKey_visual_imageDimensions {
  width: Int
  height: Int
}

type PrismicTeamContentsDataRawCulture_bodyPrimaryDescription {
  type: String
  text: String
}

type PrismicTeamContentsDataRawCulture_bodyPrimaryTitle {
  type: String
  text: String
}

type PrismicTeamContentsDataRawCulture_bodyPrimaryIllustration {
  dimensions: PrismicTeamContentsDataRawCulture_bodyPrimaryIllustrationDimensions
  url: String
}

type PrismicTeamContentsDataRawCulture_bodyPrimaryIllustrationDimensions {
  width: Int
  height: Int
}

type PrismicTeamContentsDataRawCulture_bodyPrimaryLink {
  link_type: String
  url: String
}

type PrismicTeamContentsDataRawLife_page_title {
  type: String
  text: String
}

type PrismicTeamContentsDataRawLife_body {
  slice_type: String
  items: [PrismicTeamContentsDataRawLife_bodyItems]
  primary: PrismicTeamContentsDataRawLife_bodyPrimary
}

type PrismicTeamContentsDataRawLife_bodyItems {
  thumbnail_image: PrismicTeamContentsDataRawLife_bodyItemsThumbnail_image
  thumbnail_description: [PrismicTeamContentsDataRawLife_bodyItemsThumbnail_description]
}

type PrismicTeamContentsDataRawLife_bodyItemsThumbnail_image {
  dimensions: PrismicTeamContentsDataRawLife_bodyItemsThumbnail_imageDimensions
  url: String
}

type PrismicTeamContentsDataRawLife_bodyItemsThumbnail_imageDimensions {
  width: Int
  height: Int
}

type PrismicTeamContentsDataRawLife_bodyItemsThumbnail_description {
  type: String
  text: String
}

type PrismicTeamContentsDataRawLife_bodyPrimary {
  title: [PrismicTeamContentsDataRawLife_bodyPrimaryTitle]
  body_text: [PrismicTeamContentsDataRawLife_bodyPrimaryBody_text]
}

type PrismicTeamContentsDataRawLife_bodyPrimaryTitle {
  type: String
  text: String
}

type PrismicTeamContentsDataRawLife_bodyPrimaryBody_text {
  type: String
  text: String
}

type SiteBuildMetadata implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  buildTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
}

type SitePlugin implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  resolve: String
  name: String
  version: String
  pluginOptions: SitePluginPluginOptions
  nodeAPIs: [String]
  browserAPIs: [String]
  ssrAPIs: [String]
  pluginFilepath: String
  packageJson: SitePluginPackageJson
}

type SitePluginPluginOptions {
  name: String
  path: String
  trackingIds: [String]
  pluginConfig: SitePluginPluginOptionsPluginConfig
  base64Width: Int
  stripMetadata: Boolean
  defaultQuality: Int
  failOnError: Boolean
  sourceMap: Boolean
  autoLabel: String
  labelFormat: String
  cssPropOptimization: Boolean
  root: String
  aliases: SitePluginPluginOptionsAliases
  outputPath: String
  emitSchema: SitePluginPluginOptionsEmitSchema
  emitPluginDocuments: SitePluginPluginOptionsEmitPluginDocuments
  short_name: String
  start_url: String
  background_color: String
  theme_color: String
  display: String
  icon: String
  legacy: Boolean
  theme_color_in_head: Boolean
  cache_busting_mode: String
  crossOrigin: String
  include_favicon: Boolean
  cacheDigest: String
  repositoryName: String
  prismicToolbar: Boolean
  schemas: SitePluginPluginOptionsSchemas
  pathCheck: Boolean
  allExtensions: Boolean
  isTSX: Boolean
  jsxPragma: String
}

type SitePluginPluginOptionsPluginConfig {
  exclude: [String]
}

type SitePluginPluginOptionsAliases {
  _src: String
}

type SitePluginPluginOptionsEmitSchema {
  src___generated___gatsby_introspection_json: Boolean
  src___generated___gatsby_schema_graphql: Boolean
}

type SitePluginPluginOptionsEmitPluginDocuments {
  src___generated___gatsby_plugin_documents_graphql: Boolean
}

type SitePluginPluginOptionsSchemas {
  mbti_test_question: SitePluginPluginOptionsSchemasMbti_test_question
  mbti_test_result: SitePluginPluginOptionsSchemasMbti_test_result
  mbti_intro: SitePluginPluginOptionsSchemasMbti_intro
}

type SitePluginPluginOptionsSchemasMbti_test_question {
  Main: SitePluginPluginOptionsSchemasMbti_test_questionMain
}

type SitePluginPluginOptionsSchemasMbti_test_questionMain {
  body: SitePluginPluginOptionsSchemasMbti_test_questionMainBody
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBody {
  type: String
  fieldset: String
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfig
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfig {
  choices: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoices
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoices {
  ie: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIe
  ns: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNs
  ft: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFt
  pj: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPj
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIe {
  type: String
  fieldset: String
  description: String
  icon: String
  display: String
  non_repeat: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeat
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeat {
  question: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatQuestion
  answer_i: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatAnswer_i
  answer_e: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatAnswer_e
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatQuestion {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatQuestionConfig
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatQuestionConfig {
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatAnswer_i {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatAnswer_iConfig
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatAnswer_iConfig {
  single: String
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatAnswer_e {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatAnswer_eConfig
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatAnswer_eConfig {
  single: String
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNs {
  type: String
  fieldset: String
  description: String
  icon: String
  display: String
  non_repeat: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeat
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeat {
  question: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatQuestion
  answer_n: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatAnswer_n
  answer_s: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatAnswer_s
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatQuestion {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatQuestionConfig
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatQuestionConfig {
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatAnswer_n {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatAnswer_nConfig
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatAnswer_nConfig {
  single: String
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatAnswer_s {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatAnswer_sConfig
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatAnswer_sConfig {
  single: String
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFt {
  type: String
  fieldset: String
  description: String
  icon: String
  display: String
  non_repeat: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeat
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeat {
  question: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatQuestion
  answer_f: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatAnswer_f
  answer_t: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatAnswer_t
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatQuestion {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatQuestionConfig
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatQuestionConfig {
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatAnswer_f {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatAnswer_fConfig
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatAnswer_fConfig {
  single: String
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatAnswer_t {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatAnswer_tConfig
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatAnswer_tConfig {
  single: String
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPj {
  type: String
  fieldset: String
  description: String
  icon: String
  display: String
  non_repeat: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeat
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeat {
  question: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatQuestion
  answer_p: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatAnswer_p
  answer_j: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatAnswer_j
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatQuestion {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatQuestionConfig
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatQuestionConfig {
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatAnswer_p {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatAnswer_pConfig
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatAnswer_pConfig {
  single: String
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatAnswer_j {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatAnswer_jConfig
}

type SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatAnswer_jConfig {
  single: String
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_result {
  Main: SitePluginPluginOptionsSchemasMbti_test_resultMain
}

type SitePluginPluginOptionsSchemasMbti_test_resultMain {
  uid: SitePluginPluginOptionsSchemasMbti_test_resultMainUid
  summary: SitePluginPluginOptionsSchemasMbti_test_resultMainSummary
  og_description: SitePluginPluginOptionsSchemasMbti_test_resultMainOg_description
  opengraph_image: SitePluginPluginOptionsSchemasMbti_test_resultMainOpengraph_image
  comments: SitePluginPluginOptionsSchemasMbti_test_resultMainComments
  thumbnail: SitePluginPluginOptionsSchemasMbti_test_resultMainThumbnail
  avatar: SitePluginPluginOptionsSchemasMbti_test_resultMainAvatar
  tags: SitePluginPluginOptionsSchemasMbti_test_resultMainTags
  remarks: SitePluginPluginOptionsSchemasMbti_test_resultMainRemarks
  relations: SitePluginPluginOptionsSchemasMbti_test_resultMainRelations
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainUid {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainUidConfig
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainUidConfig {
  label: String
  placeholder: String
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainSummary {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainSummaryConfig
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainSummaryConfig {
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainOg_description {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainOg_descriptionConfig
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainOg_descriptionConfig {
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainOpengraph_image {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainOpengraph_imageConfig
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainOpengraph_imageConfig {
  constraint: SitePluginPluginOptionsSchemasMbti_test_resultMainOpengraph_imageConfigConstraint
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainOpengraph_imageConfigConstraint {
  width: Int
  height: Int
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainComments {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainCommentsConfig
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainCommentsConfig {
  fields: SitePluginPluginOptionsSchemasMbti_test_resultMainCommentsConfigFields
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainCommentsConfigFields {
  text: SitePluginPluginOptionsSchemasMbti_test_resultMainCommentsConfigFieldsText
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainCommentsConfigFieldsText {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainCommentsConfigFieldsTextConfig
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainCommentsConfigFieldsTextConfig {
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainThumbnail {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainThumbnailConfig
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainThumbnailConfig {
  constraint: SitePluginPluginOptionsSchemasMbti_test_resultMainThumbnailConfigConstraint
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainThumbnailConfigConstraint {
  width: Int
  height: Int
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainAvatar {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainAvatarConfig
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainAvatarConfig {
  constraint: SitePluginPluginOptionsSchemasMbti_test_resultMainAvatarConfigConstraint
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainAvatarConfigConstraint {
  width: Int
  height: Int
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainTags {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainTagsConfig
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainTagsConfig {
  fields: SitePluginPluginOptionsSchemasMbti_test_resultMainTagsConfigFields
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainTagsConfigFields {
  tag_name: SitePluginPluginOptionsSchemasMbti_test_resultMainTagsConfigFieldsTag_name
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainTagsConfigFieldsTag_name {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainTagsConfigFieldsTag_nameConfig
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainTagsConfigFieldsTag_nameConfig {
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainRemarks {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfig
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfig {
  fields: SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFields
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFields {
  remark_name: SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFieldsRemark_name
  remark_description: SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFieldsRemark_description
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFieldsRemark_name {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFieldsRemark_nameConfig
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFieldsRemark_nameConfig {
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFieldsRemark_description {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFieldsRemark_descriptionConfig
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFieldsRemark_descriptionConfig {
  single: String
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainRelations {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfig
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfig {
  fields: SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFields
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFields {
  relation_type: SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_type
  relation_color: SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_color
  relation_entry: SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_entry
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_type {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_typeConfig
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_typeConfig {
  label: String
  placeholder: String
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_color {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_colorConfig
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_colorConfig {
  label: String
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_entry {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_entryConfig
}

type SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_entryConfig {
  select: String
  customtypes: [String]
  label: String
}

type SitePluginPluginOptionsSchemasMbti_intro {
  Main: SitePluginPluginOptionsSchemasMbti_introMain
}

type SitePluginPluginOptionsSchemasMbti_introMain {
  title: SitePluginPluginOptionsSchemasMbti_introMainTitle
  description: SitePluginPluginOptionsSchemasMbti_introMainDescription
  opengraph_image: SitePluginPluginOptionsSchemasMbti_introMainOpengraph_image
}

type SitePluginPluginOptionsSchemasMbti_introMainTitle {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_introMainTitleConfig
}

type SitePluginPluginOptionsSchemasMbti_introMainTitleConfig {
  label: String
}

type SitePluginPluginOptionsSchemasMbti_introMainDescription {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_introMainDescriptionConfig
}

type SitePluginPluginOptionsSchemasMbti_introMainDescriptionConfig {
  label: String
}

type SitePluginPluginOptionsSchemasMbti_introMainOpengraph_image {
  type: String
  config: SitePluginPluginOptionsSchemasMbti_introMainOpengraph_imageConfig
}

type SitePluginPluginOptionsSchemasMbti_introMainOpengraph_imageConfig {
  constraint: SitePluginPluginOptionsSchemasMbti_introMainOpengraph_imageConfigConstraint
  label: String
}

type SitePluginPluginOptionsSchemasMbti_introMainOpengraph_imageConfigConstraint {
  width: Int
  height: Int
}

type SitePluginPackageJson {
  name: String
  description: String
  version: String
  main: String
  license: String
  dependencies: [SitePluginPackageJsonDependencies]
  devDependencies: [SitePluginPackageJsonDevDependencies]
  peerDependencies: [SitePluginPackageJsonPeerDependencies]
  keywords: [String]
}

type SitePluginPackageJsonDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonDevDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonPeerDependencies {
  name: String
  version: String
}

type Query {
  file(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, url: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, childrenImageSharp: ImageSharpFilterListInput, childImageSharp: ImageSharpFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): File
  allFile(filter: FileFilterInput, sort: FileSortInput, skip: Int, limit: Int): FileConnection!
  directory(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Directory
  allDirectory(filter: DirectoryFilterInput, sort: DirectorySortInput, skip: Int, limit: Int): DirectoryConnection!
  site(buildTime: DateQueryOperatorInput, siteMetadata: SiteMetadataFilterInput, port: IntQueryOperatorInput, host: StringQueryOperatorInput, flags: SiteFlagsFilterInput, polyfill: BooleanQueryOperatorInput, pathPrefix: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Site
  allSite(filter: SiteFilterInput, sort: SiteSortInput, skip: Int, limit: Int): SiteConnection!
  siteFunction(functionRoute: StringQueryOperatorInput, pluginName: StringQueryOperatorInput, originalAbsoluteFilePath: StringQueryOperatorInput, originalRelativeFilePath: StringQueryOperatorInput, relativeCompiledFilePath: StringQueryOperatorInput, absoluteCompiledFilePath: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): SiteFunction
  allSiteFunction(filter: SiteFunctionFilterInput, sort: SiteFunctionSortInput, skip: Int, limit: Int): SiteFunctionConnection!
  sitePage(path: StringQueryOperatorInput, component: StringQueryOperatorInput, internalComponentName: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, context: SitePageContextFilterInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput): SitePage
  allSitePage(filter: SitePageFilterInput, sort: SitePageSortInput, skip: Int, limit: Int): SitePageConnection!
  imageSharp(fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: JSONQueryOperatorInput, original: ImageSharpOriginalFilterInput, resize: ImageSharpResizeFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): ImageSharp
  allImageSharp(filter: ImageSharpFilterInput, sort: ImageSharpSortInput, skip: Int, limit: Int): ImageSharpConnection!
  prismicMbtiTestQuestionBodyIe(slice_type: StringQueryOperatorInput, slice_label: StringQueryOperatorInput, primary: PrismicMbtiTestQuestionBodyIePrimaryTypeFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): PrismicMbtiTestQuestionBodyIe
  allPrismicMbtiTestQuestionBodyIe(filter: PrismicMbtiTestQuestionBodyIeFilterInput, sort: PrismicMbtiTestQuestionBodyIeSortInput, skip: Int, limit: Int): PrismicMbtiTestQuestionBodyIeConnection!
  prismicMbtiTestQuestionBodyNs(slice_type: StringQueryOperatorInput, slice_label: StringQueryOperatorInput, primary: PrismicMbtiTestQuestionBodyNsPrimaryTypeFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): PrismicMbtiTestQuestionBodyNs
  allPrismicMbtiTestQuestionBodyNs(filter: PrismicMbtiTestQuestionBodyNsFilterInput, sort: PrismicMbtiTestQuestionBodyNsSortInput, skip: Int, limit: Int): PrismicMbtiTestQuestionBodyNsConnection!
  prismicMbtiTestQuestionBodyFt(slice_type: StringQueryOperatorInput, slice_label: StringQueryOperatorInput, primary: PrismicMbtiTestQuestionBodyFtPrimaryTypeFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): PrismicMbtiTestQuestionBodyFt
  allPrismicMbtiTestQuestionBodyFt(filter: PrismicMbtiTestQuestionBodyFtFilterInput, sort: PrismicMbtiTestQuestionBodyFtSortInput, skip: Int, limit: Int): PrismicMbtiTestQuestionBodyFtConnection!
  prismicMbtiTestQuestionBodyPj(slice_type: StringQueryOperatorInput, slice_label: StringQueryOperatorInput, primary: PrismicMbtiTestQuestionBodyPjPrimaryTypeFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): PrismicMbtiTestQuestionBodyPj
  allPrismicMbtiTestQuestionBodyPj(filter: PrismicMbtiTestQuestionBodyPjFilterInput, sort: PrismicMbtiTestQuestionBodyPjSortInput, skip: Int, limit: Int): PrismicMbtiTestQuestionBodyPjConnection!
  prismicMbtiTestQuestion(dataRaw: JSONQueryOperatorInput, dataString: StringQueryOperatorInput, first_publication_date: DateQueryOperatorInput, href: StringQueryOperatorInput, url: StringQueryOperatorInput, lang: StringQueryOperatorInput, last_publication_date: DateQueryOperatorInput, tags: StringQueryOperatorInput, alternate_languages: PrismicLinkTypeFilterListInput, type: StringQueryOperatorInput, prismicId: IDQueryOperatorInput, _previewable: IDQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): PrismicMbtiTestQuestion
  allPrismicMbtiTestQuestion(filter: PrismicMbtiTestQuestionFilterInput, sort: PrismicMbtiTestQuestionSortInput, skip: Int, limit: Int): PrismicMbtiTestQuestionConnection!
  prismicMbtiTestResult(data: PrismicMbtiTestResultDataTypeFilterInput, dataRaw: JSONQueryOperatorInput, dataString: StringQueryOperatorInput, first_publication_date: DateQueryOperatorInput, href: StringQueryOperatorInput, url: StringQueryOperatorInput, lang: StringQueryOperatorInput, last_publication_date: DateQueryOperatorInput, tags: StringQueryOperatorInput, alternate_languages: PrismicLinkTypeFilterListInput, type: StringQueryOperatorInput, prismicId: IDQueryOperatorInput, _previewable: IDQueryOperatorInput, uid: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): PrismicMbtiTestResult
  allPrismicMbtiTestResult(filter: PrismicMbtiTestResultFilterInput, sort: PrismicMbtiTestResultSortInput, skip: Int, limit: Int): PrismicMbtiTestResultConnection!
  prismicMbtiIntro(data: PrismicMbtiIntroDataTypeFilterInput, dataRaw: JSONQueryOperatorInput, dataString: StringQueryOperatorInput, first_publication_date: DateQueryOperatorInput, href: StringQueryOperatorInput, url: StringQueryOperatorInput, lang: StringQueryOperatorInput, last_publication_date: DateQueryOperatorInput, tags: StringQueryOperatorInput, alternate_languages: PrismicLinkTypeFilterListInput, type: StringQueryOperatorInput, prismicId: IDQueryOperatorInput, _previewable: IDQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): PrismicMbtiIntro
  allPrismicMbtiIntro(filter: PrismicMbtiIntroFilterInput, sort: PrismicMbtiIntroSortInput, skip: Int, limit: Int): PrismicMbtiIntroConnection!
  prismicTermsAndConditions(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, uid: StringQueryOperatorInput, type: StringQueryOperatorInput, href: StringQueryOperatorInput, tags: StringQueryOperatorInput, first_publication_date: DateQueryOperatorInput, last_publication_date: DateQueryOperatorInput, slugs: StringQueryOperatorInput, lang: StringQueryOperatorInput, data: PrismicTermsAndConditionsDataFilterInput, prismicId: StringQueryOperatorInput, dataString: StringQueryOperatorInput, dataRaw: PrismicTermsAndConditionsDataRawFilterInput, _previewable: StringQueryOperatorInput): PrismicTermsAndConditions
  allPrismicTermsAndConditions(filter: PrismicTermsAndConditionsFilterInput, sort: PrismicTermsAndConditionsSortInput, skip: Int, limit: Int): PrismicTermsAndConditionsConnection!
  prismicFaq(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, uid: StringQueryOperatorInput, type: StringQueryOperatorInput, href: StringQueryOperatorInput, tags: StringQueryOperatorInput, first_publication_date: DateQueryOperatorInput, last_publication_date: DateQueryOperatorInput, slugs: StringQueryOperatorInput, lang: StringQueryOperatorInput, data: PrismicFaqDataFilterInput, prismicId: StringQueryOperatorInput, dataString: StringQueryOperatorInput, dataRaw: PrismicFaqDataRawFilterInput, _previewable: StringQueryOperatorInput): PrismicFaq
  allPrismicFaq(filter: PrismicFaqFilterInput, sort: PrismicFaqSortInput, skip: Int, limit: Int): PrismicFaqConnection!
  prismicSiteNavigation(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, uid: StringQueryOperatorInput, type: StringQueryOperatorInput, href: StringQueryOperatorInput, tags: StringQueryOperatorInput, first_publication_date: DateQueryOperatorInput, last_publication_date: DateQueryOperatorInput, slugs: StringQueryOperatorInput, lang: StringQueryOperatorInput, data: PrismicSiteNavigationDataFilterInput, prismicId: StringQueryOperatorInput, dataString: StringQueryOperatorInput, dataRaw: PrismicSiteNavigationDataRawFilterInput, _previewable: StringQueryOperatorInput): PrismicSiteNavigation
  allPrismicSiteNavigation(filter: PrismicSiteNavigationFilterInput, sort: PrismicSiteNavigationSortInput, skip: Int, limit: Int): PrismicSiteNavigationConnection!
  prismicGlobalContents(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, type: StringQueryOperatorInput, href: StringQueryOperatorInput, tags: StringQueryOperatorInput, first_publication_date: DateQueryOperatorInput, last_publication_date: DateQueryOperatorInput, slugs: StringQueryOperatorInput, lang: StringQueryOperatorInput, alternate_languages: PrismicGlobalContentsAlternate_languagesFilterListInput, data: PrismicGlobalContentsDataFilterInput, prismicId: StringQueryOperatorInput, dataString: StringQueryOperatorInput, dataRaw: PrismicGlobalContentsDataRawFilterInput, _previewable: StringQueryOperatorInput): PrismicGlobalContents
  allPrismicGlobalContents(filter: PrismicGlobalContentsFilterInput, sort: PrismicGlobalContentsSortInput, skip: Int, limit: Int): PrismicGlobalContentsConnection!
  prismicTeamContents(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, type: StringQueryOperatorInput, href: StringQueryOperatorInput, tags: StringQueryOperatorInput, first_publication_date: DateQueryOperatorInput, last_publication_date: DateQueryOperatorInput, slugs: StringQueryOperatorInput, lang: StringQueryOperatorInput, data: PrismicTeamContentsDataFilterInput, prismicId: StringQueryOperatorInput, dataString: StringQueryOperatorInput, dataRaw: PrismicTeamContentsDataRawFilterInput, _previewable: StringQueryOperatorInput): PrismicTeamContents
  allPrismicTeamContents(filter: PrismicTeamContentsFilterInput, sort: PrismicTeamContentsSortInput, skip: Int, limit: Int): PrismicTeamContentsConnection!
  siteBuildMetadata(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, buildTime: DateQueryOperatorInput): SiteBuildMetadata
  allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, sort: SiteBuildMetadataSortInput, skip: Int, limit: Int): SiteBuildMetadataConnection!
  sitePlugin(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, resolve: StringQueryOperatorInput, name: StringQueryOperatorInput, version: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, nodeAPIs: StringQueryOperatorInput, browserAPIs: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, pluginFilepath: StringQueryOperatorInput, packageJson: SitePluginPackageJsonFilterInput): SitePlugin
  allSitePlugin(filter: SitePluginFilterInput, sort: SitePluginSortInput, skip: Int, limit: Int): SitePluginConnection!
}

input StringQueryOperatorInput {
  eq: String
  ne: String
  in: [String]
  nin: [String]
  regex: String
  glob: String
}

input IntQueryOperatorInput {
  eq: Int
  ne: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  in: [Int]
  nin: [Int]
}

input DateQueryOperatorInput {
  eq: Date
  ne: Date
  gt: Date
  gte: Date
  lt: Date
  lte: Date
  in: [Date]
  nin: [Date]
}

input FloatQueryOperatorInput {
  eq: Float
  ne: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  in: [Float]
  nin: [Float]
}

input ImageSharpFilterListInput {
  elemMatch: ImageSharpFilterInput
}

input ImageSharpFilterInput {
  fixed: ImageSharpFixedFilterInput
  fluid: ImageSharpFluidFilterInput
  gatsbyImageData: JSONQueryOperatorInput
  original: ImageSharpOriginalFilterInput
  resize: ImageSharpResizeFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input ImageSharpFixedFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
}

input ImageSharpFluidFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  sizes: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
}

input JSONQueryOperatorInput {
  eq: JSON
  ne: JSON
  in: [JSON]
  nin: [JSON]
  regex: JSON
  glob: JSON
}

input ImageSharpOriginalFilterInput {
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
}

input ImageSharpResizeFilterInput {
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
}

input NodeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input BooleanQueryOperatorInput {
  eq: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
}

type FileConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  distinct(field: FileFieldsEnum!): [String!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  sum(field: FileFieldsEnum!): Float
  group(skip: Int, limit: Int, field: FileFieldsEnum!): [FileGroupConnection!]!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

type PageInfo {
  currentPage: Int!
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
  totalCount: Int!
}

enum FileFieldsEnum {
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  atime
  mtime
  ctime
  birthtime
  birthtimeMs
  blksize
  blocks
  url
  publicURL
  childrenImageSharp
  childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type FileGroupConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input FileFilterInput {
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: IntQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  url: StringQueryOperatorInput
  publicURL: StringQueryOperatorInput
  childrenImageSharp: ImageSharpFilterListInput
  childImageSharp: ImageSharpFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

enum SortOrderEnum {
  ASC
  DESC
}

type DirectoryConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  distinct(field: DirectoryFieldsEnum!): [String!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  sum(field: DirectoryFieldsEnum!): Float
  group(skip: Int, limit: Int, field: DirectoryFieldsEnum!): [DirectoryGroupConnection!]!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

enum DirectoryFieldsEnum {
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  atime
  mtime
  ctime
  birthtime
  birthtimeMs
  blksize
  blocks
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type DirectoryGroupConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input DirectoryFilterInput {
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: IntQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteMetadataFilterInput {
  siteUrl: StringQueryOperatorInput
  siteName: StringQueryOperatorInput
  shortName: StringQueryOperatorInput
}

input SiteFlagsFilterInput {
  FAST_DEV: BooleanQueryOperatorInput
  QUERY_ON_DEMAND: BooleanQueryOperatorInput
  LAZY_IMAGES: BooleanQueryOperatorInput
  PARALLEL_SOURCING: BooleanQueryOperatorInput
  DEV_SSR: BooleanQueryOperatorInput
}

type SiteConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  distinct(field: SiteFieldsEnum!): [String!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  sum(field: SiteFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFieldsEnum!): [SiteGroupConnection!]!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

enum SiteFieldsEnum {
  buildTime
  siteMetadata___siteUrl
  siteMetadata___siteName
  siteMetadata___shortName
  port
  host
  flags___FAST_DEV
  flags___QUERY_ON_DEMAND
  flags___LAZY_IMAGES
  flags___PARALLEL_SOURCING
  flags___DEV_SSR
  polyfill
  pathPrefix
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SiteGroupConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SiteFilterInput {
  buildTime: DateQueryOperatorInput
  siteMetadata: SiteMetadataFilterInput
  port: IntQueryOperatorInput
  host: StringQueryOperatorInput
  flags: SiteFlagsFilterInput
  polyfill: BooleanQueryOperatorInput
  pathPrefix: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteFunctionConnection {
  totalCount: Int!
  edges: [SiteFunctionEdge!]!
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  sum(field: SiteFunctionFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFunctionFieldsEnum!): [SiteFunctionGroupConnection!]!
}

type SiteFunctionEdge {
  next: SiteFunction
  node: SiteFunction!
  previous: SiteFunction
}

enum SiteFunctionFieldsEnum {
  functionRoute
  pluginName
  originalAbsoluteFilePath
  originalRelativeFilePath
  relativeCompiledFilePath
  absoluteCompiledFilePath
  matchPath
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SiteFunctionGroupConnection {
  totalCount: Int!
  edges: [SiteFunctionEdge!]!
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SiteFunctionFilterInput {
  functionRoute: StringQueryOperatorInput
  pluginName: StringQueryOperatorInput
  originalAbsoluteFilePath: StringQueryOperatorInput
  originalRelativeFilePath: StringQueryOperatorInput
  relativeCompiledFilePath: StringQueryOperatorInput
  absoluteCompiledFilePath: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SiteFunctionSortInput {
  fields: [SiteFunctionFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SitePageContextFilterInput {
  id: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  _xparams: SitePageContext_xparamsFilterInput
}

input SitePageContext_xparamsFilterInput {
  uid: StringQueryOperatorInput
}

input SitePluginFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  resolve: StringQueryOperatorInput
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
  pluginOptions: SitePluginPluginOptionsFilterInput
  nodeAPIs: StringQueryOperatorInput
  browserAPIs: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  pluginFilepath: StringQueryOperatorInput
  packageJson: SitePluginPackageJsonFilterInput
}

input SitePluginPluginOptionsFilterInput {
  name: StringQueryOperatorInput
  path: StringQueryOperatorInput
  trackingIds: StringQueryOperatorInput
  pluginConfig: SitePluginPluginOptionsPluginConfigFilterInput
  base64Width: IntQueryOperatorInput
  stripMetadata: BooleanQueryOperatorInput
  defaultQuality: IntQueryOperatorInput
  failOnError: BooleanQueryOperatorInput
  sourceMap: BooleanQueryOperatorInput
  autoLabel: StringQueryOperatorInput
  labelFormat: StringQueryOperatorInput
  cssPropOptimization: BooleanQueryOperatorInput
  root: StringQueryOperatorInput
  aliases: SitePluginPluginOptionsAliasesFilterInput
  outputPath: StringQueryOperatorInput
  emitSchema: SitePluginPluginOptionsEmitSchemaFilterInput
  emitPluginDocuments: SitePluginPluginOptionsEmitPluginDocumentsFilterInput
  short_name: StringQueryOperatorInput
  start_url: StringQueryOperatorInput
  background_color: StringQueryOperatorInput
  theme_color: StringQueryOperatorInput
  display: StringQueryOperatorInput
  icon: StringQueryOperatorInput
  legacy: BooleanQueryOperatorInput
  theme_color_in_head: BooleanQueryOperatorInput
  cache_busting_mode: StringQueryOperatorInput
  crossOrigin: StringQueryOperatorInput
  include_favicon: BooleanQueryOperatorInput
  cacheDigest: StringQueryOperatorInput
  repositoryName: StringQueryOperatorInput
  prismicToolbar: BooleanQueryOperatorInput
  schemas: SitePluginPluginOptionsSchemasFilterInput
  pathCheck: BooleanQueryOperatorInput
  allExtensions: BooleanQueryOperatorInput
  isTSX: BooleanQueryOperatorInput
  jsxPragma: StringQueryOperatorInput
}

input SitePluginPluginOptionsPluginConfigFilterInput {
  exclude: StringQueryOperatorInput
}

input SitePluginPluginOptionsAliasesFilterInput {
  _src: StringQueryOperatorInput
}

input SitePluginPluginOptionsEmitSchemaFilterInput {
  src___generated___gatsby_introspection_json: BooleanQueryOperatorInput
  src___generated___gatsby_schema_graphql: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsEmitPluginDocumentsFilterInput {
  src___generated___gatsby_plugin_documents_graphql: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsSchemasFilterInput {
  mbti_test_question: SitePluginPluginOptionsSchemasMbti_test_questionFilterInput
  mbti_test_result: SitePluginPluginOptionsSchemasMbti_test_resultFilterInput
  mbti_intro: SitePluginPluginOptionsSchemasMbti_introFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionFilterInput {
  Main: SitePluginPluginOptionsSchemasMbti_test_questionMainFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainFilterInput {
  body: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyFilterInput {
  type: StringQueryOperatorInput
  fieldset: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigFilterInput {
  choices: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFilterInput {
  ie: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeFilterInput
  ns: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsFilterInput
  ft: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtFilterInput
  pj: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeFilterInput {
  type: StringQueryOperatorInput
  fieldset: StringQueryOperatorInput
  description: StringQueryOperatorInput
  icon: StringQueryOperatorInput
  display: StringQueryOperatorInput
  non_repeat: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatFilterInput {
  question: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatQuestionFilterInput
  answer_i: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatAnswer_iFilterInput
  answer_e: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatAnswer_eFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatQuestionFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatQuestionConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatQuestionConfigFilterInput {
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatAnswer_iFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatAnswer_iConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatAnswer_iConfigFilterInput {
  single: StringQueryOperatorInput
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatAnswer_eFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatAnswer_eConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesIeNon_repeatAnswer_eConfigFilterInput {
  single: StringQueryOperatorInput
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsFilterInput {
  type: StringQueryOperatorInput
  fieldset: StringQueryOperatorInput
  description: StringQueryOperatorInput
  icon: StringQueryOperatorInput
  display: StringQueryOperatorInput
  non_repeat: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatFilterInput {
  question: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatQuestionFilterInput
  answer_n: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatAnswer_nFilterInput
  answer_s: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatAnswer_sFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatQuestionFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatQuestionConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatQuestionConfigFilterInput {
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatAnswer_nFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatAnswer_nConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatAnswer_nConfigFilterInput {
  single: StringQueryOperatorInput
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatAnswer_sFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatAnswer_sConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesNsNon_repeatAnswer_sConfigFilterInput {
  single: StringQueryOperatorInput
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtFilterInput {
  type: StringQueryOperatorInput
  fieldset: StringQueryOperatorInput
  description: StringQueryOperatorInput
  icon: StringQueryOperatorInput
  display: StringQueryOperatorInput
  non_repeat: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatFilterInput {
  question: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatQuestionFilterInput
  answer_f: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatAnswer_fFilterInput
  answer_t: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatAnswer_tFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatQuestionFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatQuestionConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatQuestionConfigFilterInput {
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatAnswer_fFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatAnswer_fConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatAnswer_fConfigFilterInput {
  single: StringQueryOperatorInput
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatAnswer_tFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatAnswer_tConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesFtNon_repeatAnswer_tConfigFilterInput {
  single: StringQueryOperatorInput
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjFilterInput {
  type: StringQueryOperatorInput
  fieldset: StringQueryOperatorInput
  description: StringQueryOperatorInput
  icon: StringQueryOperatorInput
  display: StringQueryOperatorInput
  non_repeat: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatFilterInput {
  question: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatQuestionFilterInput
  answer_p: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatAnswer_pFilterInput
  answer_j: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatAnswer_jFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatQuestionFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatQuestionConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatQuestionConfigFilterInput {
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatAnswer_pFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatAnswer_pConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatAnswer_pConfigFilterInput {
  single: StringQueryOperatorInput
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatAnswer_jFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatAnswer_jConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_questionMainBodyConfigChoicesPjNon_repeatAnswer_jConfigFilterInput {
  single: StringQueryOperatorInput
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultFilterInput {
  Main: SitePluginPluginOptionsSchemasMbti_test_resultMainFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainFilterInput {
  uid: SitePluginPluginOptionsSchemasMbti_test_resultMainUidFilterInput
  summary: SitePluginPluginOptionsSchemasMbti_test_resultMainSummaryFilterInput
  og_description: SitePluginPluginOptionsSchemasMbti_test_resultMainOg_descriptionFilterInput
  opengraph_image: SitePluginPluginOptionsSchemasMbti_test_resultMainOpengraph_imageFilterInput
  comments: SitePluginPluginOptionsSchemasMbti_test_resultMainCommentsFilterInput
  thumbnail: SitePluginPluginOptionsSchemasMbti_test_resultMainThumbnailFilterInput
  avatar: SitePluginPluginOptionsSchemasMbti_test_resultMainAvatarFilterInput
  tags: SitePluginPluginOptionsSchemasMbti_test_resultMainTagsFilterInput
  remarks: SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksFilterInput
  relations: SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainUidFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainUidConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainUidConfigFilterInput {
  label: StringQueryOperatorInput
  placeholder: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainSummaryFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainSummaryConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainSummaryConfigFilterInput {
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainOg_descriptionFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainOg_descriptionConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainOg_descriptionConfigFilterInput {
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainOpengraph_imageFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainOpengraph_imageConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainOpengraph_imageConfigFilterInput {
  constraint: SitePluginPluginOptionsSchemasMbti_test_resultMainOpengraph_imageConfigConstraintFilterInput
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainOpengraph_imageConfigConstraintFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainCommentsFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainCommentsConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainCommentsConfigFilterInput {
  fields: SitePluginPluginOptionsSchemasMbti_test_resultMainCommentsConfigFieldsFilterInput
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainCommentsConfigFieldsFilterInput {
  text: SitePluginPluginOptionsSchemasMbti_test_resultMainCommentsConfigFieldsTextFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainCommentsConfigFieldsTextFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainCommentsConfigFieldsTextConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainCommentsConfigFieldsTextConfigFilterInput {
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainThumbnailFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainThumbnailConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainThumbnailConfigFilterInput {
  constraint: SitePluginPluginOptionsSchemasMbti_test_resultMainThumbnailConfigConstraintFilterInput
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainThumbnailConfigConstraintFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainAvatarFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainAvatarConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainAvatarConfigFilterInput {
  constraint: SitePluginPluginOptionsSchemasMbti_test_resultMainAvatarConfigConstraintFilterInput
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainAvatarConfigConstraintFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainTagsFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainTagsConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainTagsConfigFilterInput {
  fields: SitePluginPluginOptionsSchemasMbti_test_resultMainTagsConfigFieldsFilterInput
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainTagsConfigFieldsFilterInput {
  tag_name: SitePluginPluginOptionsSchemasMbti_test_resultMainTagsConfigFieldsTag_nameFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainTagsConfigFieldsTag_nameFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainTagsConfigFieldsTag_nameConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainTagsConfigFieldsTag_nameConfigFilterInput {
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFilterInput {
  fields: SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFieldsFilterInput
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFieldsFilterInput {
  remark_name: SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFieldsRemark_nameFilterInput
  remark_description: SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFieldsRemark_descriptionFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFieldsRemark_nameFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFieldsRemark_nameConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFieldsRemark_nameConfigFilterInput {
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFieldsRemark_descriptionFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFieldsRemark_descriptionConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainRemarksConfigFieldsRemark_descriptionConfigFilterInput {
  single: StringQueryOperatorInput
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFilterInput {
  fields: SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsFilterInput
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsFilterInput {
  relation_type: SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_typeFilterInput
  relation_color: SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_colorFilterInput
  relation_entry: SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_entryFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_typeFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_typeConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_typeConfigFilterInput {
  label: StringQueryOperatorInput
  placeholder: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_colorFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_colorConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_colorConfigFilterInput {
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_entryFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_entryConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_test_resultMainRelationsConfigFieldsRelation_entryConfigFilterInput {
  select: StringQueryOperatorInput
  customtypes: StringQueryOperatorInput
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_introFilterInput {
  Main: SitePluginPluginOptionsSchemasMbti_introMainFilterInput
}

input SitePluginPluginOptionsSchemasMbti_introMainFilterInput {
  title: SitePluginPluginOptionsSchemasMbti_introMainTitleFilterInput
  description: SitePluginPluginOptionsSchemasMbti_introMainDescriptionFilterInput
  opengraph_image: SitePluginPluginOptionsSchemasMbti_introMainOpengraph_imageFilterInput
}

input SitePluginPluginOptionsSchemasMbti_introMainTitleFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_introMainTitleConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_introMainTitleConfigFilterInput {
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_introMainDescriptionFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_introMainDescriptionConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_introMainDescriptionConfigFilterInput {
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_introMainOpengraph_imageFilterInput {
  type: StringQueryOperatorInput
  config: SitePluginPluginOptionsSchemasMbti_introMainOpengraph_imageConfigFilterInput
}

input SitePluginPluginOptionsSchemasMbti_introMainOpengraph_imageConfigFilterInput {
  constraint: SitePluginPluginOptionsSchemasMbti_introMainOpengraph_imageConfigConstraintFilterInput
  label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasMbti_introMainOpengraph_imageConfigConstraintFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input SitePluginPackageJsonFilterInput {
  name: StringQueryOperatorInput
  description: StringQueryOperatorInput
  version: StringQueryOperatorInput
  main: StringQueryOperatorInput
  license: StringQueryOperatorInput
  dependencies: SitePluginPackageJsonDependenciesFilterListInput
  devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput
  peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput
  keywords: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDependenciesFilterInput
}

input SitePluginPackageJsonDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDevDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDevDependenciesFilterInput
}

input SitePluginPackageJsonDevDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput
}

input SitePluginPackageJsonPeerDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

type SitePageConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  distinct(field: SitePageFieldsEnum!): [String!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  sum(field: SitePageFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SitePageFieldsEnum!): [SitePageGroupConnection!]!
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

enum SitePageFieldsEnum {
  path
  component
  internalComponentName
  componentChunkName
  matchPath
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  isCreatedByStatefulCreatePages
  context___id
  context___uid
  context____xparams___uid
  pluginCreator___id
  pluginCreator___parent___id
  pluginCreator___parent___parent___id
  pluginCreator___parent___parent___children
  pluginCreator___parent___children
  pluginCreator___parent___children___id
  pluginCreator___parent___children___children
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___children
  pluginCreator___children___id
  pluginCreator___children___parent___id
  pluginCreator___children___parent___children
  pluginCreator___children___children
  pluginCreator___children___children___id
  pluginCreator___children___children___children
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  pluginCreator___resolve
  pluginCreator___name
  pluginCreator___version
  pluginCreator___pluginOptions___name
  pluginCreator___pluginOptions___path
  pluginCreator___pluginOptions___trackingIds
  pluginCreator___pluginOptions___pluginConfig___exclude
  pluginCreator___pluginOptions___base64Width
  pluginCreator___pluginOptions___stripMetadata
  pluginCreator___pluginOptions___defaultQuality
  pluginCreator___pluginOptions___failOnError
  pluginCreator___pluginOptions___sourceMap
  pluginCreator___pluginOptions___autoLabel
  pluginCreator___pluginOptions___labelFormat
  pluginCreator___pluginOptions___cssPropOptimization
  pluginCreator___pluginOptions___root
  pluginCreator___pluginOptions___aliases____src
  pluginCreator___pluginOptions___outputPath
  pluginCreator___pluginOptions___emitSchema___src___generated___gatsby_introspection_json
  pluginCreator___pluginOptions___emitSchema___src___generated___gatsby_schema_graphql
  pluginCreator___pluginOptions___emitPluginDocuments___src___generated___gatsby_plugin_documents_graphql
  pluginCreator___pluginOptions___short_name
  pluginCreator___pluginOptions___start_url
  pluginCreator___pluginOptions___background_color
  pluginCreator___pluginOptions___theme_color
  pluginCreator___pluginOptions___display
  pluginCreator___pluginOptions___icon
  pluginCreator___pluginOptions___legacy
  pluginCreator___pluginOptions___theme_color_in_head
  pluginCreator___pluginOptions___cache_busting_mode
  pluginCreator___pluginOptions___crossOrigin
  pluginCreator___pluginOptions___include_favicon
  pluginCreator___pluginOptions___cacheDigest
  pluginCreator___pluginOptions___repositoryName
  pluginCreator___pluginOptions___prismicToolbar
  pluginCreator___pluginOptions___pathCheck
  pluginCreator___pluginOptions___allExtensions
  pluginCreator___pluginOptions___isTSX
  pluginCreator___pluginOptions___jsxPragma
  pluginCreator___nodeAPIs
  pluginCreator___browserAPIs
  pluginCreator___ssrAPIs
  pluginCreator___pluginFilepath
  pluginCreator___packageJson___name
  pluginCreator___packageJson___description
  pluginCreator___packageJson___version
  pluginCreator___packageJson___main
  pluginCreator___packageJson___license
  pluginCreator___packageJson___dependencies
  pluginCreator___packageJson___dependencies___name
  pluginCreator___packageJson___dependencies___version
  pluginCreator___packageJson___devDependencies
  pluginCreator___packageJson___devDependencies___name
  pluginCreator___packageJson___devDependencies___version
  pluginCreator___packageJson___peerDependencies
  pluginCreator___packageJson___peerDependencies___name
  pluginCreator___packageJson___peerDependencies___version
  pluginCreator___packageJson___keywords
  pluginCreatorId
}

type SitePageGroupConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SitePageFilterInput {
  path: StringQueryOperatorInput
  component: StringQueryOperatorInput
  internalComponentName: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
  context: SitePageContextFilterInput
  pluginCreator: SitePluginFilterInput
  pluginCreatorId: StringQueryOperatorInput
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type ImageSharpConnection {
  totalCount: Int!
  edges: [ImageSharpEdge!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  max(field: ImageSharpFieldsEnum!): Float
  min(field: ImageSharpFieldsEnum!): Float
  sum(field: ImageSharpFieldsEnum!): Float
  group(skip: Int, limit: Int, field: ImageSharpFieldsEnum!): [ImageSharpGroupConnection!]!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

enum ImageSharpFieldsEnum {
  fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

type ImageSharpGroupConnection {
  totalCount: Int!
  edges: [ImageSharpEdge!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input PrismicMbtiTestQuestionBodyIePrimaryTypeFilterInput {
  question: StringQueryOperatorInput
  answer_i: PrismicStructuredTextTypeFilterInput
  answer_e: PrismicStructuredTextTypeFilterInput
}

input PrismicStructuredTextTypeFilterInput {
  html: StringQueryOperatorInput
  text: StringQueryOperatorInput
  raw: JSONQueryOperatorInput
}

type PrismicMbtiTestQuestionBodyIeConnection {
  totalCount: Int!
  edges: [PrismicMbtiTestQuestionBodyIeEdge!]!
  nodes: [PrismicMbtiTestQuestionBodyIe!]!
  pageInfo: PageInfo!
  distinct(field: PrismicMbtiTestQuestionBodyIeFieldsEnum!): [String!]!
  max(field: PrismicMbtiTestQuestionBodyIeFieldsEnum!): Float
  min(field: PrismicMbtiTestQuestionBodyIeFieldsEnum!): Float
  sum(field: PrismicMbtiTestQuestionBodyIeFieldsEnum!): Float
  group(skip: Int, limit: Int, field: PrismicMbtiTestQuestionBodyIeFieldsEnum!): [PrismicMbtiTestQuestionBodyIeGroupConnection!]!
}

type PrismicMbtiTestQuestionBodyIeEdge {
  next: PrismicMbtiTestQuestionBodyIe
  node: PrismicMbtiTestQuestionBodyIe!
  previous: PrismicMbtiTestQuestionBodyIe
}

enum PrismicMbtiTestQuestionBodyIeFieldsEnum {
  slice_type
  slice_label
  primary___question
  primary___answer_i___html
  primary___answer_i___text
  primary___answer_i___raw
  primary___answer_e___html
  primary___answer_e___text
  primary___answer_e___raw
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type PrismicMbtiTestQuestionBodyIeGroupConnection {
  totalCount: Int!
  edges: [PrismicMbtiTestQuestionBodyIeEdge!]!
  nodes: [PrismicMbtiTestQuestionBodyIe!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input PrismicMbtiTestQuestionBodyIeFilterInput {
  slice_type: StringQueryOperatorInput
  slice_label: StringQueryOperatorInput
  primary: PrismicMbtiTestQuestionBodyIePrimaryTypeFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input PrismicMbtiTestQuestionBodyIeSortInput {
  fields: [PrismicMbtiTestQuestionBodyIeFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input PrismicMbtiTestQuestionBodyNsPrimaryTypeFilterInput {
  question: StringQueryOperatorInput
  answer_n: PrismicStructuredTextTypeFilterInput
  answer_s: PrismicStructuredTextTypeFilterInput
}

type PrismicMbtiTestQuestionBodyNsConnection {
  totalCount: Int!
  edges: [PrismicMbtiTestQuestionBodyNsEdge!]!
  nodes: [PrismicMbtiTestQuestionBodyNs!]!
  pageInfo: PageInfo!
  distinct(field: PrismicMbtiTestQuestionBodyNsFieldsEnum!): [String!]!
  max(field: PrismicMbtiTestQuestionBodyNsFieldsEnum!): Float
  min(field: PrismicMbtiTestQuestionBodyNsFieldsEnum!): Float
  sum(field: PrismicMbtiTestQuestionBodyNsFieldsEnum!): Float
  group(skip: Int, limit: Int, field: PrismicMbtiTestQuestionBodyNsFieldsEnum!): [PrismicMbtiTestQuestionBodyNsGroupConnection!]!
}

type PrismicMbtiTestQuestionBodyNsEdge {
  next: PrismicMbtiTestQuestionBodyNs
  node: PrismicMbtiTestQuestionBodyNs!
  previous: PrismicMbtiTestQuestionBodyNs
}

enum PrismicMbtiTestQuestionBodyNsFieldsEnum {
  slice_type
  slice_label
  primary___question
  primary___answer_n___html
  primary___answer_n___text
  primary___answer_n___raw
  primary___answer_s___html
  primary___answer_s___text
  primary___answer_s___raw
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type PrismicMbtiTestQuestionBodyNsGroupConnection {
  totalCount: Int!
  edges: [PrismicMbtiTestQuestionBodyNsEdge!]!
  nodes: [PrismicMbtiTestQuestionBodyNs!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input PrismicMbtiTestQuestionBodyNsFilterInput {
  slice_type: StringQueryOperatorInput
  slice_label: StringQueryOperatorInput
  primary: PrismicMbtiTestQuestionBodyNsPrimaryTypeFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input PrismicMbtiTestQuestionBodyNsSortInput {
  fields: [PrismicMbtiTestQuestionBodyNsFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input PrismicMbtiTestQuestionBodyFtPrimaryTypeFilterInput {
  question: StringQueryOperatorInput
  answer_f: PrismicStructuredTextTypeFilterInput
  answer_t: PrismicStructuredTextTypeFilterInput
}

type PrismicMbtiTestQuestionBodyFtConnection {
  totalCount: Int!
  edges: [PrismicMbtiTestQuestionBodyFtEdge!]!
  nodes: [PrismicMbtiTestQuestionBodyFt!]!
  pageInfo: PageInfo!
  distinct(field: PrismicMbtiTestQuestionBodyFtFieldsEnum!): [String!]!
  max(field: PrismicMbtiTestQuestionBodyFtFieldsEnum!): Float
  min(field: PrismicMbtiTestQuestionBodyFtFieldsEnum!): Float
  sum(field: PrismicMbtiTestQuestionBodyFtFieldsEnum!): Float
  group(skip: Int, limit: Int, field: PrismicMbtiTestQuestionBodyFtFieldsEnum!): [PrismicMbtiTestQuestionBodyFtGroupConnection!]!
}

type PrismicMbtiTestQuestionBodyFtEdge {
  next: PrismicMbtiTestQuestionBodyFt
  node: PrismicMbtiTestQuestionBodyFt!
  previous: PrismicMbtiTestQuestionBodyFt
}

enum PrismicMbtiTestQuestionBodyFtFieldsEnum {
  slice_type
  slice_label
  primary___question
  primary___answer_f___html
  primary___answer_f___text
  primary___answer_f___raw
  primary___answer_t___html
  primary___answer_t___text
  primary___answer_t___raw
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type PrismicMbtiTestQuestionBodyFtGroupConnection {
  totalCount: Int!
  edges: [PrismicMbtiTestQuestionBodyFtEdge!]!
  nodes: [PrismicMbtiTestQuestionBodyFt!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input PrismicMbtiTestQuestionBodyFtFilterInput {
  slice_type: StringQueryOperatorInput
  slice_label: StringQueryOperatorInput
  primary: PrismicMbtiTestQuestionBodyFtPrimaryTypeFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input PrismicMbtiTestQuestionBodyFtSortInput {
  fields: [PrismicMbtiTestQuestionBodyFtFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input PrismicMbtiTestQuestionBodyPjPrimaryTypeFilterInput {
  question: StringQueryOperatorInput
  answer_p: PrismicStructuredTextTypeFilterInput
  answer_j: PrismicStructuredTextTypeFilterInput
}

type PrismicMbtiTestQuestionBodyPjConnection {
  totalCount: Int!
  edges: [PrismicMbtiTestQuestionBodyPjEdge!]!
  nodes: [PrismicMbtiTestQuestionBodyPj!]!
  pageInfo: PageInfo!
  distinct(field: PrismicMbtiTestQuestionBodyPjFieldsEnum!): [String!]!
  max(field: PrismicMbtiTestQuestionBodyPjFieldsEnum!): Float
  min(field: PrismicMbtiTestQuestionBodyPjFieldsEnum!): Float
  sum(field: PrismicMbtiTestQuestionBodyPjFieldsEnum!): Float
  group(skip: Int, limit: Int, field: PrismicMbtiTestQuestionBodyPjFieldsEnum!): [PrismicMbtiTestQuestionBodyPjGroupConnection!]!
}

type PrismicMbtiTestQuestionBodyPjEdge {
  next: PrismicMbtiTestQuestionBodyPj
  node: PrismicMbtiTestQuestionBodyPj!
  previous: PrismicMbtiTestQuestionBodyPj
}

enum PrismicMbtiTestQuestionBodyPjFieldsEnum {
  slice_type
  slice_label
  primary___question
  primary___answer_p___html
  primary___answer_p___text
  primary___answer_p___raw
  primary___answer_j___html
  primary___answer_j___text
  primary___answer_j___raw
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type PrismicMbtiTestQuestionBodyPjGroupConnection {
  totalCount: Int!
  edges: [PrismicMbtiTestQuestionBodyPjEdge!]!
  nodes: [PrismicMbtiTestQuestionBodyPj!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input PrismicMbtiTestQuestionBodyPjFilterInput {
  slice_type: StringQueryOperatorInput
  slice_label: StringQueryOperatorInput
  primary: PrismicMbtiTestQuestionBodyPjPrimaryTypeFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input PrismicMbtiTestQuestionBodyPjSortInput {
  fields: [PrismicMbtiTestQuestionBodyPjFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input PrismicLinkTypeFilterListInput {
  elemMatch: PrismicLinkTypeFilterInput
}

input PrismicLinkTypeFilterInput {
  link_type: PrismicLinkTypesQueryOperatorInput
  isBroken: BooleanQueryOperatorInput
  url: StringQueryOperatorInput
  target: StringQueryOperatorInput
  size: IntQueryOperatorInput
  id: IDQueryOperatorInput
  type: StringQueryOperatorInput
  tags: StringQueryOperatorInput
  lang: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  uid: StringQueryOperatorInput
  raw: JSONQueryOperatorInput
}

input PrismicLinkTypesQueryOperatorInput {
  eq: PrismicLinkTypes
  ne: PrismicLinkTypes
  in: [PrismicLinkTypes]
  nin: [PrismicLinkTypes]
}

input IDQueryOperatorInput {
  eq: ID
  ne: ID
  in: [ID]
  nin: [ID]
}

type PrismicMbtiTestQuestionConnection {
  totalCount: Int!
  edges: [PrismicMbtiTestQuestionEdge!]!
  nodes: [PrismicMbtiTestQuestion!]!
  pageInfo: PageInfo!
  distinct(field: PrismicMbtiTestQuestionFieldsEnum!): [String!]!
  max(field: PrismicMbtiTestQuestionFieldsEnum!): Float
  min(field: PrismicMbtiTestQuestionFieldsEnum!): Float
  sum(field: PrismicMbtiTestQuestionFieldsEnum!): Float
  group(skip: Int, limit: Int, field: PrismicMbtiTestQuestionFieldsEnum!): [PrismicMbtiTestQuestionGroupConnection!]!
}

type PrismicMbtiTestQuestionEdge {
  next: PrismicMbtiTestQuestion
  node: PrismicMbtiTestQuestion!
  previous: PrismicMbtiTestQuestion
}

enum PrismicMbtiTestQuestionFieldsEnum {
  dataRaw
  dataString
  first_publication_date
  href
  url
  lang
  last_publication_date
  tags
  alternate_languages
  alternate_languages___link_type
  alternate_languages___isBroken
  alternate_languages___url
  alternate_languages___target
  alternate_languages___size
  alternate_languages___id
  alternate_languages___type
  alternate_languages___tags
  alternate_languages___lang
  alternate_languages___slug
  alternate_languages___uid
  alternate_languages___raw
  type
  prismicId
  _previewable
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type PrismicMbtiTestQuestionGroupConnection {
  totalCount: Int!
  edges: [PrismicMbtiTestQuestionEdge!]!
  nodes: [PrismicMbtiTestQuestion!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input PrismicMbtiTestQuestionFilterInput {
  dataRaw: JSONQueryOperatorInput
  dataString: StringQueryOperatorInput
  first_publication_date: DateQueryOperatorInput
  href: StringQueryOperatorInput
  url: StringQueryOperatorInput
  lang: StringQueryOperatorInput
  last_publication_date: DateQueryOperatorInput
  tags: StringQueryOperatorInput
  alternate_languages: PrismicLinkTypeFilterListInput
  type: StringQueryOperatorInput
  prismicId: IDQueryOperatorInput
  _previewable: IDQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input PrismicMbtiTestQuestionSortInput {
  fields: [PrismicMbtiTestQuestionFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input PrismicMbtiTestResultDataTypeFilterInput {
  summary: StringQueryOperatorInput
  og_description: StringQueryOperatorInput
  opengraph_image: PrismicImageTypeFilterInput
  comments: PrismicMbtiTestResultCommentsGroupTypeFilterListInput
  thumbnail: PrismicImageTypeFilterInput
  avatar: PrismicImageTypeFilterInput
  tags: PrismicMbtiTestResultTagsGroupTypeFilterListInput
  remarks: PrismicMbtiTestResultRemarksGroupTypeFilterListInput
  relations: PrismicMbtiTestResultRelationsGroupTypeFilterListInput
}

input PrismicImageTypeFilterInput {
  alt: StringQueryOperatorInput
  copyright: StringQueryOperatorInput
  dimensions: PrismicImageDimensionsTypeFilterInput
  url: StringQueryOperatorInput
  fixed: PrismicImageFixedTypeFilterInput
  fluid: PrismicImageFluidTypeFilterInput
  localFile: FileFilterInput
  thumbnails: PrismicImageThumbnailsTypeQueryOperatorInput
}

input PrismicImageDimensionsTypeFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicImageFixedTypeFilterInput {
  base64: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  sizes: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicImageFluidTypeFilterInput {
  base64: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  sizes: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
}

input PrismicImageThumbnailsTypeQueryOperatorInput {
  eq: PrismicImageThumbnailsType
  ne: PrismicImageThumbnailsType
  in: [PrismicImageThumbnailsType]
  nin: [PrismicImageThumbnailsType]
}

input PrismicMbtiTestResultCommentsGroupTypeFilterListInput {
  elemMatch: PrismicMbtiTestResultCommentsGroupTypeFilterInput
}

input PrismicMbtiTestResultCommentsGroupTypeFilterInput {
  text: StringQueryOperatorInput
}

input PrismicMbtiTestResultTagsGroupTypeFilterListInput {
  elemMatch: PrismicMbtiTestResultTagsGroupTypeFilterInput
}

input PrismicMbtiTestResultTagsGroupTypeFilterInput {
  tag_name: StringQueryOperatorInput
}

input PrismicMbtiTestResultRemarksGroupTypeFilterListInput {
  elemMatch: PrismicMbtiTestResultRemarksGroupTypeFilterInput
}

input PrismicMbtiTestResultRemarksGroupTypeFilterInput {
  remark_name: StringQueryOperatorInput
  remark_description: PrismicStructuredTextTypeFilterInput
}

input PrismicMbtiTestResultRelationsGroupTypeFilterListInput {
  elemMatch: PrismicMbtiTestResultRelationsGroupTypeFilterInput
}

input PrismicMbtiTestResultRelationsGroupTypeFilterInput {
  relation_type: StringQueryOperatorInput
  relation_color: StringQueryOperatorInput
  relation_entry: PrismicLinkTypeFilterInput
}

type PrismicMbtiTestResultConnection {
  totalCount: Int!
  edges: [PrismicMbtiTestResultEdge!]!
  nodes: [PrismicMbtiTestResult!]!
  pageInfo: PageInfo!
  distinct(field: PrismicMbtiTestResultFieldsEnum!): [String!]!
  max(field: PrismicMbtiTestResultFieldsEnum!): Float
  min(field: PrismicMbtiTestResultFieldsEnum!): Float
  sum(field: PrismicMbtiTestResultFieldsEnum!): Float
  group(skip: Int, limit: Int, field: PrismicMbtiTestResultFieldsEnum!): [PrismicMbtiTestResultGroupConnection!]!
}

type PrismicMbtiTestResultEdge {
  next: PrismicMbtiTestResult
  node: PrismicMbtiTestResult!
  previous: PrismicMbtiTestResult
}

enum PrismicMbtiTestResultFieldsEnum {
  data___summary
  data___og_description
  data___opengraph_image___alt
  data___opengraph_image___copyright
  data___opengraph_image___dimensions___width
  data___opengraph_image___dimensions___height
  data___opengraph_image___url @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fixed___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___sourceInstanceName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___absolutePath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___relativePath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___extension @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___size @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___prettySize @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___modifiedTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___accessTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___changeTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___birthTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___root @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___dir @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___base @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___ext @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___name @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___relativeDirectory @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___dev @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___mode @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___nlink @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___uid @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___gid @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___rdev @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___ino @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___atimeMs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___mtimeMs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___ctimeMs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___atime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___mtime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___ctime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___birthtime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___birthtimeMs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___blksize @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___blocks @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___url @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___publicURL @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___childrenImageSharp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___thumbnails @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___comments
  data___comments___text
  data___thumbnail___alt
  data___thumbnail___copyright
  data___thumbnail___dimensions___width
  data___thumbnail___dimensions___height
  data___thumbnail___url @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___fixed___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___sourceInstanceName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___absolutePath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___relativePath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___extension @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___size @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___prettySize @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___modifiedTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___accessTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___changeTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___birthTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___root @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___dir @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___base @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___ext @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___name @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___relativeDirectory @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___dev @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___mode @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___nlink @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___uid @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___gid @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___rdev @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___ino @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___atimeMs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___mtimeMs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___ctimeMs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___atime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___mtime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___ctime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___birthtime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___birthtimeMs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___blksize @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___blocks @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___url @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___publicURL @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___childrenImageSharp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___localFile___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___thumbnail___thumbnails @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___alt
  data___avatar___copyright
  data___avatar___dimensions___width
  data___avatar___dimensions___height
  data___avatar___url @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___fixed___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___sourceInstanceName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___absolutePath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___relativePath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___extension @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___size @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___prettySize @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___modifiedTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___accessTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___changeTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___birthTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___root @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___dir @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___base @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___ext @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___name @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___relativeDirectory @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___dev @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___mode @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___nlink @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___uid @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___gid @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___rdev @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___ino @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___atimeMs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___mtimeMs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___ctimeMs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___atime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___mtime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___ctime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___birthtime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___birthtimeMs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___blksize @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___blocks @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___url @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___publicURL @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___childrenImageSharp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___localFile___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___avatar___thumbnails @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___tags
  data___tags___tag_name
  data___remarks
  data___remarks___remark_name
  data___remarks___remark_description___html
  data___remarks___remark_description___text
  data___remarks___remark_description___raw
  data___relations
  data___relations___relation_type
  data___relations___relation_color
  data___relations___relation_entry___link_type
  data___relations___relation_entry___isBroken
  data___relations___relation_entry___url
  data___relations___relation_entry___target
  data___relations___relation_entry___size
  data___relations___relation_entry___id
  data___relations___relation_entry___type
  data___relations___relation_entry___tags
  data___relations___relation_entry___lang
  data___relations___relation_entry___slug
  data___relations___relation_entry___uid
  data___relations___relation_entry___raw
  dataRaw
  dataString
  first_publication_date
  href
  url
  lang
  last_publication_date
  tags
  alternate_languages
  alternate_languages___link_type
  alternate_languages___isBroken
  alternate_languages___url
  alternate_languages___target
  alternate_languages___size
  alternate_languages___id
  alternate_languages___type
  alternate_languages___tags
  alternate_languages___lang
  alternate_languages___slug
  alternate_languages___uid
  alternate_languages___raw
  type
  prismicId
  _previewable
  uid
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type PrismicMbtiTestResultGroupConnection {
  totalCount: Int!
  edges: [PrismicMbtiTestResultEdge!]!
  nodes: [PrismicMbtiTestResult!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input PrismicMbtiTestResultFilterInput {
  data: PrismicMbtiTestResultDataTypeFilterInput
  dataRaw: JSONQueryOperatorInput
  dataString: StringQueryOperatorInput
  first_publication_date: DateQueryOperatorInput
  href: StringQueryOperatorInput
  url: StringQueryOperatorInput
  lang: StringQueryOperatorInput
  last_publication_date: DateQueryOperatorInput
  tags: StringQueryOperatorInput
  alternate_languages: PrismicLinkTypeFilterListInput
  type: StringQueryOperatorInput
  prismicId: IDQueryOperatorInput
  _previewable: IDQueryOperatorInput
  uid: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input PrismicMbtiTestResultSortInput {
  fields: [PrismicMbtiTestResultFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input PrismicMbtiIntroDataTypeFilterInput {
  title: StringQueryOperatorInput
  description: StringQueryOperatorInput
  opengraph_image: PrismicImageTypeFilterInput
}

type PrismicMbtiIntroConnection {
  totalCount: Int!
  edges: [PrismicMbtiIntroEdge!]!
  nodes: [PrismicMbtiIntro!]!
  pageInfo: PageInfo!
  distinct(field: PrismicMbtiIntroFieldsEnum!): [String!]!
  max(field: PrismicMbtiIntroFieldsEnum!): Float
  min(field: PrismicMbtiIntroFieldsEnum!): Float
  sum(field: PrismicMbtiIntroFieldsEnum!): Float
  group(skip: Int, limit: Int, field: PrismicMbtiIntroFieldsEnum!): [PrismicMbtiIntroGroupConnection!]!
}

type PrismicMbtiIntroEdge {
  next: PrismicMbtiIntro
  node: PrismicMbtiIntro!
  previous: PrismicMbtiIntro
}

enum PrismicMbtiIntroFieldsEnum {
  data___title
  data___description
  data___opengraph_image___alt
  data___opengraph_image___copyright
  data___opengraph_image___dimensions___width
  data___opengraph_image___dimensions___height
  data___opengraph_image___url @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fixed___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___sourceInstanceName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___absolutePath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___relativePath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___extension @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___size @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___prettySize @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___modifiedTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___accessTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___changeTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___birthTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___root @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___dir @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___base @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___ext @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___name @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___relativeDirectory @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___dev @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___mode @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___nlink @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___uid @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___gid @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___rdev @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___ino @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___atimeMs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___mtimeMs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___ctimeMs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___atime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___mtime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___ctime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___birthtime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___birthtimeMs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___blksize @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___blocks @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___url @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___publicURL @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___childrenImageSharp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___localFile___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  data___opengraph_image___thumbnails @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  dataRaw
  dataString
  first_publication_date
  href
  url
  lang
  last_publication_date
  tags
  alternate_languages
  alternate_languages___link_type
  alternate_languages___isBroken
  alternate_languages___url
  alternate_languages___target
  alternate_languages___size
  alternate_languages___id
  alternate_languages___type
  alternate_languages___tags
  alternate_languages___lang
  alternate_languages___slug
  alternate_languages___uid
  alternate_languages___raw
  type
  prismicId
  _previewable
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type PrismicMbtiIntroGroupConnection {
  totalCount: Int!
  edges: [PrismicMbtiIntroEdge!]!
  nodes: [PrismicMbtiIntro!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input PrismicMbtiIntroFilterInput {
  data: PrismicMbtiIntroDataTypeFilterInput
  dataRaw: JSONQueryOperatorInput
  dataString: StringQueryOperatorInput
  first_publication_date: DateQueryOperatorInput
  href: StringQueryOperatorInput
  url: StringQueryOperatorInput
  lang: StringQueryOperatorInput
  last_publication_date: DateQueryOperatorInput
  tags: StringQueryOperatorInput
  alternate_languages: PrismicLinkTypeFilterListInput
  type: StringQueryOperatorInput
  prismicId: IDQueryOperatorInput
  _previewable: IDQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input PrismicMbtiIntroSortInput {
  fields: [PrismicMbtiIntroFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input PrismicTermsAndConditionsDataFilterInput {
  description: StringQueryOperatorInput
  revision_date: DateQueryOperatorInput
  content: PrismicTermsAndConditionsDataContentFilterListInput
}

input PrismicTermsAndConditionsDataContentFilterListInput {
  elemMatch: PrismicTermsAndConditionsDataContentFilterInput
}

input PrismicTermsAndConditionsDataContentFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
  spans: PrismicTermsAndConditionsDataContentSpansFilterListInput
}

input PrismicTermsAndConditionsDataContentSpansFilterListInput {
  elemMatch: PrismicTermsAndConditionsDataContentSpansFilterInput
}

input PrismicTermsAndConditionsDataContentSpansFilterInput {
  start: IntQueryOperatorInput
  end: IntQueryOperatorInput
  type: StringQueryOperatorInput
  data: PrismicTermsAndConditionsDataContentSpansDataFilterInput
}

input PrismicTermsAndConditionsDataContentSpansDataFilterInput {
  link_type: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input PrismicTermsAndConditionsDataRawFilterInput {
  description: StringQueryOperatorInput
  revision_date: DateQueryOperatorInput
  content: PrismicTermsAndConditionsDataRawContentFilterListInput
}

input PrismicTermsAndConditionsDataRawContentFilterListInput {
  elemMatch: PrismicTermsAndConditionsDataRawContentFilterInput
}

input PrismicTermsAndConditionsDataRawContentFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
  spans: PrismicTermsAndConditionsDataRawContentSpansFilterListInput
}

input PrismicTermsAndConditionsDataRawContentSpansFilterListInput {
  elemMatch: PrismicTermsAndConditionsDataRawContentSpansFilterInput
}

input PrismicTermsAndConditionsDataRawContentSpansFilterInput {
  start: IntQueryOperatorInput
  end: IntQueryOperatorInput
  type: StringQueryOperatorInput
  data: PrismicTermsAndConditionsDataRawContentSpansDataFilterInput
}

input PrismicTermsAndConditionsDataRawContentSpansDataFilterInput {
  link_type: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

type PrismicTermsAndConditionsConnection {
  totalCount: Int!
  edges: [PrismicTermsAndConditionsEdge!]!
  nodes: [PrismicTermsAndConditions!]!
  pageInfo: PageInfo!
  distinct(field: PrismicTermsAndConditionsFieldsEnum!): [String!]!
  max(field: PrismicTermsAndConditionsFieldsEnum!): Float
  min(field: PrismicTermsAndConditionsFieldsEnum!): Float
  sum(field: PrismicTermsAndConditionsFieldsEnum!): Float
  group(skip: Int, limit: Int, field: PrismicTermsAndConditionsFieldsEnum!): [PrismicTermsAndConditionsGroupConnection!]!
}

type PrismicTermsAndConditionsEdge {
  next: PrismicTermsAndConditions
  node: PrismicTermsAndConditions!
  previous: PrismicTermsAndConditions
}

enum PrismicTermsAndConditionsFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  uid
  type
  href
  tags
  first_publication_date
  last_publication_date
  slugs
  lang
  data___description
  data___revision_date
  data___content
  data___content___type
  data___content___text
  data___content___spans
  data___content___spans___start
  data___content___spans___end
  data___content___spans___type
  prismicId
  dataString
  dataRaw___description
  dataRaw___revision_date
  dataRaw___content
  dataRaw___content___type
  dataRaw___content___text
  dataRaw___content___spans
  dataRaw___content___spans___start
  dataRaw___content___spans___end
  dataRaw___content___spans___type
  _previewable
}

type PrismicTermsAndConditionsGroupConnection {
  totalCount: Int!
  edges: [PrismicTermsAndConditionsEdge!]!
  nodes: [PrismicTermsAndConditions!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input PrismicTermsAndConditionsFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  uid: StringQueryOperatorInput
  type: StringQueryOperatorInput
  href: StringQueryOperatorInput
  tags: StringQueryOperatorInput
  first_publication_date: DateQueryOperatorInput
  last_publication_date: DateQueryOperatorInput
  slugs: StringQueryOperatorInput
  lang: StringQueryOperatorInput
  data: PrismicTermsAndConditionsDataFilterInput
  prismicId: StringQueryOperatorInput
  dataString: StringQueryOperatorInput
  dataRaw: PrismicTermsAndConditionsDataRawFilterInput
  _previewable: StringQueryOperatorInput
}

input PrismicTermsAndConditionsSortInput {
  fields: [PrismicTermsAndConditionsFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input PrismicFaqDataFilterInput {
  entries: PrismicFaqDataEntriesFilterListInput
}

input PrismicFaqDataEntriesFilterListInput {
  elemMatch: PrismicFaqDataEntriesFilterInput
}

input PrismicFaqDataEntriesFilterInput {
  question: StringQueryOperatorInput
  answer: PrismicFaqDataEntriesAnswerFilterListInput
}

input PrismicFaqDataEntriesAnswerFilterListInput {
  elemMatch: PrismicFaqDataEntriesAnswerFilterInput
}

input PrismicFaqDataEntriesAnswerFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
  spans: PrismicFaqDataEntriesAnswerSpansFilterListInput
}

input PrismicFaqDataEntriesAnswerSpansFilterListInput {
  elemMatch: PrismicFaqDataEntriesAnswerSpansFilterInput
}

input PrismicFaqDataEntriesAnswerSpansFilterInput {
  start: IntQueryOperatorInput
  end: IntQueryOperatorInput
  type: StringQueryOperatorInput
  data: PrismicFaqDataEntriesAnswerSpansDataFilterInput
}

input PrismicFaqDataEntriesAnswerSpansDataFilterInput {
  link_type: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input PrismicFaqDataRawFilterInput {
  entries: PrismicFaqDataRawEntriesFilterListInput
}

input PrismicFaqDataRawEntriesFilterListInput {
  elemMatch: PrismicFaqDataRawEntriesFilterInput
}

input PrismicFaqDataRawEntriesFilterInput {
  question: StringQueryOperatorInput
  answer: PrismicFaqDataRawEntriesAnswerFilterListInput
}

input PrismicFaqDataRawEntriesAnswerFilterListInput {
  elemMatch: PrismicFaqDataRawEntriesAnswerFilterInput
}

input PrismicFaqDataRawEntriesAnswerFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
  spans: PrismicFaqDataRawEntriesAnswerSpansFilterListInput
}

input PrismicFaqDataRawEntriesAnswerSpansFilterListInput {
  elemMatch: PrismicFaqDataRawEntriesAnswerSpansFilterInput
}

input PrismicFaqDataRawEntriesAnswerSpansFilterInput {
  start: IntQueryOperatorInput
  end: IntQueryOperatorInput
  type: StringQueryOperatorInput
  data: PrismicFaqDataRawEntriesAnswerSpansDataFilterInput
}

input PrismicFaqDataRawEntriesAnswerSpansDataFilterInput {
  link_type: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

type PrismicFaqConnection {
  totalCount: Int!
  edges: [PrismicFaqEdge!]!
  nodes: [PrismicFaq!]!
  pageInfo: PageInfo!
  distinct(field: PrismicFaqFieldsEnum!): [String!]!
  max(field: PrismicFaqFieldsEnum!): Float
  min(field: PrismicFaqFieldsEnum!): Float
  sum(field: PrismicFaqFieldsEnum!): Float
  group(skip: Int, limit: Int, field: PrismicFaqFieldsEnum!): [PrismicFaqGroupConnection!]!
}

type PrismicFaqEdge {
  next: PrismicFaq
  node: PrismicFaq!
  previous: PrismicFaq
}

enum PrismicFaqFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  uid
  type
  href
  tags
  first_publication_date
  last_publication_date
  slugs
  lang
  data___entries
  data___entries___question
  data___entries___answer
  data___entries___answer___type
  data___entries___answer___text
  data___entries___answer___spans
  prismicId
  dataString
  dataRaw___entries
  dataRaw___entries___question
  dataRaw___entries___answer
  dataRaw___entries___answer___type
  dataRaw___entries___answer___text
  dataRaw___entries___answer___spans
  _previewable
}

type PrismicFaqGroupConnection {
  totalCount: Int!
  edges: [PrismicFaqEdge!]!
  nodes: [PrismicFaq!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input PrismicFaqFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  uid: StringQueryOperatorInput
  type: StringQueryOperatorInput
  href: StringQueryOperatorInput
  tags: StringQueryOperatorInput
  first_publication_date: DateQueryOperatorInput
  last_publication_date: DateQueryOperatorInput
  slugs: StringQueryOperatorInput
  lang: StringQueryOperatorInput
  data: PrismicFaqDataFilterInput
  prismicId: StringQueryOperatorInput
  dataString: StringQueryOperatorInput
  dataRaw: PrismicFaqDataRawFilterInput
  _previewable: StringQueryOperatorInput
}

input PrismicFaqSortInput {
  fields: [PrismicFaqFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input PrismicSiteNavigationDataFilterInput {
  header_entries: PrismicSiteNavigationDataHeader_entriesFilterListInput
  sns_profiles: PrismicSiteNavigationDataSns_profilesFilterListInput
}

input PrismicSiteNavigationDataHeader_entriesFilterListInput {
  elemMatch: PrismicSiteNavigationDataHeader_entriesFilterInput
}

input PrismicSiteNavigationDataHeader_entriesFilterInput {
  display_text: StringQueryOperatorInput
  link: PrismicSiteNavigationDataHeader_entriesLinkFilterInput
}

input PrismicSiteNavigationDataHeader_entriesLinkFilterInput {
  link_type: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input PrismicSiteNavigationDataSns_profilesFilterListInput {
  elemMatch: PrismicSiteNavigationDataSns_profilesFilterInput
}

input PrismicSiteNavigationDataSns_profilesFilterInput {
  service: StringQueryOperatorInput
  link: PrismicSiteNavigationDataSns_profilesLinkFilterInput
}

input PrismicSiteNavigationDataSns_profilesLinkFilterInput {
  link_type: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input PrismicSiteNavigationDataRawFilterInput {
  header_entries: PrismicSiteNavigationDataRawHeader_entriesFilterListInput
  sns_profiles: PrismicSiteNavigationDataRawSns_profilesFilterListInput
}

input PrismicSiteNavigationDataRawHeader_entriesFilterListInput {
  elemMatch: PrismicSiteNavigationDataRawHeader_entriesFilterInput
}

input PrismicSiteNavigationDataRawHeader_entriesFilterInput {
  display_text: StringQueryOperatorInput
  link: PrismicSiteNavigationDataRawHeader_entriesLinkFilterInput
}

input PrismicSiteNavigationDataRawHeader_entriesLinkFilterInput {
  link_type: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input PrismicSiteNavigationDataRawSns_profilesFilterListInput {
  elemMatch: PrismicSiteNavigationDataRawSns_profilesFilterInput
}

input PrismicSiteNavigationDataRawSns_profilesFilterInput {
  service: StringQueryOperatorInput
  link: PrismicSiteNavigationDataRawSns_profilesLinkFilterInput
}

input PrismicSiteNavigationDataRawSns_profilesLinkFilterInput {
  link_type: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

type PrismicSiteNavigationConnection {
  totalCount: Int!
  edges: [PrismicSiteNavigationEdge!]!
  nodes: [PrismicSiteNavigation!]!
  pageInfo: PageInfo!
  distinct(field: PrismicSiteNavigationFieldsEnum!): [String!]!
  max(field: PrismicSiteNavigationFieldsEnum!): Float
  min(field: PrismicSiteNavigationFieldsEnum!): Float
  sum(field: PrismicSiteNavigationFieldsEnum!): Float
  group(skip: Int, limit: Int, field: PrismicSiteNavigationFieldsEnum!): [PrismicSiteNavigationGroupConnection!]!
}

type PrismicSiteNavigationEdge {
  next: PrismicSiteNavigation
  node: PrismicSiteNavigation!
  previous: PrismicSiteNavigation
}

enum PrismicSiteNavigationFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  uid
  type
  href
  tags
  first_publication_date
  last_publication_date
  slugs
  lang
  data___header_entries
  data___header_entries___display_text
  data___header_entries___link___link_type
  data___header_entries___link___url
  data___sns_profiles
  data___sns_profiles___service
  data___sns_profiles___link___link_type
  data___sns_profiles___link___url
  prismicId
  dataString
  dataRaw___header_entries
  dataRaw___header_entries___display_text
  dataRaw___header_entries___link___link_type
  dataRaw___header_entries___link___url
  dataRaw___sns_profiles
  dataRaw___sns_profiles___service
  dataRaw___sns_profiles___link___link_type
  dataRaw___sns_profiles___link___url
  _previewable
}

type PrismicSiteNavigationGroupConnection {
  totalCount: Int!
  edges: [PrismicSiteNavigationEdge!]!
  nodes: [PrismicSiteNavigation!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input PrismicSiteNavigationFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  uid: StringQueryOperatorInput
  type: StringQueryOperatorInput
  href: StringQueryOperatorInput
  tags: StringQueryOperatorInput
  first_publication_date: DateQueryOperatorInput
  last_publication_date: DateQueryOperatorInput
  slugs: StringQueryOperatorInput
  lang: StringQueryOperatorInput
  data: PrismicSiteNavigationDataFilterInput
  prismicId: StringQueryOperatorInput
  dataString: StringQueryOperatorInput
  dataRaw: PrismicSiteNavigationDataRawFilterInput
  _previewable: StringQueryOperatorInput
}

input PrismicSiteNavigationSortInput {
  fields: [PrismicSiteNavigationFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input PrismicGlobalContentsAlternate_languagesFilterListInput {
  elemMatch: PrismicGlobalContentsAlternate_languagesFilterInput
}

input PrismicGlobalContentsAlternate_languagesFilterInput {
  id: StringQueryOperatorInput
  type: StringQueryOperatorInput
  lang: StringQueryOperatorInput
}

input PrismicGlobalContentsDataFilterInput {
  main_page_title: StringQueryOperatorInput
  main_page_description: StringQueryOperatorInput
  main_opengraph_image_link: StringQueryOperatorInput
  google_play_link: StringQueryOperatorInput
  app_store_link: StringQueryOperatorInput
  popular_items_api: StringQueryOperatorInput
  body: PrismicGlobalContentsDataBodyFilterListInput
  about_page_title: StringQueryOperatorInput
  about_page_description: StringQueryOperatorInput
  about_opengraph_image_link: StringQueryOperatorInput
  about_title: PrismicGlobalContentsDataAbout_titleFilterListInput
  about_background_image: PrismicGlobalContentsDataAbout_background_imageFilterInput
  body1: PrismicGlobalContentsDataBody1FilterListInput
}

input PrismicGlobalContentsDataBodyFilterListInput {
  elemMatch: PrismicGlobalContentsDataBodyFilterInput
}

input PrismicGlobalContentsDataBodyFilterInput {
  slice_type: StringQueryOperatorInput
  items: PrismicGlobalContentsDataBodyItemsFilterListInput
  primary: PrismicGlobalContentsDataBodyPrimaryFilterInput
}

input PrismicGlobalContentsDataBodyItemsFilterListInput {
  elemMatch: PrismicGlobalContentsDataBodyItemsFilterInput
}

input PrismicGlobalContentsDataBodyItemsFilterInput {
  icon: StringQueryOperatorInput
  text: StringQueryOperatorInput
  user_name: StringQueryOperatorInput
  user_region: StringQueryOperatorInput
  content: PrismicGlobalContentsDataBodyItemsContentFilterListInput
  text_highlight_color: StringQueryOperatorInput
}

input PrismicGlobalContentsDataBodyItemsContentFilterListInput {
  elemMatch: PrismicGlobalContentsDataBodyItemsContentFilterInput
}

input PrismicGlobalContentsDataBodyItemsContentFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
  spans: PrismicGlobalContentsDataBodyItemsContentSpansFilterListInput
}

input PrismicGlobalContentsDataBodyItemsContentSpansFilterListInput {
  elemMatch: PrismicGlobalContentsDataBodyItemsContentSpansFilterInput
}

input PrismicGlobalContentsDataBodyItemsContentSpansFilterInput {
  start: IntQueryOperatorInput
  end: IntQueryOperatorInput
  type: StringQueryOperatorInput
}

input PrismicGlobalContentsDataBodyPrimaryFilterInput {
  title: PrismicGlobalContentsDataBodyPrimaryTitleFilterListInput
  background_image: PrismicGlobalContentsDataBodyPrimaryBackground_imageFilterInput
  side_image: PrismicGlobalContentsDataBodyPrimarySide_imageFilterInput
  more_button: StringQueryOperatorInput
  top_icon: StringQueryOperatorInput
  top_text: PrismicGlobalContentsDataBodyPrimaryTop_textFilterListInput
  text: PrismicGlobalContentsDataBodyPrimaryTextFilterListInput
  background_color: StringQueryOperatorInput
  text_highlight_color: StringQueryOperatorInput
  phone_mockup_component: StringQueryOperatorInput
  text_on_right: BooleanQueryOperatorInput
  image: PrismicGlobalContentsDataBodyPrimaryImageFilterInput
}

input PrismicGlobalContentsDataBodyPrimaryTitleFilterListInput {
  elemMatch: PrismicGlobalContentsDataBodyPrimaryTitleFilterInput
}

input PrismicGlobalContentsDataBodyPrimaryTitleFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicGlobalContentsDataBodyPrimaryBackground_imageFilterInput {
  dimensions: PrismicGlobalContentsDataBodyPrimaryBackground_imageDimensionsFilterInput
  alt: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input PrismicGlobalContentsDataBodyPrimaryBackground_imageDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataBodyPrimarySide_imageFilterInput {
  dimensions: PrismicGlobalContentsDataBodyPrimarySide_imageDimensionsFilterInput
  alt: StringQueryOperatorInput
  url: StringQueryOperatorInput
  mobile: PrismicGlobalContentsDataBodyPrimarySide_imageMobileFilterInput
}

input PrismicGlobalContentsDataBodyPrimarySide_imageDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataBodyPrimarySide_imageMobileFilterInput {
  dimensions: PrismicGlobalContentsDataBodyPrimarySide_imageMobileDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicGlobalContentsDataBodyPrimarySide_imageMobileDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataBodyPrimaryTop_textFilterListInput {
  elemMatch: PrismicGlobalContentsDataBodyPrimaryTop_textFilterInput
}

input PrismicGlobalContentsDataBodyPrimaryTop_textFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicGlobalContentsDataBodyPrimaryTextFilterListInput {
  elemMatch: PrismicGlobalContentsDataBodyPrimaryTextFilterInput
}

input PrismicGlobalContentsDataBodyPrimaryTextFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
  spans: PrismicGlobalContentsDataBodyPrimaryTextSpansFilterListInput
}

input PrismicGlobalContentsDataBodyPrimaryTextSpansFilterListInput {
  elemMatch: PrismicGlobalContentsDataBodyPrimaryTextSpansFilterInput
}

input PrismicGlobalContentsDataBodyPrimaryTextSpansFilterInput {
  start: IntQueryOperatorInput
  end: IntQueryOperatorInput
  type: StringQueryOperatorInput
}

input PrismicGlobalContentsDataBodyPrimaryImageFilterInput {
  dimensions: PrismicGlobalContentsDataBodyPrimaryImageDimensionsFilterInput
  alt: StringQueryOperatorInput
  url: StringQueryOperatorInput
  mobile: PrismicGlobalContentsDataBodyPrimaryImageMobileFilterInput
  test: PrismicGlobalContentsDataBodyPrimaryImageTestFilterInput
}

input PrismicGlobalContentsDataBodyPrimaryImageDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataBodyPrimaryImageMobileFilterInput {
  dimensions: PrismicGlobalContentsDataBodyPrimaryImageMobileDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicGlobalContentsDataBodyPrimaryImageMobileDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataBodyPrimaryImageTestFilterInput {
  dimensions: PrismicGlobalContentsDataBodyPrimaryImageTestDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicGlobalContentsDataBodyPrimaryImageTestDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataAbout_titleFilterListInput {
  elemMatch: PrismicGlobalContentsDataAbout_titleFilterInput
}

input PrismicGlobalContentsDataAbout_titleFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicGlobalContentsDataAbout_background_imageFilterInput {
  dimensions: PrismicGlobalContentsDataAbout_background_imageDimensionsFilterInput
  alt: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input PrismicGlobalContentsDataAbout_background_imageDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataBody1FilterListInput {
  elemMatch: PrismicGlobalContentsDataBody1FilterInput
}

input PrismicGlobalContentsDataBody1FilterInput {
  slice_type: StringQueryOperatorInput
  items: PrismicGlobalContentsDataBody1ItemsFilterListInput
  primary: PrismicGlobalContentsDataBody1PrimaryFilterInput
}

input PrismicGlobalContentsDataBody1ItemsFilterListInput {
  elemMatch: PrismicGlobalContentsDataBody1ItemsFilterInput
}

input PrismicGlobalContentsDataBody1ItemsFilterInput {
  image: PrismicGlobalContentsDataBody1ItemsImageFilterInput
  text: StringQueryOperatorInput
  link: PrismicGlobalContentsDataBody1ItemsLinkFilterInput
  date: DateQueryOperatorInput
}

input PrismicGlobalContentsDataBody1ItemsImageFilterInput {
  dimensions: PrismicGlobalContentsDataBody1ItemsImageDimensionsFilterInput
  alt: StringQueryOperatorInput
  url: StringQueryOperatorInput
  media: PrismicGlobalContentsDataBody1ItemsImageMediaFilterInput
  mobile: PrismicGlobalContentsDataBody1ItemsImageMobileFilterInput
}

input PrismicGlobalContentsDataBody1ItemsImageDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataBody1ItemsImageMediaFilterInput {
  dimensions: PrismicGlobalContentsDataBody1ItemsImageMediaDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicGlobalContentsDataBody1ItemsImageMediaDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataBody1ItemsImageMobileFilterInput {
  dimensions: PrismicGlobalContentsDataBody1ItemsImageMobileDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicGlobalContentsDataBody1ItemsImageMobileDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataBody1ItemsLinkFilterInput {
  link_type: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input PrismicGlobalContentsDataBody1PrimaryFilterInput {
  subtitle: PrismicGlobalContentsDataBody1PrimarySubtitleFilterListInput
  text: PrismicGlobalContentsDataBody1PrimaryTextFilterListInput
}

input PrismicGlobalContentsDataBody1PrimarySubtitleFilterListInput {
  elemMatch: PrismicGlobalContentsDataBody1PrimarySubtitleFilterInput
}

input PrismicGlobalContentsDataBody1PrimarySubtitleFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicGlobalContentsDataBody1PrimaryTextFilterListInput {
  elemMatch: PrismicGlobalContentsDataBody1PrimaryTextFilterInput
}

input PrismicGlobalContentsDataBody1PrimaryTextFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
  spans: PrismicGlobalContentsDataBody1PrimaryTextSpansFilterListInput
}

input PrismicGlobalContentsDataBody1PrimaryTextSpansFilterListInput {
  elemMatch: PrismicGlobalContentsDataBody1PrimaryTextSpansFilterInput
}

input PrismicGlobalContentsDataBody1PrimaryTextSpansFilterInput {
  start: IntQueryOperatorInput
  end: IntQueryOperatorInput
  type: StringQueryOperatorInput
  data: PrismicGlobalContentsDataBody1PrimaryTextSpansDataFilterInput
}

input PrismicGlobalContentsDataBody1PrimaryTextSpansDataFilterInput {
  link_type: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input PrismicGlobalContentsDataRawFilterInput {
  main_page_title: StringQueryOperatorInput
  main_page_description: StringQueryOperatorInput
  main_opengraph_image_link: StringQueryOperatorInput
  google_play_link: StringQueryOperatorInput
  app_store_link: StringQueryOperatorInput
  popular_items_api: StringQueryOperatorInput
  body: PrismicGlobalContentsDataRawBodyFilterListInput
  about_page_title: StringQueryOperatorInput
  about_page_description: StringQueryOperatorInput
  about_opengraph_image_link: StringQueryOperatorInput
  about_title: PrismicGlobalContentsDataRawAbout_titleFilterListInput
  about_background_image: PrismicGlobalContentsDataRawAbout_background_imageFilterInput
  body1: PrismicGlobalContentsDataRawBody1FilterListInput
}

input PrismicGlobalContentsDataRawBodyFilterListInput {
  elemMatch: PrismicGlobalContentsDataRawBodyFilterInput
}

input PrismicGlobalContentsDataRawBodyFilterInput {
  slice_type: StringQueryOperatorInput
  items: PrismicGlobalContentsDataRawBodyItemsFilterListInput
  primary: PrismicGlobalContentsDataRawBodyPrimaryFilterInput
}

input PrismicGlobalContentsDataRawBodyItemsFilterListInput {
  elemMatch: PrismicGlobalContentsDataRawBodyItemsFilterInput
}

input PrismicGlobalContentsDataRawBodyItemsFilterInput {
  icon: StringQueryOperatorInput
  text: StringQueryOperatorInput
  user_name: StringQueryOperatorInput
  user_region: StringQueryOperatorInput
  content: PrismicGlobalContentsDataRawBodyItemsContentFilterListInput
  text_highlight_color: StringQueryOperatorInput
}

input PrismicGlobalContentsDataRawBodyItemsContentFilterListInput {
  elemMatch: PrismicGlobalContentsDataRawBodyItemsContentFilterInput
}

input PrismicGlobalContentsDataRawBodyItemsContentFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
  spans: PrismicGlobalContentsDataRawBodyItemsContentSpansFilterListInput
}

input PrismicGlobalContentsDataRawBodyItemsContentSpansFilterListInput {
  elemMatch: PrismicGlobalContentsDataRawBodyItemsContentSpansFilterInput
}

input PrismicGlobalContentsDataRawBodyItemsContentSpansFilterInput {
  start: IntQueryOperatorInput
  end: IntQueryOperatorInput
  type: StringQueryOperatorInput
}

input PrismicGlobalContentsDataRawBodyPrimaryFilterInput {
  title: PrismicGlobalContentsDataRawBodyPrimaryTitleFilterListInput
  background_image: PrismicGlobalContentsDataRawBodyPrimaryBackground_imageFilterInput
  side_image: PrismicGlobalContentsDataRawBodyPrimarySide_imageFilterInput
  more_button: StringQueryOperatorInput
  top_icon: StringQueryOperatorInput
  top_text: PrismicGlobalContentsDataRawBodyPrimaryTop_textFilterListInput
  text: PrismicGlobalContentsDataRawBodyPrimaryTextFilterListInput
  background_color: StringQueryOperatorInput
  text_highlight_color: StringQueryOperatorInput
  phone_mockup_component: StringQueryOperatorInput
  text_on_right: BooleanQueryOperatorInput
  image: PrismicGlobalContentsDataRawBodyPrimaryImageFilterInput
}

input PrismicGlobalContentsDataRawBodyPrimaryTitleFilterListInput {
  elemMatch: PrismicGlobalContentsDataRawBodyPrimaryTitleFilterInput
}

input PrismicGlobalContentsDataRawBodyPrimaryTitleFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicGlobalContentsDataRawBodyPrimaryBackground_imageFilterInput {
  dimensions: PrismicGlobalContentsDataRawBodyPrimaryBackground_imageDimensionsFilterInput
  alt: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input PrismicGlobalContentsDataRawBodyPrimaryBackground_imageDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataRawBodyPrimarySide_imageFilterInput {
  dimensions: PrismicGlobalContentsDataRawBodyPrimarySide_imageDimensionsFilterInput
  alt: StringQueryOperatorInput
  url: StringQueryOperatorInput
  mobile: PrismicGlobalContentsDataRawBodyPrimarySide_imageMobileFilterInput
}

input PrismicGlobalContentsDataRawBodyPrimarySide_imageDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataRawBodyPrimarySide_imageMobileFilterInput {
  dimensions: PrismicGlobalContentsDataRawBodyPrimarySide_imageMobileDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicGlobalContentsDataRawBodyPrimarySide_imageMobileDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataRawBodyPrimaryTop_textFilterListInput {
  elemMatch: PrismicGlobalContentsDataRawBodyPrimaryTop_textFilterInput
}

input PrismicGlobalContentsDataRawBodyPrimaryTop_textFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicGlobalContentsDataRawBodyPrimaryTextFilterListInput {
  elemMatch: PrismicGlobalContentsDataRawBodyPrimaryTextFilterInput
}

input PrismicGlobalContentsDataRawBodyPrimaryTextFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
  spans: PrismicGlobalContentsDataRawBodyPrimaryTextSpansFilterListInput
}

input PrismicGlobalContentsDataRawBodyPrimaryTextSpansFilterListInput {
  elemMatch: PrismicGlobalContentsDataRawBodyPrimaryTextSpansFilterInput
}

input PrismicGlobalContentsDataRawBodyPrimaryTextSpansFilterInput {
  start: IntQueryOperatorInput
  end: IntQueryOperatorInput
  type: StringQueryOperatorInput
}

input PrismicGlobalContentsDataRawBodyPrimaryImageFilterInput {
  dimensions: PrismicGlobalContentsDataRawBodyPrimaryImageDimensionsFilterInput
  alt: StringQueryOperatorInput
  url: StringQueryOperatorInput
  mobile: PrismicGlobalContentsDataRawBodyPrimaryImageMobileFilterInput
  test: PrismicGlobalContentsDataRawBodyPrimaryImageTestFilterInput
}

input PrismicGlobalContentsDataRawBodyPrimaryImageDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataRawBodyPrimaryImageMobileFilterInput {
  dimensions: PrismicGlobalContentsDataRawBodyPrimaryImageMobileDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicGlobalContentsDataRawBodyPrimaryImageMobileDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataRawBodyPrimaryImageTestFilterInput {
  dimensions: PrismicGlobalContentsDataRawBodyPrimaryImageTestDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicGlobalContentsDataRawBodyPrimaryImageTestDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataRawAbout_titleFilterListInput {
  elemMatch: PrismicGlobalContentsDataRawAbout_titleFilterInput
}

input PrismicGlobalContentsDataRawAbout_titleFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicGlobalContentsDataRawAbout_background_imageFilterInput {
  dimensions: PrismicGlobalContentsDataRawAbout_background_imageDimensionsFilterInput
  alt: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input PrismicGlobalContentsDataRawAbout_background_imageDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataRawBody1FilterListInput {
  elemMatch: PrismicGlobalContentsDataRawBody1FilterInput
}

input PrismicGlobalContentsDataRawBody1FilterInput {
  slice_type: StringQueryOperatorInput
  items: PrismicGlobalContentsDataRawBody1ItemsFilterListInput
  primary: PrismicGlobalContentsDataRawBody1PrimaryFilterInput
}

input PrismicGlobalContentsDataRawBody1ItemsFilterListInput {
  elemMatch: PrismicGlobalContentsDataRawBody1ItemsFilterInput
}

input PrismicGlobalContentsDataRawBody1ItemsFilterInput {
  image: PrismicGlobalContentsDataRawBody1ItemsImageFilterInput
  text: StringQueryOperatorInput
  link: PrismicGlobalContentsDataRawBody1ItemsLinkFilterInput
  date: DateQueryOperatorInput
}

input PrismicGlobalContentsDataRawBody1ItemsImageFilterInput {
  dimensions: PrismicGlobalContentsDataRawBody1ItemsImageDimensionsFilterInput
  alt: StringQueryOperatorInput
  url: StringQueryOperatorInput
  media: PrismicGlobalContentsDataRawBody1ItemsImageMediaFilterInput
  mobile: PrismicGlobalContentsDataRawBody1ItemsImageMobileFilterInput
}

input PrismicGlobalContentsDataRawBody1ItemsImageDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataRawBody1ItemsImageMediaFilterInput {
  dimensions: PrismicGlobalContentsDataRawBody1ItemsImageMediaDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicGlobalContentsDataRawBody1ItemsImageMediaDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataRawBody1ItemsImageMobileFilterInput {
  dimensions: PrismicGlobalContentsDataRawBody1ItemsImageMobileDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicGlobalContentsDataRawBody1ItemsImageMobileDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicGlobalContentsDataRawBody1ItemsLinkFilterInput {
  link_type: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input PrismicGlobalContentsDataRawBody1PrimaryFilterInput {
  subtitle: PrismicGlobalContentsDataRawBody1PrimarySubtitleFilterListInput
  text: PrismicGlobalContentsDataRawBody1PrimaryTextFilterListInput
}

input PrismicGlobalContentsDataRawBody1PrimarySubtitleFilterListInput {
  elemMatch: PrismicGlobalContentsDataRawBody1PrimarySubtitleFilterInput
}

input PrismicGlobalContentsDataRawBody1PrimarySubtitleFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicGlobalContentsDataRawBody1PrimaryTextFilterListInput {
  elemMatch: PrismicGlobalContentsDataRawBody1PrimaryTextFilterInput
}

input PrismicGlobalContentsDataRawBody1PrimaryTextFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
  spans: PrismicGlobalContentsDataRawBody1PrimaryTextSpansFilterListInput
}

input PrismicGlobalContentsDataRawBody1PrimaryTextSpansFilterListInput {
  elemMatch: PrismicGlobalContentsDataRawBody1PrimaryTextSpansFilterInput
}

input PrismicGlobalContentsDataRawBody1PrimaryTextSpansFilterInput {
  start: IntQueryOperatorInput
  end: IntQueryOperatorInput
  type: StringQueryOperatorInput
  data: PrismicGlobalContentsDataRawBody1PrimaryTextSpansDataFilterInput
}

input PrismicGlobalContentsDataRawBody1PrimaryTextSpansDataFilterInput {
  link_type: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

type PrismicGlobalContentsConnection {
  totalCount: Int!
  edges: [PrismicGlobalContentsEdge!]!
  nodes: [PrismicGlobalContents!]!
  pageInfo: PageInfo!
  distinct(field: PrismicGlobalContentsFieldsEnum!): [String!]!
  max(field: PrismicGlobalContentsFieldsEnum!): Float
  min(field: PrismicGlobalContentsFieldsEnum!): Float
  sum(field: PrismicGlobalContentsFieldsEnum!): Float
  group(skip: Int, limit: Int, field: PrismicGlobalContentsFieldsEnum!): [PrismicGlobalContentsGroupConnection!]!
}

type PrismicGlobalContentsEdge {
  next: PrismicGlobalContents
  node: PrismicGlobalContents!
  previous: PrismicGlobalContents
}

enum PrismicGlobalContentsFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  type
  href
  tags
  first_publication_date
  last_publication_date
  slugs
  lang
  alternate_languages
  alternate_languages___id
  alternate_languages___type
  alternate_languages___lang
  data___main_page_title
  data___main_page_description
  data___main_opengraph_image_link
  data___google_play_link
  data___app_store_link
  data___popular_items_api
  data___body
  data___body___slice_type
  data___body___items
  data___body___items___icon
  data___body___items___text
  data___body___items___user_name
  data___body___items___user_region
  data___body___items___content
  data___body___items___text_highlight_color
  data___body___primary___title
  data___body___primary___more_button
  data___body___primary___top_icon
  data___body___primary___top_text
  data___body___primary___text
  data___body___primary___background_color
  data___body___primary___text_highlight_color
  data___body___primary___phone_mockup_component
  data___body___primary___text_on_right
  data___about_page_title
  data___about_page_description
  data___about_opengraph_image_link
  data___about_title
  data___about_title___type
  data___about_title___text
  data___about_background_image___dimensions___width
  data___about_background_image___dimensions___height
  data___about_background_image___alt
  data___about_background_image___url
  data___body1
  data___body1___slice_type
  data___body1___items
  data___body1___items___text
  data___body1___items___date
  data___body1___primary___subtitle
  data___body1___primary___text
  prismicId
  dataString
  dataRaw___main_page_title
  dataRaw___main_page_description
  dataRaw___main_opengraph_image_link
  dataRaw___google_play_link
  dataRaw___app_store_link
  dataRaw___popular_items_api
  dataRaw___body
  dataRaw___body___slice_type
  dataRaw___body___items
  dataRaw___body___items___icon
  dataRaw___body___items___text
  dataRaw___body___items___user_name
  dataRaw___body___items___user_region
  dataRaw___body___items___content
  dataRaw___body___items___text_highlight_color
  dataRaw___body___primary___title
  dataRaw___body___primary___more_button
  dataRaw___body___primary___top_icon
  dataRaw___body___primary___top_text
  dataRaw___body___primary___text
  dataRaw___body___primary___background_color
  dataRaw___body___primary___text_highlight_color
  dataRaw___body___primary___phone_mockup_component
  dataRaw___body___primary___text_on_right
  dataRaw___about_page_title
  dataRaw___about_page_description
  dataRaw___about_opengraph_image_link
  dataRaw___about_title
  dataRaw___about_title___type
  dataRaw___about_title___text
  dataRaw___about_background_image___dimensions___width
  dataRaw___about_background_image___dimensions___height
  dataRaw___about_background_image___alt
  dataRaw___about_background_image___url
  dataRaw___body1
  dataRaw___body1___slice_type
  dataRaw___body1___items
  dataRaw___body1___items___text
  dataRaw___body1___items___date
  dataRaw___body1___primary___subtitle
  dataRaw___body1___primary___text
  _previewable
}

type PrismicGlobalContentsGroupConnection {
  totalCount: Int!
  edges: [PrismicGlobalContentsEdge!]!
  nodes: [PrismicGlobalContents!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input PrismicGlobalContentsFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  type: StringQueryOperatorInput
  href: StringQueryOperatorInput
  tags: StringQueryOperatorInput
  first_publication_date: DateQueryOperatorInput
  last_publication_date: DateQueryOperatorInput
  slugs: StringQueryOperatorInput
  lang: StringQueryOperatorInput
  alternate_languages: PrismicGlobalContentsAlternate_languagesFilterListInput
  data: PrismicGlobalContentsDataFilterInput
  prismicId: StringQueryOperatorInput
  dataString: StringQueryOperatorInput
  dataRaw: PrismicGlobalContentsDataRawFilterInput
  _previewable: StringQueryOperatorInput
}

input PrismicGlobalContentsSortInput {
  fields: [PrismicGlobalContentsFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input PrismicTeamContentsDataFilterInput {
  main_page_title: PrismicTeamContentsDataMain_page_titleFilterListInput
  main_body: PrismicTeamContentsDataMain_bodyFilterListInput
  culture_page_title: PrismicTeamContentsDataCulture_page_titleFilterListInput
  culture_body: PrismicTeamContentsDataCulture_bodyFilterListInput
  life_page_title: PrismicTeamContentsDataLife_page_titleFilterListInput
  life_body: PrismicTeamContentsDataLife_bodyFilterListInput
}

input PrismicTeamContentsDataMain_page_titleFilterListInput {
  elemMatch: PrismicTeamContentsDataMain_page_titleFilterInput
}

input PrismicTeamContentsDataMain_page_titleFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataMain_bodyFilterListInput {
  elemMatch: PrismicTeamContentsDataMain_bodyFilterInput
}

input PrismicTeamContentsDataMain_bodyFilterInput {
  slice_type: StringQueryOperatorInput
  items: PrismicTeamContentsDataMain_bodyItemsFilterListInput
  primary: PrismicTeamContentsDataMain_bodyPrimaryFilterInput
}

input PrismicTeamContentsDataMain_bodyItemsFilterListInput {
  elemMatch: PrismicTeamContentsDataMain_bodyItemsFilterInput
}

input PrismicTeamContentsDataMain_bodyItemsFilterInput {
  image: PrismicTeamContentsDataMain_bodyItemsImageFilterInput
  quote: StringQueryOperatorInput
  who: StringQueryOperatorInput
}

input PrismicTeamContentsDataMain_bodyItemsImageFilterInput {
  dimensions: PrismicTeamContentsDataMain_bodyItemsImageDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicTeamContentsDataMain_bodyItemsImageDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicTeamContentsDataMain_bodyPrimaryFilterInput {
  key_visual_image: PrismicTeamContentsDataMain_bodyPrimaryKey_visual_imageFilterInput
  expanded: BooleanQueryOperatorInput
  description: PrismicTeamContentsDataMain_bodyPrimaryDescriptionFilterListInput
  key_text: StringQueryOperatorInput
  title: PrismicTeamContentsDataMain_bodyPrimaryTitleFilterListInput
  inverted: BooleanQueryOperatorInput
  link: PrismicTeamContentsDataMain_bodyPrimaryLinkFilterInput
  link_text: StringQueryOperatorInput
  illustration: PrismicTeamContentsDataMain_bodyPrimaryIllustrationFilterInput
  thumbnail: PrismicTeamContentsDataMain_bodyPrimaryThumbnailFilterInput
  background_color: StringQueryOperatorInput
}

input PrismicTeamContentsDataMain_bodyPrimaryKey_visual_imageFilterInput {
  dimensions: PrismicTeamContentsDataMain_bodyPrimaryKey_visual_imageDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicTeamContentsDataMain_bodyPrimaryKey_visual_imageDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicTeamContentsDataMain_bodyPrimaryDescriptionFilterListInput {
  elemMatch: PrismicTeamContentsDataMain_bodyPrimaryDescriptionFilterInput
}

input PrismicTeamContentsDataMain_bodyPrimaryDescriptionFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataMain_bodyPrimaryTitleFilterListInput {
  elemMatch: PrismicTeamContentsDataMain_bodyPrimaryTitleFilterInput
}

input PrismicTeamContentsDataMain_bodyPrimaryTitleFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataMain_bodyPrimaryLinkFilterInput {
  link_type: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input PrismicTeamContentsDataMain_bodyPrimaryIllustrationFilterInput {
  dimensions: PrismicTeamContentsDataMain_bodyPrimaryIllustrationDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicTeamContentsDataMain_bodyPrimaryIllustrationDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicTeamContentsDataMain_bodyPrimaryThumbnailFilterInput {
  dimensions: PrismicTeamContentsDataMain_bodyPrimaryThumbnailDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicTeamContentsDataMain_bodyPrimaryThumbnailDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicTeamContentsDataCulture_page_titleFilterListInput {
  elemMatch: PrismicTeamContentsDataCulture_page_titleFilterInput
}

input PrismicTeamContentsDataCulture_page_titleFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataCulture_bodyFilterListInput {
  elemMatch: PrismicTeamContentsDataCulture_bodyFilterInput
}

input PrismicTeamContentsDataCulture_bodyFilterInput {
  slice_type: StringQueryOperatorInput
  items: PrismicTeamContentsDataCulture_bodyItemsFilterListInput
  primary: PrismicTeamContentsDataCulture_bodyPrimaryFilterInput
}

input PrismicTeamContentsDataCulture_bodyItemsFilterListInput {
  elemMatch: PrismicTeamContentsDataCulture_bodyItemsFilterInput
}

input PrismicTeamContentsDataCulture_bodyItemsFilterInput {
  group: StringQueryOperatorInput
  key_text: StringQueryOperatorInput
  description: PrismicTeamContentsDataCulture_bodyItemsDescriptionFilterListInput
  subtitle: StringQueryOperatorInput
}

input PrismicTeamContentsDataCulture_bodyItemsDescriptionFilterListInput {
  elemMatch: PrismicTeamContentsDataCulture_bodyItemsDescriptionFilterInput
}

input PrismicTeamContentsDataCulture_bodyItemsDescriptionFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataCulture_bodyPrimaryFilterInput {
  key_visual_image: PrismicTeamContentsDataCulture_bodyPrimaryKey_visual_imageFilterInput
  expanded: BooleanQueryOperatorInput
  description: PrismicTeamContentsDataCulture_bodyPrimaryDescriptionFilterListInput
  title: PrismicTeamContentsDataCulture_bodyPrimaryTitleFilterListInput
  illustration: PrismicTeamContentsDataCulture_bodyPrimaryIllustrationFilterInput
  inverted: BooleanQueryOperatorInput
  link: PrismicTeamContentsDataCulture_bodyPrimaryLinkFilterInput
  link_text: StringQueryOperatorInput
}

input PrismicTeamContentsDataCulture_bodyPrimaryKey_visual_imageFilterInput {
  dimensions: PrismicTeamContentsDataCulture_bodyPrimaryKey_visual_imageDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicTeamContentsDataCulture_bodyPrimaryKey_visual_imageDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicTeamContentsDataCulture_bodyPrimaryDescriptionFilterListInput {
  elemMatch: PrismicTeamContentsDataCulture_bodyPrimaryDescriptionFilterInput
}

input PrismicTeamContentsDataCulture_bodyPrimaryDescriptionFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataCulture_bodyPrimaryTitleFilterListInput {
  elemMatch: PrismicTeamContentsDataCulture_bodyPrimaryTitleFilterInput
}

input PrismicTeamContentsDataCulture_bodyPrimaryTitleFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataCulture_bodyPrimaryIllustrationFilterInput {
  dimensions: PrismicTeamContentsDataCulture_bodyPrimaryIllustrationDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicTeamContentsDataCulture_bodyPrimaryIllustrationDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicTeamContentsDataCulture_bodyPrimaryLinkFilterInput {
  link_type: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input PrismicTeamContentsDataLife_page_titleFilterListInput {
  elemMatch: PrismicTeamContentsDataLife_page_titleFilterInput
}

input PrismicTeamContentsDataLife_page_titleFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataLife_bodyFilterListInput {
  elemMatch: PrismicTeamContentsDataLife_bodyFilterInput
}

input PrismicTeamContentsDataLife_bodyFilterInput {
  slice_type: StringQueryOperatorInput
  items: PrismicTeamContentsDataLife_bodyItemsFilterListInput
  primary: PrismicTeamContentsDataLife_bodyPrimaryFilterInput
}

input PrismicTeamContentsDataLife_bodyItemsFilterListInput {
  elemMatch: PrismicTeamContentsDataLife_bodyItemsFilterInput
}

input PrismicTeamContentsDataLife_bodyItemsFilterInput {
  thumbnail_image: PrismicTeamContentsDataLife_bodyItemsThumbnail_imageFilterInput
  thumbnail_description: PrismicTeamContentsDataLife_bodyItemsThumbnail_descriptionFilterListInput
}

input PrismicTeamContentsDataLife_bodyItemsThumbnail_imageFilterInput {
  dimensions: PrismicTeamContentsDataLife_bodyItemsThumbnail_imageDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicTeamContentsDataLife_bodyItemsThumbnail_imageDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicTeamContentsDataLife_bodyItemsThumbnail_descriptionFilterListInput {
  elemMatch: PrismicTeamContentsDataLife_bodyItemsThumbnail_descriptionFilterInput
}

input PrismicTeamContentsDataLife_bodyItemsThumbnail_descriptionFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataLife_bodyPrimaryFilterInput {
  title: PrismicTeamContentsDataLife_bodyPrimaryTitleFilterListInput
  body_text: PrismicTeamContentsDataLife_bodyPrimaryBody_textFilterListInput
}

input PrismicTeamContentsDataLife_bodyPrimaryTitleFilterListInput {
  elemMatch: PrismicTeamContentsDataLife_bodyPrimaryTitleFilterInput
}

input PrismicTeamContentsDataLife_bodyPrimaryTitleFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataLife_bodyPrimaryBody_textFilterListInput {
  elemMatch: PrismicTeamContentsDataLife_bodyPrimaryBody_textFilterInput
}

input PrismicTeamContentsDataLife_bodyPrimaryBody_textFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawFilterInput {
  main_page_title: PrismicTeamContentsDataRawMain_page_titleFilterListInput
  main_body: PrismicTeamContentsDataRawMain_bodyFilterListInput
  culture_page_title: PrismicTeamContentsDataRawCulture_page_titleFilterListInput
  culture_body: PrismicTeamContentsDataRawCulture_bodyFilterListInput
  life_page_title: PrismicTeamContentsDataRawLife_page_titleFilterListInput
  life_body: PrismicTeamContentsDataRawLife_bodyFilterListInput
}

input PrismicTeamContentsDataRawMain_page_titleFilterListInput {
  elemMatch: PrismicTeamContentsDataRawMain_page_titleFilterInput
}

input PrismicTeamContentsDataRawMain_page_titleFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawMain_bodyFilterListInput {
  elemMatch: PrismicTeamContentsDataRawMain_bodyFilterInput
}

input PrismicTeamContentsDataRawMain_bodyFilterInput {
  slice_type: StringQueryOperatorInput
  items: PrismicTeamContentsDataRawMain_bodyItemsFilterListInput
  primary: PrismicTeamContentsDataRawMain_bodyPrimaryFilterInput
}

input PrismicTeamContentsDataRawMain_bodyItemsFilterListInput {
  elemMatch: PrismicTeamContentsDataRawMain_bodyItemsFilterInput
}

input PrismicTeamContentsDataRawMain_bodyItemsFilterInput {
  image: PrismicTeamContentsDataRawMain_bodyItemsImageFilterInput
  quote: StringQueryOperatorInput
  who: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawMain_bodyItemsImageFilterInput {
  dimensions: PrismicTeamContentsDataRawMain_bodyItemsImageDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawMain_bodyItemsImageDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicTeamContentsDataRawMain_bodyPrimaryFilterInput {
  key_visual_image: PrismicTeamContentsDataRawMain_bodyPrimaryKey_visual_imageFilterInput
  expanded: BooleanQueryOperatorInput
  description: PrismicTeamContentsDataRawMain_bodyPrimaryDescriptionFilterListInput
  key_text: StringQueryOperatorInput
  title: PrismicTeamContentsDataRawMain_bodyPrimaryTitleFilterListInput
  inverted: BooleanQueryOperatorInput
  link: PrismicTeamContentsDataRawMain_bodyPrimaryLinkFilterInput
  link_text: StringQueryOperatorInput
  illustration: PrismicTeamContentsDataRawMain_bodyPrimaryIllustrationFilterInput
  thumbnail: PrismicTeamContentsDataRawMain_bodyPrimaryThumbnailFilterInput
  background_color: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawMain_bodyPrimaryKey_visual_imageFilterInput {
  dimensions: PrismicTeamContentsDataRawMain_bodyPrimaryKey_visual_imageDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawMain_bodyPrimaryKey_visual_imageDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicTeamContentsDataRawMain_bodyPrimaryDescriptionFilterListInput {
  elemMatch: PrismicTeamContentsDataRawMain_bodyPrimaryDescriptionFilterInput
}

input PrismicTeamContentsDataRawMain_bodyPrimaryDescriptionFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawMain_bodyPrimaryTitleFilterListInput {
  elemMatch: PrismicTeamContentsDataRawMain_bodyPrimaryTitleFilterInput
}

input PrismicTeamContentsDataRawMain_bodyPrimaryTitleFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawMain_bodyPrimaryLinkFilterInput {
  link_type: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawMain_bodyPrimaryIllustrationFilterInput {
  dimensions: PrismicTeamContentsDataRawMain_bodyPrimaryIllustrationDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawMain_bodyPrimaryIllustrationDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicTeamContentsDataRawMain_bodyPrimaryThumbnailFilterInput {
  dimensions: PrismicTeamContentsDataRawMain_bodyPrimaryThumbnailDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawMain_bodyPrimaryThumbnailDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicTeamContentsDataRawCulture_page_titleFilterListInput {
  elemMatch: PrismicTeamContentsDataRawCulture_page_titleFilterInput
}

input PrismicTeamContentsDataRawCulture_page_titleFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawCulture_bodyFilterListInput {
  elemMatch: PrismicTeamContentsDataRawCulture_bodyFilterInput
}

input PrismicTeamContentsDataRawCulture_bodyFilterInput {
  slice_type: StringQueryOperatorInput
  items: PrismicTeamContentsDataRawCulture_bodyItemsFilterListInput
  primary: PrismicTeamContentsDataRawCulture_bodyPrimaryFilterInput
}

input PrismicTeamContentsDataRawCulture_bodyItemsFilterListInput {
  elemMatch: PrismicTeamContentsDataRawCulture_bodyItemsFilterInput
}

input PrismicTeamContentsDataRawCulture_bodyItemsFilterInput {
  group: StringQueryOperatorInput
  key_text: StringQueryOperatorInput
  description: PrismicTeamContentsDataRawCulture_bodyItemsDescriptionFilterListInput
  subtitle: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawCulture_bodyItemsDescriptionFilterListInput {
  elemMatch: PrismicTeamContentsDataRawCulture_bodyItemsDescriptionFilterInput
}

input PrismicTeamContentsDataRawCulture_bodyItemsDescriptionFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawCulture_bodyPrimaryFilterInput {
  key_visual_image: PrismicTeamContentsDataRawCulture_bodyPrimaryKey_visual_imageFilterInput
  expanded: BooleanQueryOperatorInput
  description: PrismicTeamContentsDataRawCulture_bodyPrimaryDescriptionFilterListInput
  title: PrismicTeamContentsDataRawCulture_bodyPrimaryTitleFilterListInput
  illustration: PrismicTeamContentsDataRawCulture_bodyPrimaryIllustrationFilterInput
  inverted: BooleanQueryOperatorInput
  link: PrismicTeamContentsDataRawCulture_bodyPrimaryLinkFilterInput
  link_text: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawCulture_bodyPrimaryKey_visual_imageFilterInput {
  dimensions: PrismicTeamContentsDataRawCulture_bodyPrimaryKey_visual_imageDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawCulture_bodyPrimaryKey_visual_imageDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicTeamContentsDataRawCulture_bodyPrimaryDescriptionFilterListInput {
  elemMatch: PrismicTeamContentsDataRawCulture_bodyPrimaryDescriptionFilterInput
}

input PrismicTeamContentsDataRawCulture_bodyPrimaryDescriptionFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawCulture_bodyPrimaryTitleFilterListInput {
  elemMatch: PrismicTeamContentsDataRawCulture_bodyPrimaryTitleFilterInput
}

input PrismicTeamContentsDataRawCulture_bodyPrimaryTitleFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawCulture_bodyPrimaryIllustrationFilterInput {
  dimensions: PrismicTeamContentsDataRawCulture_bodyPrimaryIllustrationDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawCulture_bodyPrimaryIllustrationDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicTeamContentsDataRawCulture_bodyPrimaryLinkFilterInput {
  link_type: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawLife_page_titleFilterListInput {
  elemMatch: PrismicTeamContentsDataRawLife_page_titleFilterInput
}

input PrismicTeamContentsDataRawLife_page_titleFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawLife_bodyFilterListInput {
  elemMatch: PrismicTeamContentsDataRawLife_bodyFilterInput
}

input PrismicTeamContentsDataRawLife_bodyFilterInput {
  slice_type: StringQueryOperatorInput
  items: PrismicTeamContentsDataRawLife_bodyItemsFilterListInput
  primary: PrismicTeamContentsDataRawLife_bodyPrimaryFilterInput
}

input PrismicTeamContentsDataRawLife_bodyItemsFilterListInput {
  elemMatch: PrismicTeamContentsDataRawLife_bodyItemsFilterInput
}

input PrismicTeamContentsDataRawLife_bodyItemsFilterInput {
  thumbnail_image: PrismicTeamContentsDataRawLife_bodyItemsThumbnail_imageFilterInput
  thumbnail_description: PrismicTeamContentsDataRawLife_bodyItemsThumbnail_descriptionFilterListInput
}

input PrismicTeamContentsDataRawLife_bodyItemsThumbnail_imageFilterInput {
  dimensions: PrismicTeamContentsDataRawLife_bodyItemsThumbnail_imageDimensionsFilterInput
  url: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawLife_bodyItemsThumbnail_imageDimensionsFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input PrismicTeamContentsDataRawLife_bodyItemsThumbnail_descriptionFilterListInput {
  elemMatch: PrismicTeamContentsDataRawLife_bodyItemsThumbnail_descriptionFilterInput
}

input PrismicTeamContentsDataRawLife_bodyItemsThumbnail_descriptionFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawLife_bodyPrimaryFilterInput {
  title: PrismicTeamContentsDataRawLife_bodyPrimaryTitleFilterListInput
  body_text: PrismicTeamContentsDataRawLife_bodyPrimaryBody_textFilterListInput
}

input PrismicTeamContentsDataRawLife_bodyPrimaryTitleFilterListInput {
  elemMatch: PrismicTeamContentsDataRawLife_bodyPrimaryTitleFilterInput
}

input PrismicTeamContentsDataRawLife_bodyPrimaryTitleFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input PrismicTeamContentsDataRawLife_bodyPrimaryBody_textFilterListInput {
  elemMatch: PrismicTeamContentsDataRawLife_bodyPrimaryBody_textFilterInput
}

input PrismicTeamContentsDataRawLife_bodyPrimaryBody_textFilterInput {
  type: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

type PrismicTeamContentsConnection {
  totalCount: Int!
  edges: [PrismicTeamContentsEdge!]!
  nodes: [PrismicTeamContents!]!
  pageInfo: PageInfo!
  distinct(field: PrismicTeamContentsFieldsEnum!): [String!]!
  max(field: PrismicTeamContentsFieldsEnum!): Float
  min(field: PrismicTeamContentsFieldsEnum!): Float
  sum(field: PrismicTeamContentsFieldsEnum!): Float
  group(skip: Int, limit: Int, field: PrismicTeamContentsFieldsEnum!): [PrismicTeamContentsGroupConnection!]!
}

type PrismicTeamContentsEdge {
  next: PrismicTeamContents
  node: PrismicTeamContents!
  previous: PrismicTeamContents
}

enum PrismicTeamContentsFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  type
  href
  tags
  first_publication_date
  last_publication_date
  slugs
  lang
  data___main_page_title
  data___main_page_title___type
  data___main_page_title___text
  data___main_body
  data___main_body___slice_type
  data___main_body___items
  data___main_body___items___quote
  data___main_body___items___who
  data___main_body___primary___expanded
  data___main_body___primary___description
  data___main_body___primary___key_text
  data___main_body___primary___title
  data___main_body___primary___inverted
  data___main_body___primary___link_text
  data___main_body___primary___background_color
  data___culture_page_title
  data___culture_page_title___type
  data___culture_page_title___text
  data___culture_body
  data___culture_body___slice_type
  data___culture_body___items
  data___culture_body___items___group
  data___culture_body___items___key_text
  data___culture_body___items___description
  data___culture_body___items___subtitle
  data___culture_body___primary___expanded
  data___culture_body___primary___description
  data___culture_body___primary___title
  data___culture_body___primary___inverted
  data___culture_body___primary___link_text
  data___life_page_title
  data___life_page_title___type
  data___life_page_title___text
  data___life_body
  data___life_body___slice_type
  data___life_body___items
  data___life_body___items___thumbnail_description
  data___life_body___primary___title
  data___life_body___primary___body_text
  prismicId
  dataString
  dataRaw___main_page_title
  dataRaw___main_page_title___type
  dataRaw___main_page_title___text
  dataRaw___main_body
  dataRaw___main_body___slice_type
  dataRaw___main_body___items
  dataRaw___main_body___items___quote
  dataRaw___main_body___items___who
  dataRaw___main_body___primary___expanded
  dataRaw___main_body___primary___description
  dataRaw___main_body___primary___key_text
  dataRaw___main_body___primary___title
  dataRaw___main_body___primary___inverted
  dataRaw___main_body___primary___link_text
  dataRaw___main_body___primary___background_color
  dataRaw___culture_page_title
  dataRaw___culture_page_title___type
  dataRaw___culture_page_title___text
  dataRaw___culture_body
  dataRaw___culture_body___slice_type
  dataRaw___culture_body___items
  dataRaw___culture_body___items___group
  dataRaw___culture_body___items___key_text
  dataRaw___culture_body___items___description
  dataRaw___culture_body___items___subtitle
  dataRaw___culture_body___primary___expanded
  dataRaw___culture_body___primary___description
  dataRaw___culture_body___primary___title
  dataRaw___culture_body___primary___inverted
  dataRaw___culture_body___primary___link_text
  dataRaw___life_page_title
  dataRaw___life_page_title___type
  dataRaw___life_page_title___text
  dataRaw___life_body
  dataRaw___life_body___slice_type
  dataRaw___life_body___items
  dataRaw___life_body___items___thumbnail_description
  dataRaw___life_body___primary___title
  dataRaw___life_body___primary___body_text
  _previewable
}

type PrismicTeamContentsGroupConnection {
  totalCount: Int!
  edges: [PrismicTeamContentsEdge!]!
  nodes: [PrismicTeamContents!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input PrismicTeamContentsFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  type: StringQueryOperatorInput
  href: StringQueryOperatorInput
  tags: StringQueryOperatorInput
  first_publication_date: DateQueryOperatorInput
  last_publication_date: DateQueryOperatorInput
  slugs: StringQueryOperatorInput
  lang: StringQueryOperatorInput
  data: PrismicTeamContentsDataFilterInput
  prismicId: StringQueryOperatorInput
  dataString: StringQueryOperatorInput
  dataRaw: PrismicTeamContentsDataRawFilterInput
  _previewable: StringQueryOperatorInput
}

input PrismicTeamContentsSortInput {
  fields: [PrismicTeamContentsFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteBuildMetadataConnection {
  totalCount: Int!
  edges: [SiteBuildMetadataEdge!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteBuildMetadataFieldsEnum!): [SiteBuildMetadataGroupConnection!]!
}

type SiteBuildMetadataEdge {
  next: SiteBuildMetadata
  node: SiteBuildMetadata!
  previous: SiteBuildMetadata
}

enum SiteBuildMetadataFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  buildTime
}

type SiteBuildMetadataGroupConnection {
  totalCount: Int!
  edges: [SiteBuildMetadataEdge!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SiteBuildMetadataFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  buildTime: DateQueryOperatorInput
}

input SiteBuildMetadataSortInput {
  fields: [SiteBuildMetadataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SitePluginConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  distinct(field: SitePluginFieldsEnum!): [String!]!
  max(field: SitePluginFieldsEnum!): Float
  min(field: SitePluginFieldsEnum!): Float
  sum(field: SitePluginFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SitePluginFieldsEnum!): [SitePluginGroupConnection!]!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

enum SitePluginFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  resolve
  name
  version
  pluginOptions___name
  pluginOptions___path
  pluginOptions___trackingIds
  pluginOptions___pluginConfig___exclude
  pluginOptions___base64Width
  pluginOptions___stripMetadata
  pluginOptions___defaultQuality
  pluginOptions___failOnError
  pluginOptions___sourceMap
  pluginOptions___autoLabel
  pluginOptions___labelFormat
  pluginOptions___cssPropOptimization
  pluginOptions___root
  pluginOptions___aliases____src
  pluginOptions___outputPath
  pluginOptions___emitSchema___src___generated___gatsby_introspection_json
  pluginOptions___emitSchema___src___generated___gatsby_schema_graphql
  pluginOptions___emitPluginDocuments___src___generated___gatsby_plugin_documents_graphql
  pluginOptions___short_name
  pluginOptions___start_url
  pluginOptions___background_color
  pluginOptions___theme_color
  pluginOptions___display
  pluginOptions___icon
  pluginOptions___legacy
  pluginOptions___theme_color_in_head
  pluginOptions___cache_busting_mode
  pluginOptions___crossOrigin
  pluginOptions___include_favicon
  pluginOptions___cacheDigest
  pluginOptions___repositoryName
  pluginOptions___prismicToolbar
  pluginOptions___pathCheck
  pluginOptions___allExtensions
  pluginOptions___isTSX
  pluginOptions___jsxPragma
  nodeAPIs
  browserAPIs
  ssrAPIs
  pluginFilepath
  packageJson___name
  packageJson___description
  packageJson___version
  packageJson___main
  packageJson___license
  packageJson___dependencies
  packageJson___dependencies___name
  packageJson___dependencies___version
  packageJson___devDependencies
  packageJson___devDependencies___name
  packageJson___devDependencies___version
  packageJson___peerDependencies
  packageJson___peerDependencies___name
  packageJson___peerDependencies___version
  packageJson___keywords
}

type SitePluginGroupConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}
