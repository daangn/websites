diff --git a/node_modules/gatsby-plugin-prismic-previews/dist/gatsby-node.js b/node_modules/gatsby-plugin-prismic-previews/dist/gatsby-node.js
index 2c55fbe..e06301e 100644
--- a/node_modules/gatsby-plugin-prismic-previews/dist/gatsby-node.js
+++ b/node_modules/gatsby-plugin-prismic-previews/dist/gatsby-node.js
@@ -1,2 +1,2 @@
-var z=Object.create,E=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var K=Object.getOwnPropertyNames;var X=Object.getPrototypeOf,Q=Object.prototype.hasOwnProperty;var l=e=>E(e,"__esModule",{value:!0});var $=(e,t)=>{for(var i in t)E(e,i,{get:t[i],enumerable:!0})},q=(e,t,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of K(t))!Q.call(e,s)&&s!=="default"&&E(e,s,{get:()=>t[s],enumerable:!(i=j(t,s))||i.enumerable});return e},r=e=>q(l(E(e!=null?z(X(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);l(exports);$(exports,{onPostBootstrap:()=>C,pluginOptionsSchema:()=>N});var u=r(require("ts-prismic")),b=r(require("fs/promises")),a=r(require("gatsby-source-prismic"));var P=r(require("chalk"));var d="new",h=!0;var g="type-paths-store %s";var c="gatsby-plugin-prismic-previews(%s) - %s",_="Wrote type paths store to %s",R=`Type paths for this repository could not be found. Check that you have ${P.default.cyan("gatsby-source-prismic")} configured with the same repository name and type prefix (if used) in ${P.default.cyan("gatsby-node.js")}.`;var N=function(e){let{Joi:t}=e;return t.object({repositoryName:t.string().required(),accessToken:t.string(),promptForAccessToken:t.boolean().default(h),apiEndpoint:t.string().default(s=>u.defaultEndpoint(s.repositoryName)),graphQuery:t.string(),fetchLinks:t.array().items(t.string().required()),lang:t.string().default(a.DEFAULT_LANG),imageImgixParams:t.object().default(a.DEFAULT_IMGIX_PARAMS),imagePlaceholderImgixParams:t.object().default(a.DEFAULT_PLACEHOLDER_IMGIX_PARAMS),typePrefix:t.string(),toolbar:t.string().valid("new","legacy").default(d),writeTypePathsToFilesystem:t.function().default(()=>async s=>await b.writeFile(s.publicPath,s.serializedTypePaths))}).oxor("fetchLinks","graphQuery")};var y=r(require("gatsby-source-prismic")),Y=r(require("path")),o=r(require("fp-ts/ReaderTaskEither")),T=r(require("fp-ts/TaskEither")),U=r(require("fp-ts/Array")),n=r(require("fp-ts/Task")),m=r(require("fp-ts/function")),W=r(require("gatsby-node-helpers"));var p=(e,...t)=>{let i=0;return e.replace(/%s/g,()=>t[i++])};var S=r(require("fp-ts/ReaderTaskEither")),A=r(require("fp-ts/function"));var O=e=>S.asks(t=>(0,A.pipe)(p(c,t.repositoryName,e),t.reportPanic));var x=r(require("fp-ts/Record")),L=r(require("fp-ts/Semigroup")),M=r(require("fp-ts/Array")),v=r(require("fp-ts/function"));var F=r(require("tiny-hashes/md5")),I=e=>process.env.NODE_ENV==="production"?(0,F.default)(e.join(".")):e.join(".");var B=e=>(0,v.pipe)(x.fromFoldableMap(L.last(),M.Foldable)(e,t=>[I(t.path),t.type]),JSON.stringify);var k=r(require("fp-ts/ReaderTaskEither")),G=r(require("fp-ts/function"));var D=e=>k.asks(t=>(0,G.pipe)(p(c,t.repositoryName,e),t.reportVerbose));var f=r(require("fp-ts/ReaderTaskEither")),H=r(require("fp-ts/function")),w=r(require("tiny-hashes/md5"));var V=(0,H.pipe)(f.asks(e=>(0,w.default)(p(g,e.repositoryName))),f.map(e=>`${e}.json`));var J=(0,m.pipe)(o.ask(),o.bind("nodes",e=>o.right(e.getNodesByType(e.nodeHelpers.createTypeName("TypePathType")))),o.chainW(o.fromPredicate(e=>U.isNonEmpty(e.nodes),()=>new Error(R))),o.bind("serializedTypePaths",e=>o.right(B(e.nodes))),o.bindW("filename",()=>V),o.bind("publicPath",e=>o.right(Y.join("public","static",e.filename))),o.chainFirst(e=>o.fromTaskEither(T.tryCatch(()=>Promise.resolve(e.writeTypePathsToFilesystem({publicPath:e.publicPath,serializedTypePaths:e.serializedTypePaths})),t=>t))),o.chainFirstW(e=>D(p(_,e.publicPath))),o.map(m.constVoid)),C=async(e,t,i)=>await(0,m.pipe)(J({getNodesByType:e.getNodesByType,reportVerbose:e.reporter.verbose,repositoryName:t.repositoryName,nodeHelpers:(0,W.createNodeHelpers)({typePrefix:[y.GLOBAL_TYPE_PREFIX,t.typePrefix].filter(Boolean).join(" "),fieldPrefix:y.GLOBAL_TYPE_PREFIX,createNodeId:e.createNodeId,createContentDigest:e.createContentDigest}),writeTypePathsToFilesystem:t.writeTypePathsToFilesystem}),T.fold(s=>(0,m.pipe)(O(s.message)({repositoryName:t.repositoryName,reportPanic:e.reporter.panic}),T.fold(()=>n.of(void 0),()=>n.of(void 0))),()=>i?n.fromIO(()=>i(null)):n.of(void 0)))();0&&(module.exports={onPostBootstrap,pluginOptionsSchema});
+var z=Object.create,E=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var K=Object.getOwnPropertyNames;var X=Object.getPrototypeOf,Q=Object.prototype.hasOwnProperty;var l=e=>E(e,"__esModule",{value:!0});var $=(e,t)=>{for(var i in t)E(e,i,{get:t[i],enumerable:!0})},q=(e,t,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of K(t))!Q.call(e,s)&&s!=="default"&&E(e,s,{get:()=>t[s],enumerable:!(i=j(t,s))||i.enumerable});return e},r=e=>q(l(E(e!=null?z(X(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);l(exports);$(exports,{onPostBootstrap:()=>C,pluginOptionsSchema:()=>N});var u=r(require("ts-prismic")),b=r(require("fs").promises),a=r(require("gatsby-source-prismic"));var P=r(require("chalk"));var d="new",h=!0;var g="type-paths-store %s";var c="gatsby-plugin-prismic-previews(%s) - %s",_="Wrote type paths store to %s",R=`Type paths for this repository could not be found. Check that you have ${P.default.cyan("gatsby-source-prismic")} configured with the same repository name and type prefix (if used) in ${P.default.cyan("gatsby-node.js")}.`;var N=function(e){let{Joi:t}=e;return t.object({repositoryName:t.string().required(),accessToken:t.string(),promptForAccessToken:t.boolean().default(h),apiEndpoint:t.string().default(s=>u.defaultEndpoint(s.repositoryName)),graphQuery:t.string(),fetchLinks:t.array().items(t.string().required()),lang:t.string().default(a.DEFAULT_LANG),imageImgixParams:t.object().default(a.DEFAULT_IMGIX_PARAMS),imagePlaceholderImgixParams:t.object().default(a.DEFAULT_PLACEHOLDER_IMGIX_PARAMS),typePrefix:t.string(),toolbar:t.string().valid("new","legacy").default(d),writeTypePathsToFilesystem:t.function().default(()=>async s=>await b.writeFile(s.publicPath,s.serializedTypePaths))}).oxor("fetchLinks","graphQuery")};var y=r(require("gatsby-source-prismic")),Y=r(require("path")),o=r(require("fp-ts/ReaderTaskEither")),T=r(require("fp-ts/TaskEither")),U=r(require("fp-ts/Array")),n=r(require("fp-ts/Task")),m=r(require("fp-ts/function")),W=r(require("gatsby-node-helpers"));var p=(e,...t)=>{let i=0;return e.replace(/%s/g,()=>t[i++])};var S=r(require("fp-ts/ReaderTaskEither")),A=r(require("fp-ts/function"));var O=e=>S.asks(t=>(0,A.pipe)(p(c,t.repositoryName,e),t.reportPanic));var x=r(require("fp-ts/Record")),L=r(require("fp-ts/Semigroup")),M=r(require("fp-ts/Array")),v=r(require("fp-ts/function"));var F=r(require("tiny-hashes/md5")),I=e=>process.env.NODE_ENV==="production"?(0,F.default)(e.join(".")):e.join(".");var B=e=>(0,v.pipe)(x.fromFoldableMap(L.last(),M.Foldable)(e,t=>[I(t.path),t.type]),JSON.stringify);var k=r(require("fp-ts/ReaderTaskEither")),G=r(require("fp-ts/function"));var D=e=>k.asks(t=>(0,G.pipe)(p(c,t.repositoryName,e),t.reportVerbose));var f=r(require("fp-ts/ReaderTaskEither")),H=r(require("fp-ts/function")),w=r(require("tiny-hashes/md5"));var V=(0,H.pipe)(f.asks(e=>(0,w.default)(p(g,e.repositoryName))),f.map(e=>`${e}.json`));var J=(0,m.pipe)(o.ask(),o.bind("nodes",e=>o.right(e.getNodesByType(e.nodeHelpers.createTypeName("TypePathType")))),o.chainW(o.fromPredicate(e=>U.isNonEmpty(e.nodes),()=>new Error(R))),o.bind("serializedTypePaths",e=>o.right(B(e.nodes))),o.bindW("filename",()=>V),o.bind("publicPath",e=>o.right(Y.join("public","static",e.filename))),o.chainFirst(e=>o.fromTaskEither(T.tryCatch(()=>Promise.resolve(e.writeTypePathsToFilesystem({publicPath:e.publicPath,serializedTypePaths:e.serializedTypePaths})),t=>t))),o.chainFirstW(e=>D(p(_,e.publicPath))),o.map(m.constVoid)),C=async(e,t,i)=>await(0,m.pipe)(J({getNodesByType:e.getNodesByType,reportVerbose:e.reporter.verbose,repositoryName:t.repositoryName,nodeHelpers:(0,W.createNodeHelpers)({typePrefix:[y.GLOBAL_TYPE_PREFIX,t.typePrefix].filter(Boolean).join(" "),fieldPrefix:y.GLOBAL_TYPE_PREFIX,createNodeId:e.createNodeId,createContentDigest:e.createContentDigest}),writeTypePathsToFilesystem:t.writeTypePathsToFilesystem}),T.fold(s=>(0,m.pipe)(O(s.message)({repositoryName:t.repositoryName,reportPanic:e.reporter.panic}),T.fold(()=>n.of(void 0),()=>n.of(void 0))),()=>i?n.fromIO(()=>i(null)):n.of(void 0)))();0&&(module.exports={onPostBootstrap,pluginOptionsSchema});
 //# sourceMappingURL=gatsby-node.js.map
